# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rails-html-sanitizer` gem.
# Please instead update this file by running `bin/tapioca gem rails-html-sanitizer`.

module AbstractController::AssetPaths
  extend ::ActiveSupport::Concern
end

class AbstractController::Base
  include ::ActiveSupport::Configurable
  extend ::ActiveSupport::Configurable::ClassMethods
  extend ::ActiveSupport::DescendantsTracker

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#161
  def action_methods; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def action_name; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def action_name=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#175
  def available_action?(action_name); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#156
  def controller_path; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def formats; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def formats=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#194
  def inspect; end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#182
  def performed?; end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#142
  def process(action, *args, **_arg2); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def response_body; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def response_body=(_arg0); end

  def send_action(*_arg0); end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#246
  def _find_action_name(action_name); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#228
  def _handle_action_missing(*args); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#282
  def _valid_action_name?(action_name); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#204
  def action_method?(name); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#273
  def method_for_action(action_name); end

  # source://actionpack/7.0.4/lib/abstract_controller/base.rb#214
  def process_action(*_arg0, **_arg1, &_arg2); end

  class << self
    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#50
    def abstract; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#55
    def abstract!; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#50
    def abstract?; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#89
    def action_methods; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#107
    def clear_action_methods!; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#121
    def controller_path; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#59
    def inherited(klass); end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#74
    def internal_methods; end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#126
    def method_added(name); end

    # source://actionpack/7.0.4/lib/abstract_controller/base.rb#190
    def supports_path?; end
  end
end

module AbstractController::Caching
  include ::AbstractController::Caching::ConfigMethods
  extend ::ActiveSupport::Concern
  extend ::ActiveSupport::Autoload
  include GeneratedInstanceMethods
  include ::AbstractController::Caching::Fragments

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ConfigMethods

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#52
  def view_cache_dependencies; end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#58
  def cache(key, options = T.unsafe(nil), &block); end

  module GeneratedClassMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module AbstractController::Caching::ClassMethods
  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#47
  def view_cache_dependency(&dependency); end
end

module AbstractController::Caching::ConfigMethods
  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#13
  def cache_store; end

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#17
  def cache_store=(store); end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#22
  def cache_configured?; end
end

module AbstractController::Caching::Fragments
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#68
  def combined_fragment_cache_key(key); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#132
  def expire_fragment(key, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#105
  def fragment_exist?(key, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#145
  def instrument_fragment_cache(name, key, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#93
  def read_fragment(key, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#80
  def write_fragment(key, content, options = T.unsafe(nil)); end

  module GeneratedClassMethods
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module AbstractController::Caching::Fragments::ClassMethods
  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#57
  def fragment_cache_key(value = T.unsafe(nil), &key); end
end

module AbstractController::Callbacks
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods

  private

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#232
  def process_action(*_arg0, **_arg1, &_arg2); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
  end
end

class AbstractController::Callbacks::ActionFilter
  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#39
  def initialize(actions); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#43
  def after(controller); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#43
  def around(controller); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#43
  def before(controller); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#43
  def match?(controller); end
end

module AbstractController::Callbacks::ClassMethods
  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#96
  def _insert_callbacks(callbacks, block = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#77
  def _normalize_callback_option(options, from, to); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#72
  def _normalize_callback_options(options); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def after_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def append_after_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def append_around_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def append_before_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def around_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#204
  def before_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#210
  def prepend_after_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#210
  def prepend_around_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#210
  def prepend_before_action(*names, &blk); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#218
  def skip_after_action(*names); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#218
  def skip_around_action(*names); end

  # source://actionpack/7.0.4/lib/abstract_controller/callbacks.rb#218
  def skip_before_action(*names); end
end

module AbstractController::Collector
  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def atom(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def bmp(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def css(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def csv(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def gif(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def gzip(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def html(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def ics(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def jpeg(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def js(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def json(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def m4a(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def mp3(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def mp4(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def mpeg(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def multipart_form(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def ogg(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def otf(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def pdf(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def png(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def rss(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def svg(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def text(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def tiff(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def ttf(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def url_encoded_form(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def vcf(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def vtt(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def webm(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def woff(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def woff2(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def xml(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def yaml(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#10
  def zip(*args, **_arg1, &block); end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#26
  def method_missing(symbol, *args, **_arg2, &block); end

  class << self
    # source://actionpack/7.0.4/lib/abstract_controller/collector.rb#7
    def generate_method_for_mime(mime); end
  end
end

module AbstractController::Helpers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#40
  def _helpers; end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

module AbstractController::Helpers::ClassMethods
  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#56
  def _helpers=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#184
  def _helpers_for_modification; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#158
  def clear_helpers; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#147
  def helper(*args, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#79
  def helper_method(*methods); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#48
  def inherited(klass); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#169
  def modules_for_helpers(modules_or_helper_prefixes); end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#203
  def default_helper_module!; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#192
  def define_helpers_module(klass, helpers = T.unsafe(nil)); end
end

class AbstractController::Helpers::MissingHelperError < ::LoadError
  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#27
  def initialize(error, path); end
end

module AbstractController::Logger
  extend ::ActiveSupport::Concern
  include ::ActiveSupport::Benchmarkable
end

module AbstractController::Rendering
  extend ::ActiveSupport::Concern
  include ::ActionView::ViewPaths

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#23
  def render(*args, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#51
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#45
  def render_to_string(*args, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#55
  def rendered_format; end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#63
  def view_assigns; end

  private

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#75
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#90
  def _normalize_options(options); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#116
  def _normalize_render(*args, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#100
  def _process_format(format); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#95
  def _process_options(options); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#103
  def _process_variant(options); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#123
  def _protected_ivars; end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#106
  def _set_html_content_type; end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#112
  def _set_rendered_content_type(format); end

  # source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#109
  def _set_vary_header; end
end

# source://actionpack/7.0.4/lib/abstract_controller/rendering.rb#59
AbstractController::Rendering::DEFAULT_PROTECTED_INSTANCE_VARIABLES = T.let(T.unsafe(nil), Array)

module AbstractController::Translation
  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#33
  def l(object, **options); end

  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#33
  def localize(object, **options); end

  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#7
  def raise_on_missing_translations; end

  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#7
  def raise_on_missing_translations=(val); end

  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#17
  def t(key, **options); end

  # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#17
  def translate(key, **options); end

  class << self
    # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#7
    def raise_on_missing_translations; end

    # source://actionpack/7.0.4/lib/abstract_controller/translation.rb#7
    def raise_on_missing_translations=(val); end
  end
end

module AbstractController::UrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionDispatch::Routing::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/7.0.4/lib/abstract_controller/url_for.rb#14
  def _routes; end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module AbstractController::UrlFor::ClassMethods
  # source://actionpack/7.0.4/lib/abstract_controller/url_for.rb#20
  def _routes; end

  # source://actionpack/7.0.4/lib/abstract_controller/url_for.rb#24
  def action_methods; end
end

class ActionController::Base < ::ActionController::Metal
  include ::ActionView::ViewPaths
  include ::AbstractController::Rendering
  include ::AbstractController::Translation
  include ::AbstractController::AssetPaths
  include ::AbstractController::Helpers
  include ::ActionController::Helpers
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor
  include ::AbstractController::Logger
  include ::ActiveSupport::Benchmarkable
  include ::ActionController::Redirecting
  include ::ActionView::Rendering
  include ::ActionView::Layouts
  include ::ActionController::Rendering
  include ::ActionController::Renderers
  include ::ActionController::Renderers::All
  include ::ActionController::Head
  include ::ActionController::ConditionalGet
  include ::ActionController::EtagWithTemplateDigest
  include ::ActionController::EtagWithFlash
  include ::ActionController::Caching
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching::ConfigMethods
  include ::AbstractController::Caching
  include ::ActionController::MimeResponds
  include ::ActionController::BasicImplicitRender
  include ::ActionController::ImplicitRender
  include ::ActionController::StrongParameters
  include ::ActionController::ParameterEncoding
  include ::ActionController::Cookies
  include ::ActionController::Flash
  include ::ActionController::FormBuilder
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::ActionController::RequestForgeryProtection
  include ::ActionController::ContentSecurityPolicy
  include ::ActionController::PermissionsPolicy
  include ::ActionController::Streaming
  include ::ActionController::DataStreaming
  include ::ActionController::HttpAuthentication::Basic::ControllerMethods
  include ::ActionController::HttpAuthentication::Digest::ControllerMethods
  include ::ActionController::HttpAuthentication::Token::ControllerMethods
  include ::ActionController::DefaultHeaders
  include ::ActionController::Logging
  include ::ActiveSupport::Rescuable
  include ::ActionController::Rescue
  include ::ActionController::Instrumentation
  include ::ActionController::ParamsWrapper
  extend ::ActionView::ViewPaths::ClassMethods
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionController::Helpers::ClassMethods
  extend ::AbstractController::UrlFor::ClassMethods
  extend ::ActionView::Rendering::ClassMethods
  extend ::ActionView::Layouts::ClassMethods
  extend ::ActionController::Rendering::ClassMethods
  extend ::ActionController::Renderers::ClassMethods
  extend ::ActionController::ConditionalGet::ClassMethods
  extend ::AbstractController::Caching::Fragments::ClassMethods
  extend ::AbstractController::Caching::ClassMethods
  extend ::AbstractController::Caching::ConfigMethods
  extend ::ActionController::ParameterEncoding::ClassMethods
  extend ::ActionController::Flash::ClassMethods
  extend ::ActionController::FormBuilder::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::ActionController::RequestForgeryProtection::ClassMethods
  extend ::ActionController::ContentSecurityPolicy::ClassMethods
  extend ::ActionController::PermissionsPolicy::ClassMethods
  extend ::ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  extend ::ActionController::DefaultHeaders::ClassMethods
  extend ::ActionController::Logging::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
  extend ::ActionController::Instrumentation::ClassMethods
  extend ::ActionController::ParamsWrapper::ClassMethods

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _process_action_callbacks; end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
  def _renderers; end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
  def _renderers=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
  def _renderers?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_process_action_callbacks(&block); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies; end

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
  def _view_cache_dependencies?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
  def _wrapper_options; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
  def _wrapper_options=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
  def _wrapper_options?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#36
  def alert; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def allow_forgery_protection; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def allow_forgery_protection=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def asset_host; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def asset_host=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def assets_dir; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def assets_dir=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def default_asset_host_protocol; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def default_asset_host_protocol=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def default_protect_from_forgery; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def default_protect_from_forgery=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def default_static_extension; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def default_static_extension=(value); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options=(_arg0); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options?; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def enable_fragment_cache_logging; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def enable_fragment_cache_logging=(value); end

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest; end

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
  def etag_with_template_digest?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
  def etaggers; end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
  def etaggers=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
  def etaggers?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#10
  def flash(*_arg0, **_arg1, &_arg2); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def forgery_protection_origin_check; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def forgery_protection_origin_check=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def forgery_protection_strategy; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def forgery_protection_strategy=(value); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys; end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
  def fragment_cache_keys?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
  def helpers_path; end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
  def helpers_path=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
  def helpers_path?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers; end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
  def include_all_helpers?; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def javascripts_dir; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def javascripts_dir=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def log_warning_on_csrf_failure; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def log_warning_on_csrf_failure=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def logger; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def logger=(value); end

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#36
  def notice; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def per_form_csrf_tokens; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def per_form_csrf_tokens=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def perform_caching; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def perform_caching=(value); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#13
  def raise_on_open_redirects; end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#13
  def raise_on_open_redirects=(val); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def relative_url_root; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def relative_url_root=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def request_forgery_protection_token; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def request_forgery_protection_token=(value); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
  def rescue_handlers; end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
  def rescue_handlers=(_arg0); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
  def rescue_handlers?; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def stylesheets_dir; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
  def stylesheets_dir=(value); end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
  def urlsafe_csrf_tokens; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://actionpack/7.0.4/lib/action_controller/base.rb#266
  def _protected_ivars; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks?; end

    # source://actionpack/7.0.4/lib/action_controller/form_builder.rb#31
    def _default_form_builder; end

    # source://actionpack/7.0.4/lib/action_controller/form_builder.rb#31
    def _default_form_builder=(value); end

    # source://actionpack/7.0.4/lib/action_controller/form_builder.rb#31
    def _default_form_builder?; end

    # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#8
    def _flash_types; end

    # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#8
    def _flash_types=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#8
    def _flash_types?; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods=(value); end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods?; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#15
    def _helpers; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout=(value); end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout?; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions=(value); end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions?; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _process_action_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _process_action_callbacks=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
    def _renderers; end

    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
    def _renderers=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#31
    def _renderers?; end

    # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies; end

    # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies=(value); end

    # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#42
    def _view_cache_dependencies?; end

    # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options; end

    # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#185
    def _wrapper_options?; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def allow_forgery_protection; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def allow_forgery_protection=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def asset_host; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def asset_host=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def assets_dir; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def assets_dir=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def default_asset_host_protocol; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def default_asset_host_protocol=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def default_protect_from_forgery; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def default_protect_from_forgery=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def default_static_extension; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def default_static_extension=(value); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options=(value); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options?; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def enable_fragment_cache_logging; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def enable_fragment_cache_logging=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest; end

    # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#27
    def etag_with_template_digest?; end

    # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
    def etaggers; end

    # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
    def etaggers=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#13
    def etaggers?; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def forgery_protection_origin_check; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def forgery_protection_origin_check=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def forgery_protection_strategy; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def forgery_protection_strategy=(value); end

    # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys; end

    # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys=(value); end

    # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#23
    def fragment_cache_keys?; end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
    def helpers_path; end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
    def helpers_path=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#63
    def helpers_path?; end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers; end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#64
    def include_all_helpers?; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def javascripts_dir; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def javascripts_dir=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def log_warning_on_csrf_failure; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def log_warning_on_csrf_failure=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def logger; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def logger=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def per_form_csrf_tokens; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def per_form_csrf_tokens=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def perform_caching; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def perform_caching=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#13
    def raise_on_open_redirects; end

    # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#13
    def raise_on_open_redirects=(val); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def relative_url_root; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def relative_url_root=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def request_forgery_protection_token; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def request_forgery_protection_token=(value); end

    # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
    def rescue_handlers; end

    # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
    def rescue_handlers=(value); end

    # source://activesupport/7.0.4/lib/active_support/rescuable.rb#13
    def rescue_handlers?; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def stylesheets_dir; end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#114
    def stylesheets_dir=(value); end

    # source://activesupport/7.0.4/lib/active_support/configurable.rb#113
    def urlsafe_csrf_tokens; end

    # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#97
    def urlsafe_csrf_tokens=(urlsafe_csrf_tokens); end

    # source://actionpack/7.0.4/lib/action_controller/base.rb#198
    def without_modules(*modules); end
  end
end

module ActionController::Base::HelperMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#39
  def alert(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching/fragments.rb#31
  def combined_fragment_cache_key(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#11
  def content_security_policy?(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#12
  def content_security_policy_nonce(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/cookies.rb#8
  def cookies(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#106
  def form_authenticity_token(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#39
  def notice(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#107
  def protect_against_forgery?(*args, **_arg1, &block); end

  # source://actionpack/7.0.4/lib/abstract_controller/caching.rb#43
  def view_cache_dependencies(*args, **_arg1, &block); end
end

# source://actionpack/7.0.4/lib/action_controller/base.rb#206
ActionController::Base::MODULES = T.let(T.unsafe(nil), Array)

# source://actionpack/7.0.4/lib/action_controller/base.rb#261
ActionController::Base::PROTECTED_IVARS = T.let(T.unsafe(nil), Array)

module ActionController::BasicImplicitRender
  # source://actionpack/7.0.4/lib/action_controller/metal/basic_implicit_render.rb#9
  def default_render; end

  # source://actionpack/7.0.4/lib/action_controller/metal/basic_implicit_render.rb#5
  def send_action(method, *args); end
end

module ActionController::Caching
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Caching::Fragments::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ClassMethods
  mixes_in_class_methods ::AbstractController::Caching::ConfigMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/caching.rb#40
  def instrument_name; end

  # source://actionpack/7.0.4/lib/action_controller/caching.rb#32
  def instrument_payload(key); end

  module GeneratedClassMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end

  module GeneratedInstanceMethods
    def _view_cache_dependencies; end
    def _view_cache_dependencies=(value); end
    def _view_cache_dependencies?; end
    def fragment_cache_keys; end
    def fragment_cache_keys=(value); end
    def fragment_cache_keys?; end
  end
end

module ActionController::ConditionalGet
  include ::ActionController::Head
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#276
  def expires_in(seconds, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#294
  def expires_now; end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#117
  def fresh_when(object = T.unsafe(nil), etag: T.unsafe(nil), weak_etag: T.unsafe(nil), strong_etag: T.unsafe(nil), last_modified: T.unsafe(nil), public: T.unsafe(nil), cache_control: T.unsafe(nil), template: T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#306
  def http_cache_forever(public: T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#316
  def no_store; end

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#249
  def stale?(object = T.unsafe(nil), **freshness_kwargs); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#321
  def combine_etags(validator, options); end

  module GeneratedClassMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::ConditionalGet::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/conditional_get.rb#31
  def etag(&etagger); end
end

module ActionController::ContentSecurityPolicy
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods
  mixes_in_class_methods ::ActionController::ContentSecurityPolicy::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#73
  def content_security_policy?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#77
  def content_security_policy_nonce; end

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#81
  def current_content_security_policy; end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

module ActionController::ContentSecurityPolicy::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#39
  def content_security_policy(enabled = T.unsafe(nil), **options, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/content_security_policy.rb#65
  def content_security_policy_report_only(report_only = T.unsafe(nil), **options); end
end

module ActionController::Cookies
  extend ::ActiveSupport::Concern

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/cookies.rb#14
  def cookies; end
end

module ActionController::DataStreaming
  extend ::ActiveSupport::Concern
  include ::ActionController::Rendering

  mixes_in_class_methods ::ActionController::Rendering::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/data_streaming.rb#109
  def send_data(data, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/data_streaming.rb#69
  def send_file(path, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/data_streaming.rb#114
  def send_file_headers!(options); end
end

# source://actionpack/7.0.4/lib/action_controller/metal/data_streaming.rb#15
ActionController::DataStreaming::DEFAULT_SEND_FILE_DISPOSITION = T.let(T.unsafe(nil), String)

# source://actionpack/7.0.4/lib/action_controller/metal/data_streaming.rb#14
ActionController::DataStreaming::DEFAULT_SEND_FILE_TYPE = T.let(T.unsafe(nil), String)

module ActionController::DefaultHeaders
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::DefaultHeaders::ClassMethods
end

module ActionController::DefaultHeaders::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/default_headers.rb#10
  def make_response!(request); end
end

module ActionController::EtagWithFlash
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::ConditionalGet

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  module GeneratedClassMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::EtagWithTemplateDigest
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::ConditionalGet

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ConditionalGet::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#35
  def determine_template_etag(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#51
  def lookup_and_digest_template(template); end

  # source://actionpack/7.0.4/lib/action_controller/metal/etag_with_template_digest.rb#45
  def pick_template_for_etag(options); end

  module GeneratedClassMethods
    def etag_with_template_digest; end
    def etag_with_template_digest=(value); end
    def etag_with_template_digest?; end
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end

  module GeneratedInstanceMethods
    def etag_with_template_digest; end
    def etag_with_template_digest=(value); end
    def etag_with_template_digest?; end
    def etaggers; end
    def etaggers=(value); end
    def etaggers?; end
  end
end

module ActionController::Flash
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Flash::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#51
  def redirect_to(options = T.unsafe(nil), response_options_and_flash = T.unsafe(nil)); end

  module GeneratedClassMethods
    def _flash_types; end
    def _flash_types=(value); end
    def _flash_types?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionController::Flash::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#45
  def action_methods; end

  # source://actionpack/7.0.4/lib/action_controller/metal/flash.rb#32
  def add_flash_types(*types); end
end

module ActionController::FormBuilder
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::FormBuilder::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/form_builder.rb#46
  def default_form_builder; end

  module GeneratedClassMethods
    def _default_form_builder; end
    def _default_form_builder=(value); end
    def _default_form_builder?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionController::FormBuilder::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/form_builder.rb#40
  def default_form_builder(builder); end
end

module ActionController::Head
  # source://actionpack/7.0.4/lib/action_controller/metal/head.rb#21
  def head(status, options = T.unsafe(nil)); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/head.rb#52
  def include_content?(status); end
end

module ActionController::Helpers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActionController::Helpers::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#128
  def helpers; end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#59
    def helpers_path; end

    # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#59
    def helpers_path=(_arg0); end
  end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def helpers_path; end
    def helpers_path=(value); end
    def helpers_path?; end
    def include_all_helpers; end
    def include_all_helpers=(value); end
    def include_all_helpers?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def helpers_path; end
    def helpers_path=(value); end
    def helpers_path?; end
    def include_all_helpers; end
    def include_all_helpers=(value); end
    def include_all_helpers?; end
  end
end

module ActionController::Helpers::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#111
  def all_helpers_from_path(path); end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#76
  def helper_attr(*attrs); end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#86
  def helpers; end

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#102
  def modules_for_helpers(args); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/helpers.rb#122
  def all_application_helpers; end
end

module ActionController::HttpAuthentication::Basic::ControllerMethods
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#92
  def authenticate_or_request_with_http_basic(realm = T.unsafe(nil), message = T.unsafe(nil), &login_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#96
  def authenticate_with_http_basic(&login_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#83
  def http_basic_authenticate_or_request_with(name:, password:, realm: T.unsafe(nil), message: T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#100
  def request_http_basic_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#76
  def http_basic_authenticate_with(name:, password:, realm: T.unsafe(nil), **options); end
end

module ActionController::HttpAuthentication::Digest::ControllerMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#193
  def authenticate_or_request_with_http_digest(realm = T.unsafe(nil), message = T.unsafe(nil), &password_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#199
  def authenticate_with_http_digest(realm = T.unsafe(nil), &password_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#205
  def request_http_digest_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::HttpAuthentication::Token::ControllerMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#430
  def authenticate_or_request_with_http_token(realm = T.unsafe(nil), message = T.unsafe(nil), &login_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#436
  def authenticate_with_http_token(&login_procedure); end

  # source://actionpack/7.0.4/lib/action_controller/metal/http_authentication.rb#442
  def request_http_token_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::ImplicitRender
  include ::ActionController::BasicImplicitRender

  # source://actionpack/7.0.4/lib/action_controller/metal/implicit_render.rb#33
  def default_render; end

  # source://actionpack/7.0.4/lib/action_controller/metal/implicit_render.rb#52
  def method_for_action(action_name); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/implicit_render.rb#59
  def interactive_browser_request?; end
end

module ActionController::Instrumentation
  extend ::ActiveSupport::Concern
  include ::ActiveSupport::Benchmarkable
  include ::AbstractController::Logger

  mixes_in_class_methods ::ActionController::Instrumentation::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#40
  def redirect_to(*_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#19
  def render(*_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#34
  def send_data(data, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#27
  def send_file(path, options = T.unsafe(nil)); end

  def view_runtime; end
  def view_runtime=(_arg0); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#96
  def append_info_to_payload(payload); end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#90
  def cleanup_view_runtime; end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#80
  def halted_callback_hook(filter, _); end

  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#50
  def process_action(*_arg0); end
end

module ActionController::Instrumentation::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/instrumentation.rb#104
  def log_process_action(payload); end
end

module ActionController::Logging
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::Logging::ClassMethods
end

module ActionController::Logging::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/logging.rb#15
  def log_at(level, **options); end
end

class ActionController::Metal < ::AbstractController::Base
  include ::ActionController::Testing::Functional

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#150
  def initialize; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def content_type(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def content_type=(arg); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#141
  def controller_name; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#185
  def dispatch(name, request, response); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def headers(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def location(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def location=(arg); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def media_type(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
  def middleware_stack; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
  def middleware_stack=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
  def middleware_stack?; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#157
  def params; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#161
  def params=(val); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#181
  def performed?; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def request; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def request=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#206
  def reset_session; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def response; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def response=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#172
  def response_body=(body); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def response_code(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#146
  def session(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#197
  def set_request!(request); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#193
  def set_response!(response); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def status(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#147
  def status=(arg); end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#202
  def to_a; end

  # source://actionpack/7.0.4/lib/action_controller/metal.rb#168
  def url_for(string); end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal.rb#231
    def action(name); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#136
    def action_encoding_template(action); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#126
    def controller_name; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#247
    def dispatch(name, req, res); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#212
    def inherited(base); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#130
    def make_response!(request); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#226
    def middleware; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack=(value); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack?; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#220
    def use(*_arg0, **_arg1, &_arg2); end
  end
end

module ActionController::MimeResponds
  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#201
  def respond_to(*mimes); end
end

class ActionController::MimeResponds::Collector
  include ::AbstractController::Collector

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#246
  def initialize(mimes, variant = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#253
  def all(*args, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#253
  def any(*args, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#271
  def any_response?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#262
  def custom(mime_type, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#244
  def format; end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#244
  def format=(_arg0); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#288
  def negotiate_format(request); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#275
  def response; end
end

class ActionController::MimeResponds::Collector::VariantCollector
  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#293
  def initialize(variant = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#298
  def all(*args, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#298
  def any(*args, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#309
  def method_missing(name, *args, &block); end

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#313
  def variant; end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/mime_responds.rb#322
  def variant_key; end
end

module ActionController::ParameterEncoding
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::ParameterEncoding::ClassMethods
end

module ActionController::ParameterEncoding::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/parameter_encoding.rb#18
  def action_encoding_template(action); end

  # source://actionpack/7.0.4/lib/action_controller/metal/parameter_encoding.rb#9
  def inherited(klass); end

  # source://actionpack/7.0.4/lib/action_controller/metal/parameter_encoding.rb#77
  def param_encoding(action, param, encoding); end

  # source://actionpack/7.0.4/lib/action_controller/metal/parameter_encoding.rb#14
  def setup_param_encode; end

  # source://actionpack/7.0.4/lib/action_controller/metal/parameter_encoding.rb#48
  def skip_parameter_encoding(action); end
end

module ActionController::ParamsWrapper
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::ParamsWrapper::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#277
  def _extract_parameters(parameters); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#299
  def _perform_parameter_wrapping; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#273
  def _wrap_parameters(parameters); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#289
  def _wrapper_enabled?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#268
  def _wrapper_formats; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#263
  def _wrapper_key; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#257
  def process_action(*_arg0); end

  module GeneratedClassMethods
    def _wrapper_options; end
    def _wrapper_options=(value); end
    def _wrapper_options?; end
  end

  module GeneratedInstanceMethods
    def _wrapper_options; end
    def _wrapper_options=(value); end
    def _wrapper_options?; end
  end
end

module ActionController::ParamsWrapper::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#189
  def _set_wrapper_options(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#244
  def inherited(klass); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#220
  def wrap_parameters(name_or_model_or_options, options = T.unsafe(nil)); end
end

# source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#83
ActionController::ParamsWrapper::EXCLUDE_PARAMETERS = T.let(T.unsafe(nil), Array)

class ActionController::ParamsWrapper::Options < ::Struct
  include ::Mutex_m

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#98
  def initialize(name, format, include, exclude, klass, model); end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#108
  def include; end

  # source://mutex_m/0.1.1/mutex_m.rb#93
  def lock; end

  # source://mutex_m/0.1.1/mutex_m.rb#83
  def locked?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#104
  def model; end

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#141
  def name; end

  # source://mutex_m/0.1.1/mutex_m.rb#78
  def synchronize(&block); end

  # source://mutex_m/0.1.1/mutex_m.rb#88
  def try_lock; end

  # source://mutex_m/0.1.1/mutex_m.rb#98
  def unlock; end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#165
  def _default_wrap_model; end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal/params_wrapper.rb#90
    def from_hash(hash); end
  end
end

module ActionController::PermissionsPolicy
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::PermissionsPolicy::ClassMethods
end

module ActionController::PermissionsPolicy::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/permissions_policy.rb#26
  def permissions_policy(**options, &block); end
end

module ActionController::Redirecting
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Benchmarkable
  include ::AbstractController::Logger
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#130
  def _compute_redirect_to_location(request, options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#95
  def redirect_back(fallback_location:, allow_other_host: T.unsafe(nil), **args); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#121
  def redirect_back_or_to(fallback_location, allow_other_host: T.unsafe(nil), **options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#82
  def redirect_to(options = T.unsafe(nil), response_options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#169
  def url_from(location); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#175
  def _allow_other_host; end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#189
  def _enforce_open_redirect_protection(location, allow_other_host:); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#179
  def _extract_redirect_to_status(options, response_options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#197
  def _url_host_allowed?(url); end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal/redirecting.rb#130
    def _compute_redirect_to_location(request, options); end
  end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

class ActionController::Redirecting::UnsafeRedirectError < ::StandardError; end

module ActionController::Renderers
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Renderers::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#144
  def _render_to_body_with_renderer(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#170
  def _render_with_renderer_js(js, options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#155
  def _render_with_renderer_json(json, options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#175
  def _render_with_renderer_xml(xml, options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#140
  def render_to_body(options); end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#90
    def _render_with_renderer_method_name(key); end

    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#74
    def add(key, &block); end

    # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#84
    def remove(key); end
  end

  module GeneratedClassMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end

  module GeneratedInstanceMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end
end

module ActionController::Renderers::All
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionController::Renderers

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionController::Renderers::ClassMethods

  module GeneratedClassMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end

  module GeneratedInstanceMethods
    def _renderers; end
    def _renderers=(value); end
    def _renderers?; end
  end
end

module ActionController::Renderers::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#128
  def use_renderer(*args); end

  # source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#128
  def use_renderers(*args); end
end

# source://actionpack/7.0.4/lib/action_controller/metal/renderers.rb#28
ActionController::Renderers::RENDERERS = T.let(T.unsafe(nil), Set)

module ActionController::Rendering
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionController::Rendering::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#28
  def render(*args); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#45
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#34
  def render_to_string(*_arg0); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#87
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil), &blk); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#94
  def _normalize_options(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#108
  def _normalize_text(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#117
  def _process_options(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#56
  def _process_variant(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#62
  def _render_in_priorities(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#70
  def _set_html_content_type; end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#74
  def _set_rendered_content_type(format); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#80
  def _set_vary_header; end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#51
  def process_action(*_arg0); end
end

module ActionController::Rendering::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#21
  def inherited(klass); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#11
  def render(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#15
  def renderer; end

  # source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#17
  def setup_renderer!; end
end

# source://actionpack/7.0.4/lib/action_controller/metal/rendering.rb#7
ActionController::Rendering::RENDER_FORMATS_IN_PRIORITY = T.let(T.unsafe(nil), Array)

module ActionController::RequestForgeryProtection
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::AbstractController::Helpers
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::AbstractController::Callbacks::ClassMethods
  mixes_in_class_methods ::ActionController::RequestForgeryProtection::ClassMethods

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#344
  def any_authenticity_token_valid?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#430
  def compare_with_global_token(token, session); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#426
  def compare_with_real_token(token, session); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#464
  def csrf_token_hmac(session, identifier); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#535
  def decode_csrf_token(encoded_csrf_token); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#527
  def encode_csrf_token(csrf_token); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#484
  def form_authenticity_param; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#356
  def form_authenticity_token(form_options: T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#519
  def generate_csrf_token; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#460
  def global_csrf_token(session); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#277
  def handle_unverified_request; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#316
  def mark_for_same_origin_verification!; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#322
  def marked_for_same_origin_verification?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#419
  def mask_token(raw_token); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#363
  def masked_authenticity_token(session, form_options: T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#327
  def non_xhr_javascript_response?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#514
  def normalize_action_path(action_path); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#453
  def per_form_csrf_token(session, action_path, method); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#489
  def protect_against_forgery?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#448
  def real_csrf_token(session); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#351
  def request_authenticity_tokens; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#411
  def unmask_token(masked_token); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#287
  def unverified_request_warning_message; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#379
  def valid_authenticity_token?(session, encoded_masked_token); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#434
  def valid_per_form_csrf_token?(token, session); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#504
  def valid_request_origin?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#338
  def verified_request?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#267
  def verify_authenticity_token; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#306
  def verify_same_origin_request; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#472
  def xor_byte_strings(s1, s2); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

# source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#331
ActionController::RequestForgeryProtection::AUTHENTICITY_TOKEN_LENGTH = T.let(T.unsafe(nil), Integer)

module ActionController::RequestForgeryProtection::ClassMethods
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#156
  def protect_from_forgery(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#170
  def skip_forgery_protection(options = T.unsafe(nil)); end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#175
  def protection_method_class(name); end
end

# source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#493
ActionController::RequestForgeryProtection::NULL_ORIGIN_MESSAGE = T.let(T.unsafe(nil), String)

module ActionController::RequestForgeryProtection::ProtectionMethods; end

class ActionController::RequestForgeryProtection::ProtectionMethods::Exception
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#246
  def initialize(controller); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#250
  def handle_unverified_request; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#244
  def warning_message; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#244
  def warning_message=(_arg0); end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#193
  def initialize(controller); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#198
  def handle_unverified_request; end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession::NullCookieJar < ::ActionDispatch::Cookies::CookieJar
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#227
  def write(*_arg0); end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::NullSession::NullSessionHash < ::Rack::Session::Abstract::SessionHash
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#208
  def initialize(req); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#215
  def destroy; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#221
  def enabled?; end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#217
  def exists?; end
end

class ActionController::RequestForgeryProtection::ProtectionMethods::ResetSession
  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#234
  def initialize(controller); end

  # source://actionpack/7.0.4/lib/action_controller/metal/request_forgery_protection.rb#238
  def handle_unverified_request; end
end

module ActionController::Rescue
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Rescuable

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Rescuable::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/rescue.rb#16
  def show_detailed_exceptions?; end

  private

  # source://actionpack/7.0.4/lib/action_controller/metal/rescue.rb#21
  def process_action(*_arg0); end

  module GeneratedClassMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end

  module GeneratedInstanceMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end
end

module ActionController::Streaming
  private

  # source://actionpack/7.0.4/lib/action_controller/metal/streaming.rb#198
  def _process_options(options); end

  # source://actionpack/7.0.4/lib/action_controller/metal/streaming.rb#212
  def _render_template(options); end
end

module ActionController::StrongParameters
  # source://actionpack/7.0.4/lib/action_controller/metal/strong_parameters.rb#1224
  def params; end

  # source://actionpack/7.0.4/lib/action_controller/metal/strong_parameters.rb#1239
  def params=(value); end
end

module ActionController::TemplateAssertions
  # source://actionpack/7.0.4/lib/action_controller/template_assertions.rb#5
  def assert_template(options = T.unsafe(nil), message = T.unsafe(nil)); end
end

module ActionController::Testing::Functional
  # source://actionpack/7.0.4/lib/action_controller/metal/testing.rb#7
  def clear_instance_variables_between_requests; end

  # source://actionpack/7.0.4/lib/action_controller/metal/testing.rb#16
  def recycle!; end
end

module ActionController::UrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::UrlFor::ClassMethods

  # source://actionpack/7.0.4/lib/action_controller/metal/url_for.rb#30
  def url_options; end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module ActionDispatch::Assertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions.rb#13
  def html_document; end
end

module ActionDispatch::Assertions::ResponseAssertions
  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#53
  def assert_redirected_to(options = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#30
  def assert_response(type, message = T.unsafe(nil)); end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#95
  def code_with_name(code_or_name); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#79
  def generate_response_message(expected, actual = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#89
  def location_if_redirected; end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#70
  def normalize_argument_to_redirection(fragment); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#66
  def parameterize(value); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#84
  def response_body_if_short; end
end

# source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/response.rb#7
ActionDispatch::Assertions::ResponseAssertions::RESPONSE_PREDICATES = T.let(T.unsafe(nil), Hash)

module ActionDispatch::Assertions::RoutingAssertions
  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#85
  def assert_generates(expected_path, options, defaults = T.unsafe(nil), extras = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#47
  def assert_recognizes(expected_options, path, extras = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#128
  def assert_routing(path, options, defaults = T.unsafe(nil), extras = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#183
  def method_missing(selector, *args, **_arg2, &block); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#12
  def setup; end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#153
  def with_routing; end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#228
  def fail_on(exception_class, message); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/assertions/routing.rb#194
  def recognized_request_for(path, extras = T.unsafe(nil), msg); end
end

module ActionDispatch::Cookies::ChainedCookieJars
  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#252
  def encrypted; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#218
  def permanent; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#234
  def signed; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#258
  def signed_or_encrypted; end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#281
  def encrypted_cookie_cipher; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#275
  def prepare_upgrade_legacy_hmac_aes_cbc_cookies?; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#285
  def signed_cookie_digest; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#268
  def upgrade_legacy_hmac_aes_cbc_cookies?; end
end

class ActionDispatch::Cookies::CookieJar
  include ::ActionDispatch::Cookies::ChainedCookieJars
  include ::Enumerable

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#315
  def initialize(request); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#336
  def [](name); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#370
  def []=(name, options); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#424
  def always_write_cookie; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#424
  def always_write_cookie=(val); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#414
  def clear(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#325
  def commit!; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#323
  def committed?; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#393
  def delete(name, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#407
  def deleted?(name, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#331
  def each(&block); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#340
  def fetch(name, *args, &block); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#344
  def has_key?(name); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#344
  def key?(name); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#313
  def request; end

  def to_hash(*_arg0); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#364
  def to_header; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#352
  def update(other_hash); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#357
  def update_cookies_from_jar; end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#418
  def write(headers); end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#427
  def escape(string); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#448
  def handle_options(options); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#431
  def make_set_cookie_header(header); end

  # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#444
  def write_cookie?(cookie); end

  class << self
    # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#424
    def always_write_cookie; end

    # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#424
    def always_write_cookie=(val); end

    # source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#307
    def build(req, cookies); end
  end
end

# source://actionpack/7.0.4/lib/action_dispatch/middleware/cookies.rb#305
ActionDispatch::Cookies::CookieJar::DOMAIN_REGEXP = T.let(T.unsafe(nil), Regexp)

module ActionDispatch::Routing::PolymorphicRoutes
  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#153
  def edit_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#149
  def edit_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#153
  def new_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#149
  def new_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#124
  def polymorphic_path(record_or_hash_or_array, options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#101
  def polymorphic_url(record_or_hash_or_array, options = T.unsafe(nil)); end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#168
  def polymorphic_mapping(record); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#164
  def polymorphic_path_for_action(action, record_or_hash, options); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#160
  def polymorphic_url_for_action(action, record_or_hash, options); end
end

class ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder
  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#239
  def initialize(key_strategy, prefix, suffix); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#253
  def handle_class(klass); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#257
  def handle_class_call(target, klass); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#284
  def handle_list(list); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#261
  def handle_model(record); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#275
  def handle_model_call(target, record); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#245
  def handle_string(record); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#249
  def handle_string_call(target, str); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#237
  def prefix; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#237
  def suffix; end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#338
  def get_method_for_class(klass); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#343
  def get_method_for_string(str); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#330
  def polymorphic_mapping(target, record); end

  class << self
    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#187
    def build(action, type); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#179
    def get(action, type); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#185
    def path; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#201
    def plural(prefix, suffix); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#205
    def polymorphic_method(recipient, record_or_hash_or_array, action, type, options); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#197
    def singular(prefix, suffix); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#184
    def url; end
  end
end

# source://actionpack/7.0.4/lib/action_dispatch/routing/polymorphic_routes.rb#177
ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder::CACHE = T.let(T.unsafe(nil), Hash)

module ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#106
  def initialize(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#173
  def full_url_for(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#213
  def route_for(name, *args); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#169
  def url_for(options = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#114
  def url_options; end

  protected

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#218
  def optimize_routes_generation?; end

  private

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#230
  def _routes_context; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#223
  def _with_routes(routes); end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

module ActionDispatch::TestProcess
  include ::ActionDispatch::TestProcess::FixtureFile

  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#30
  def assigns(key = T.unsafe(nil)); end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#44
  def cookies; end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#40
  def flash; end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#48
  def redirect_to_url; end

  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#36
  def session; end
end

module ActionDispatch::TestProcess::FixtureFile
  # source://actionpack/7.0.4/lib/action_dispatch/testing/test_process.rb#19
  def fixture_file_upload(path, mime_type = T.unsafe(nil), binary = T.unsafe(nil)); end
end

module ActionView
  extend ::ActiveSupport::Autoload

  class << self
    # source://actionview/7.0.4/lib/action_view.rb#90
    def eager_load!; end

    # source://actionview/7.0.4/lib/action_view/gem_version.rb#5
    def gem_version; end

    # source://actionview/7.0.4/lib/action_view/version.rb#7
    def version; end
  end
end

class ActionView::AbstractRenderer
  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#24
  def initialize(lookup_context); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#22
  def any_templates?(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#22
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#28
  def render; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#22
  def template_exists?(*_arg0, **_arg1, &_arg2); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#182
  def build_rendered_collection(templates, spacer); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#178
  def build_rendered_template(content, template); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#159
  def extract_details(options); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#171
  def prepend_formats(formats); end
end

# source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#157
ActionView::AbstractRenderer::NO_DETAILS = T.let(T.unsafe(nil), Hash)

module ActionView::AbstractRenderer::ObjectRendering
  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#37
  def initialize(lookup_context, options); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#43
  def local_variable(path); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#92
  def merge_prefix_into_object_path(prefix, object_path); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#76
  def partial_path(object, view); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#61
  def raise_invalid_identifier(path); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#65
  def raise_invalid_option_as(as); end
end

# source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#54
ActionView::AbstractRenderer::ObjectRendering::IDENTIFIER_ERROR_MESSAGE = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#57
ActionView::AbstractRenderer::ObjectRendering::OPTION_AS_ERROR_MESSAGE = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#33
ActionView::AbstractRenderer::ObjectRendering::PREFIXED_PARTIAL_NAMES = T.let(T.unsafe(nil), Concurrent::Map)

class ActionView::AbstractRenderer::RenderedCollection
  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#117
  def initialize(rendered_templates, spacer); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#122
  def body; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#126
  def format; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#115
  def rendered_templates; end

  class << self
    # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#111
    def empty(format); end
  end
end

class ActionView::AbstractRenderer::RenderedCollection::EmptyCollection
  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#133
  def initialize(format); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#137
  def body; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#131
  def format; end
end

class ActionView::AbstractRenderer::RenderedTemplate
  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#144
  def initialize(body, template); end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#142
  def body; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#149
  def format; end

  # source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#142
  def template; end
end

# source://actionview/7.0.4/lib/action_view/renderer/abstract_renderer.rb#153
ActionView::AbstractRenderer::RenderedTemplate::EMPTY_SPACER = T.let(T.unsafe(nil), T.untyped)

class ActionView::ActionViewError < ::StandardError; end

class ActionView::Base
  include ::ActionView::Context
  include ::ERB::Util
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/base.rb#227
  def initialize(lookup_context, assigns, controller); end

  # source://actionview/7.0.4/lib/action_view/base.rb#165
  def _routes; end

  # source://actionview/7.0.4/lib/action_view/base.rb#165
  def _routes=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/base.rb#165
  def _routes?; end

  # source://actionview/7.0.4/lib/action_view/base.rb#240
  def _run(method, template, locals, buffer, add_to_stack: T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames; end

  # source://actionview/7.0.4/lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#207
  def assign(new_assigns); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/base.rb#160
  def automatically_disable_submit_tag; end

  # source://actionview/7.0.4/lib/action_view/base.rb#160
  def automatically_disable_submit_tag=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#249
  def compiled_method_container; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def config; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/attr_internal.rb#33
  def config=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation; end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#157
  def default_formats; end

  # source://actionview/7.0.4/lib/action_view/base.rb#157
  def default_formats=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#145
  def field_error_proc; end

  # source://actionview/7.0.4/lib/action_view/base.rb#145
  def field_error_proc=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def formats=(arg); end

  # source://actionview/7.0.4/lib/action_view/base.rb#257
  def in_rendering_context(options); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def locale=(arg); end

  # source://actionview/7.0.4/lib/action_view/base.rb#166
  def logger; end

  # source://actionview/7.0.4/lib/action_view/base.rb#166
  def logger=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/base.rb#166
  def logger?; end

  # source://actionview/7.0.4/lib/action_view/base.rb#202
  def lookup_context; end

  # source://actionview/7.0.4/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace; end

  # source://actionview/7.0.4/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace?; end

  # source://actionview/7.0.4/lib/action_view/base.rb#149
  def streaming_completion_on_exception; end

  # source://actionview/7.0.4/lib/action_view/base.rb#149
  def streaming_completion_on_exception=(val); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def view_paths(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/base.rb#205
  def view_paths=(arg); end

  # source://actionview/7.0.4/lib/action_view/base.rb#202
  def view_renderer; end

  class << self
    # source://actionview/7.0.4/lib/action_view/base.rb#165
    def _routes; end

    # source://actionview/7.0.4/lib/action_view/base.rb#165
    def _routes=(value); end

    # source://actionview/7.0.4/lib/action_view/base.rb#165
    def _routes?; end

    # source://actionview/7.0.4/lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames; end

    # source://actionview/7.0.4/lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#160
    def automatically_disable_submit_tag; end

    # source://actionview/7.0.4/lib/action_view/base.rb#160
    def automatically_disable_submit_tag=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#171
    def cache_template_loading; end

    # source://actionview/7.0.4/lib/action_view/base.rb#175
    def cache_template_loading=(value); end

    # source://actionview/7.0.4/lib/action_view/base.rb#197
    def changed?(other); end

    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation; end

    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2729
    def default_form_builder; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2729
    def default_form_builder=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#157
    def default_formats; end

    # source://actionview/7.0.4/lib/action_view/base.rb#157
    def default_formats=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#213
    def empty; end

    # source://actionview/7.0.4/lib/action_view/base.rb#169
    def erb_trim_mode=(arg); end

    # source://actionview/7.0.4/lib/action_view/base.rb#145
    def field_error_proc; end

    # source://actionview/7.0.4/lib/action_view/base.rb#145
    def field_error_proc=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#166
    def logger; end

    # source://actionview/7.0.4/lib/action_view/base.rb#166
    def logger=(value); end

    # source://actionview/7.0.4/lib/action_view/base.rb#166
    def logger?; end

    # source://actionview/7.0.4/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace; end

    # source://actionview/7.0.4/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace=(value); end

    # source://actionview/7.0.4/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace?; end

    # source://actionview/7.0.4/lib/action_view/base.rb#149
    def streaming_completion_on_exception; end

    # source://actionview/7.0.4/lib/action_view/base.rb#149
    def streaming_completion_on_exception=(val); end

    # source://actionview/7.0.4/lib/action_view/base.rb#221
    def with_context(context, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/7.0.4/lib/action_view/base.rb#183
    def with_empty_template_cache; end

    # source://actionview/7.0.4/lib/action_view/base.rb#217
    def with_view_paths(view_paths, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/7.0.4/lib/action_view/base.rb#179
    def xss_safe?; end
  end
end

class ActionView::CacheExpiry; end

class ActionView::CacheExpiry::Executor
  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#6
  def initialize(watcher:); end

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#20
  def complete(_); end

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#13
  def run; end

  private

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#25
  def clear_cache; end
end

class ActionView::CacheExpiry::ViewModificationWatcher
  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#33
  def initialize(watcher:, &block); end

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#41
  def execute_if_updated; end

  private

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#61
  def all_view_paths; end

  # source://actionview/7.0.4/lib/action_view/cache_expiry.rb#57
  def dirs_to_watch; end
end

module ActionView::CollectionCaching
  extend ::ActiveSupport::Concern

  private

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#20
  def cache_collection_render(instrumentation_payload, view, template, collection); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#54
  def callable_cache_key?; end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#58
  def collection_by_cache_keys(view, template, collection); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#70
  def expanded_cache_key(key, view, template, digest_path); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#90
  def fetch_or_cache_partial(cached_partials, template, order_by:); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#16
  def will_cache?(options, view); end
end

class ActionView::CollectionRenderer < ::ActionView::PartialRenderer
  include ::ActionView::AbstractRenderer::ObjectRendering

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#122
  def render_collection_derive_partial(collection, context, block); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#104
  def render_collection_with_partial(collection, partial, context, block); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#174
  def collection_with_template(view, template, layout, collection); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#145
  def render_collection(collection, view, path, template, layout, block); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#140
  def retrieve_variable(path); end
end

class ActionView::CollectionRenderer::CollectionIterator
  include ::Enumerable

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#39
  def initialize(collection); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#43
  def each(&blk); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#51
  def length; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#47
  def size; end
end

class ActionView::CollectionRenderer::MixedCollectionIterator < ::ActionView::CollectionRenderer::CollectionIterator
  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#93
  def initialize(collection, paths); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#98
  def each_with_info; end
end

class ActionView::CollectionRenderer::PreloadCollectionIterator < ::ActionView::CollectionRenderer::SameCollectionIterator
  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#75
  def initialize(collection, path, variables, relation); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#85
  def each_with_info; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#81
  def from_collection(collection); end
end

class ActionView::CollectionRenderer::SameCollectionIterator < ::ActionView::CollectionRenderer::CollectionIterator
  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#57
  def initialize(collection, path, variables); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#67
  def each_with_info; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#63
  def from_collection(collection); end
end

module ActionView::Context
  # source://actionview/7.0.4/lib/action_view/context.rb#27
  def _layout_for(name = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/context.rb#18
  def _prepare_context; end

  # source://actionview/7.0.4/lib/action_view/context.rb#15
  def output_buffer; end

  # source://actionview/7.0.4/lib/action_view/context.rb#15
  def output_buffer=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/context.rb#15
  def view_flow; end

  # source://actionview/7.0.4/lib/action_view/context.rb#15
  def view_flow=(_arg0); end
end

class ActionView::Digestor
  class << self
    # source://actionview/7.0.4/lib/action_view/digestor.rb#16
    def digest(name:, finder:, format: T.unsafe(nil), dependencies: T.unsafe(nil)); end

    # source://actionview/7.0.4/lib/action_view/digestor.rb#38
    def logger; end

    # source://actionview/7.0.4/lib/action_view/digestor.rb#43
    def tree(name, finder, partial = T.unsafe(nil), seen = T.unsafe(nil)); end

    private

    # source://actionview/7.0.4/lib/action_view/digestor.rb#71
    def find_template(finder, name, prefixes, partial, keys); end
  end
end

class ActionView::Digestor::Injected < ::ActionView::Digestor::Node
  # source://actionview/7.0.4/lib/action_view/digestor.rb#122
  def digest(finder, _ = T.unsafe(nil)); end
end

class ActionView::Digestor::Missing < ::ActionView::Digestor::Node
  # source://actionview/7.0.4/lib/action_view/digestor.rb#118
  def digest(finder, _ = T.unsafe(nil)); end
end

class ActionView::Digestor::Node
  # source://actionview/7.0.4/lib/action_view/digestor.rb#86
  def initialize(name, logical_name, template, children = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#79
  def children; end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#97
  def dependency_digest(finder, stack); end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#93
  def digest(finder, stack = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#79
  def logical_name; end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#79
  def name; end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#79
  def template; end

  # source://actionview/7.0.4/lib/action_view/digestor.rb#110
  def to_dep_map; end

  class << self
    # source://actionview/7.0.4/lib/action_view/digestor.rb#81
    def create(name, logical_name, template, partial); end
  end
end

class ActionView::Digestor::NullLogger
  class << self
    # source://actionview/7.0.4/lib/action_view/digestor.rb#126
    def debug(_); end

    # source://actionview/7.0.4/lib/action_view/digestor.rb#127
    def error(_); end
  end
end

class ActionView::Digestor::Partial < ::ActionView::Digestor::Node; end

# source://actionview/7.0.4/lib/action_view.rb#33
ActionView::ENCODING_FLAG = T.let(T.unsafe(nil), String)

class ActionView::EncodingError < ::StandardError; end

class ActionView::FileSystemResolver < ::ActionView::Resolver
  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#90
  def initialize(path); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#109
  def ==(resolver); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#114
  def all_template_paths; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#98
  def clear_cache; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#109
  def eql?(resolver); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#88
  def path; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#104
  def to_path; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#104
  def to_s; end

  private

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#124
  def _find_all(name, prefix, partial, details, key, locals); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#143
  def build_unbound_template(template); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#201
  def escape_entry(entry); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#173
  def filter_and_sort_by_details(templates, requested_details); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#139
  def source_for_template(template); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#188
  def template_glob(glob); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#156
  def unbound_templates_from_path(path); end
end

module ActionView::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers.rb#34
    def eager_load!; end
  end
end

module ActionView::Helpers::ActiveModelHelper; end

module ActionView::Helpers::ActiveModelInstanceTag
  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#20
  def content_tag(type, options, *_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#36
  def error_message; end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#28
  def error_wrapping(html_tag); end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#13
  def object; end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#24
  def tag(type, options, *_arg2); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#41
  def object_has_errors?; end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#45
  def select_markup_helper?(type); end

  # source://actionview/7.0.4/lib/action_view/helpers/active_model_helper.rb#49
  def tag_generate_errors?(options); end
end

module ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#27
  def apply_stylesheet_media_default; end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#27
  def apply_stylesheet_media_default=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#486
  def audio_tag(*sources); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#235
  def auto_discovery_link_tag(type = T.unsafe(nil), url_options = T.unsafe(nil), tag_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#276
  def favicon_link_tag(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#25
  def image_decoding; end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#25
  def image_decoding=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#24
  def image_loading; end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#24
  def image_loading=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#394
  def image_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#89
  def javascript_include_tag(*sources); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#319
  def preload_link_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#26
  def preload_links_header; end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#26
  def preload_links_header=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#170
  def stylesheet_link_tag(*sources); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#459
  def video_tag(*sources); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#527
  def check_for_image_tag_errors(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#518
  def extract_dimensions(size); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#491
  def multiple_sources_tag_builder(type, sources); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#508
  def resolve_image_source(source, skip_pipeline); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#533
  def resolve_link_as(extname, mime_type); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#544
  def send_preload_links_header(preload_links, max_header_size: T.unsafe(nil)); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#27
    def apply_stylesheet_media_default; end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#27
    def apply_stylesheet_media_default=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#25
    def image_decoding; end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#25
    def image_decoding=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#24
    def image_loading; end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#24
    def image_loading=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#26
    def preload_links_header; end

    # source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#26
    def preload_links_header=(val); end
  end
end

# source://actionview/7.0.4/lib/action_view/helpers/asset_tag_helper.rb#543
ActionView::Helpers::AssetTagHelper::MAX_HEADER_SIZE = T.let(T.unsafe(nil), Integer)

module ActionView::Helpers::AssetUrlHelper
  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#186
  def asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#230
  def asset_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#429
  def audio_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#441
  def audio_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#242
  def compute_asset_extname(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#276
  def compute_asset_host(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#265
  def compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#454
  def font_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#466
  def font_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#377
  def image_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#389
  def image_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#320
  def javascript_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#332
  def javascript_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#186
  def path_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#429
  def path_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#454
  def path_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#377
  def path_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#320
  def path_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#347
  def path_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#403
  def path_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#265
  def public_compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#347
  def stylesheet_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#359
  def stylesheet_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#230
  def url_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#441
  def url_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#466
  def url_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#389
  def url_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#332
  def url_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#359
  def url_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#415
  def url_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#403
  def video_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#415
  def video_url(source, options = T.unsafe(nil)); end
end

# source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#235
ActionView::Helpers::AssetUrlHelper::ASSET_EXTENSIONS = T.let(T.unsafe(nil), Hash)

# source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#253
ActionView::Helpers::AssetUrlHelper::ASSET_PUBLIC_DIRECTORIES = T.let(T.unsafe(nil), Hash)

# source://actionview/7.0.4/lib/action_view/helpers/asset_url_helper.rb#121
ActionView::Helpers::AssetUrlHelper::URI_REGEXP = T.let(T.unsafe(nil), Regexp)

module ActionView::Helpers::AtomFeedHelper
  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#98
  def atom_feed(options = T.unsafe(nil), &block); end
end

class ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#132
  def initialize(xml); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#140
  def method_missing(method, *arguments, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#155
  def xhtml_block?(method, arguments); end
end

# source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#130
ActionView::Helpers::AtomFeedHelper::AtomBuilder::XHTML_TAG_NAMES = T.let(T.unsafe(nil), Set)

class ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder < ::ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#164
  def initialize(xml, view, feed_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#182
  def entry(record, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/atom_feed_helper.rb#169
  def updated(date_or_time = T.unsafe(nil)); end
end

module ActionView::Helpers::CacheHelper
  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#168
  def cache(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#240
  def cache_fragment_name(name = T.unsafe(nil), skip_digest: T.unsafe(nil), digest_path: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#215
  def cache_if(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#231
  def cache_unless(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#188
  def caching?; end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#248
  def digest_path_from_template(template); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#205
  def uncacheable!; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#270
  def fragment_for(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#259
  def fragment_name_with_digest(name, digest_path); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#280
  def read_fragment_for(name, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#284
  def write_fragment_for(name, options); end
end

module ActionView::Helpers::CacheHelper::CachingRegistry
  extend ::ActionView::Helpers::CacheHelper::CachingRegistry

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#298
  def caching?; end

  # source://actionview/7.0.4/lib/action_view/helpers/cache_helper.rb#302
  def track_caching; end
end

class ActionView::Helpers::CacheHelper::UncacheableFragmentError < ::StandardError; end

module ActionView::Helpers::CaptureHelper
  # source://actionview/7.0.4/lib/action_view/helpers/capture_helper.rb#43
  def capture(*args); end

  # source://actionview/7.0.4/lib/action_view/helpers/capture_helper.rb#155
  def content_for(name, content = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/capture_helper.rb#195
  def content_for?(name); end

  # source://actionview/7.0.4/lib/action_view/helpers/capture_helper.rb#175
  def provide(name, content = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/capture_helper.rb#201
  def with_output_buffer(buf = T.unsafe(nil)); end
end

module ActionView::Helpers::ControllerHelper
  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def action_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#18
  def assign_controller(controller); end

  def controller; end
  def controller=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def controller_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def controller_path(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def cookies(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def flash(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def headers(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#26
  def logger; end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def params(*_arg0, **_arg1, &_arg2); end

  def request; end
  def request=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def request_forgery_protection_token(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#30
  def respond_to?(method_name, include_private = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def response(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#16
  def session(*_arg0, **_arg1, &_arg2); end
end

# source://actionview/7.0.4/lib/action_view/helpers/controller_helper.rb#12
ActionView::Helpers::ControllerHelper::CONTROLLER_DELEGATES = T.let(T.unsafe(nil), Array)

module ActionView::Helpers::CspHelper
  # source://actionview/7.0.4/lib/action_view/helpers/csp_helper.rb#17
  def csp_meta_tag(**options); end
end

module ActionView::Helpers::CsrfHelper
  # source://actionview/7.0.4/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tag; end

  # source://actionview/7.0.4/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tags; end
end

module ActionView::Helpers::DateHelper
  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#290
  def date_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#362
  def datetime_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#95
  def distance_of_time_in_words(from_time, to_time = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#176
  def distance_of_time_in_words_to_now(from_time, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#450
  def select_date(date = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#411
  def select_datetime(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#593
  def select_day(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#566
  def select_hour(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#537
  def select_minute(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#638
  def select_month(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#513
  def select_second(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#490
  def select_time(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#667
  def select_year(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#176
  def time_ago_in_words(from_time, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#327
  def time_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#686
  def time_tag(date_or_time, *args, &block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#695
  def normalize_distance_of_time_argument_to_time(value); end
end

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#26
ActionView::Helpers::DateHelper::MINUTES_IN_QUARTER_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#27
ActionView::Helpers::DateHelper::MINUTES_IN_THREE_QUARTERS_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#25
ActionView::Helpers::DateHelper::MINUTES_IN_YEAR = T.let(T.unsafe(nil), Integer)

class ActionView::Helpers::DateTimeSelector
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#723
  def initialize(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#752
  def select_date; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#731
  def select_datetime; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#814
  def select_day; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#802
  def select_hour; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#794
  def select_minute; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#822
  def select_month; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#786
  def select_second; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#770
  def select_time; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#836
  def select_year; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1060
  def build_day_options(selected); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1157
  def build_hidden(type, value); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1020
  def build_options(selected, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#999
  def build_options_and_select(type, selected, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1105
  def build_select(type, select_options_as_html); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1195
  def build_selects_from_types(order); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1084
  def build_year_options(selected, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1124
  def css_class_attribute(type, html_options_class, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#981
  def date_order; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def day; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#921
  def day_name(number); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def hour; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1186
  def input_id_from_type(type); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1172
  def input_name_from_type(type); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def min; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def month; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#952
  def month_name(number); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#888
  def month_names; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1139
  def prompt_option_tag(type, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#874
  def prompt_text(prompt, type); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def sec; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1206
  def separator(type); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#880
  def set_day_if_discarded; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#985
  def translated_date_order; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#905
  def translated_month_names; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#864
  def year; end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#973
  def year_name(number); end
end

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#714
ActionView::Helpers::DateTimeSelector::AMPM_TRANSLATION = T.let(T.unsafe(nil), Hash)

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#709
ActionView::Helpers::DateTimeSelector::DEFAULT_PREFIX = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#710
ActionView::Helpers::DateTimeSelector::POSITION = T.let(T.unsafe(nil), Hash)

module ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/7.0.4/lib/action_view/helpers/debug_helper.rb#28
  def debug(object); end
end

class ActionView::Helpers::FormBuilder
  include ::ActionView::ModelNaming

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1700
  def initialize(object_name, object, template, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2614
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2438
  def check_box(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#905
  def collection_check_boxes(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#917
  def collection_radio_buttons(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#857
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def color_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def date_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1229
  def date_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def datetime_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def datetime_local_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1253
  def datetime_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def email_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2635
  def emitted_hidden_id?; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
  def field_helpers; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
  def field_helpers=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
  def field_helpers?; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1757
  def field_id(method, *suffixes, namespace: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1777
  def field_name(method, *methods, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2294
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2257
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2521
  def file_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#869
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2482
  def hidden_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1737
  def id; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1677
  def index; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2369
  def label(method, text = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def month_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1677
  def multipart; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1680
  def multipart=(multipart); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1677
  def multipart?; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def number_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def object; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def object=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def object_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def object_name=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def options; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1675
  def options=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def password_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def phone_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2460
  def radio_button(method, tag_value, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def range_field(method, options = T.unsafe(nil)); end

  def rich_text_area(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def search_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#845
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2553
  def submit(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def telephone_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def text_area(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def text_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def time_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/date_helper.rb#1241
  def time_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#881
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1696
  def to_model; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1692
  def to_partial_path; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def url_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2006
  def week_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#893
  def weekday_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2720
  def convert_to_legacy_options(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2702
  def fields_for_nested_model(name, object, fields_options, block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2673
  def fields_for_with_nested_attributes(association_name, association, options, block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2669
  def nested_attributes_association?(association_name); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2715
  def nested_child_index(name); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2640
  def objectify_options(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#2646
  def submit_default_value; end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1688
    def _to_partial_path; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
    def field_helpers; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
    def field_helpers=(value); end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1665
    def field_helpers?; end
  end
end

module ActionView::Helpers::FormHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1573
  def _object_for_form_builder(object); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1336
  def check_box(object_name, method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1366
  def color_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1430
  def date_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1497
  def datetime_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1497
  def datetime_local_field(object_name, method, options = T.unsafe(nil)); end

  def default_form_builder; end
  def default_form_builder=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1551
  def email_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1072
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1021
  def fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1238
  def file_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#433
  def form_for(record, options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#754
  def form_with(model: T.unsafe(nil), scope: T.unsafe(nil), url: T.unsafe(nil), format: T.unsafe(nil), **options, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#479
  def form_with_generates_ids; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#479
  def form_with_generates_ids=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#477
  def form_with_generates_remote_forms; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#477
  def form_with_generates_remote_forms=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1205
  def hidden_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1142
  def label(object_name, method, content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1516
  def month_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#481
  def multiple_file_field_include_hidden; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#481
  def multiple_file_field_include_hidden=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1560
  def number_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1187
  def password_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1398
  def phone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1358
  def radio_button(object_name, method, tag_value, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1569
  def range_field(object_name, method, options = T.unsafe(nil)); end

  def rich_text_area(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1389
  def search_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1398
  def telephone_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1268
  def text_area(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1166
  def text_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1468
  def time_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1542
  def url_field(object_name, method, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1533
  def week_field(object_name, method, options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#463
  def apply_form_for_options!(object, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1607
  def default_form_builder_class; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1578
  def html_options_for_form_with(url_for_options = T.unsafe(nil), model = T.unsafe(nil), html: T.unsafe(nil), local: T.unsafe(nil), skip_enforcing_utf8: T.unsafe(nil), **options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#1593
  def instantiate_builder(record_name, record_object, options); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#479
    def form_with_generates_ids; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#479
    def form_with_generates_ids=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#477
    def form_with_generates_remote_forms; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#477
    def form_with_generates_remote_forms=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#481
    def multiple_file_field_include_hidden; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_helper.rb#481
    def multiple_file_field_include_hidden=(val); end
  end
end

module ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::TextHelper
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#779
  def collection_check_boxes(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#695
  def collection_radio_buttons(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#198
  def collection_select(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#257
  def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#531
  def grouped_options_for_select(grouped_options, selected_key = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#461
  def option_groups_from_collection_for_select(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#357
  def options_for_select(container, selected = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#400
  def options_from_collection_for_select(collection, value_method, text_method, selected = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#158
  def select(object, method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#576
  def time_zone_options_for_select(selected = T.unsafe(nil), priority_zones = T.unsafe(nil), model = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#291
  def time_zone_select(object, method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#608
  def weekday_options_for_select(selected = T.unsafe(nil), index_as_value: T.unsafe(nil), day_format: T.unsafe(nil), beginning_of_week: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#297
  def weekday_select(object, method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#806
  def extract_selected_and_disabled(selected); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#817
  def extract_values_from_collection(collection, value_method, selected); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#784
  def option_html_attributes(element); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#792
  def option_text_and_value(option); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#802
  def option_value_selected?(value, selected); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#831
  def prompt_text(prompt); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_options_helper.rb#827
  def value_for_collection(item, value); end
end

module ActionView::Helpers::FormTagHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#578
  def button_tag(content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#444
  def check_box_tag(name, value = T.unsafe(nil), checked = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#676
  def color_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#746
  def date_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#773
  def datetime_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#773
  def datetime_local_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#26
  def default_enforce_utf8; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#26
  def default_enforce_utf8=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#847
  def email_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#23
  def embed_authenticity_token_in_remote_forms; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#23
  def embed_authenticity_token_in_remote_forms=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#99
  def field_id(object_name, method_name, *suffixes, index: T.unsafe(nil), namespace: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#129
  def field_name(object_name, method_name, *method_names, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#650
  def field_set_tag(legend = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#344
  def file_field_tag(name, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#75
  def form_tag(url_for_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#305
  def hidden_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#624
  def image_submit_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#278
  def label_tag(name = T.unsafe(nil), content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#788
  def month_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#895
  def number_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#377
  def password_field_tag(name = T.unsafe(nil), value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#722
  def phone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#469
  def radio_button_tag(name, value, checked = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#909
  def range_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#699
  def search_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#198
  def select_tag(name, option_tags = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#517
  def submit_tag(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#722
  def telephone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#410
  def text_area_tag(name, content = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#260
  def text_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#760
  def time_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#824
  def url_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#915
  def utf8_enforcer_tag; end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#801
  def week_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#1011
  def convert_direct_upload_option_to_url(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#950
  def extra_tags_for_form(html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#980
  def form_tag_html(html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#985
  def form_tag_with_body(html_options, content); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#923
  def html_options_for_form(url_for_options, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#992
  def sanitize_to_id(name); end

  # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#996
  def set_default_disable_with(value, tag_options); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#26
    def default_enforce_utf8; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#26
    def default_enforce_utf8=(val); end

    # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#23
    def embed_authenticity_token_in_remote_forms; end

    # source://actionview/7.0.4/lib/action_view/helpers/form_tag_helper.rb#23
    def embed_authenticity_token_in_remote_forms=(val); end
  end
end

module ActionView::Helpers::JavaScriptHelper
  # source://actionview/7.0.4/lib/action_view/helpers/javascript_helper.rb#27
  def escape_javascript(javascript); end

  # source://actionview/7.0.4/lib/action_view/helpers/javascript_helper.rb#27
  def j(javascript); end

  # source://actionview/7.0.4/lib/action_view/helpers/javascript_helper.rb#90
  def javascript_cdata_section(content); end

  # source://actionview/7.0.4/lib/action_view/helpers/javascript_helper.rb#74
  def javascript_tag(content_or_options_with_block = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
end

# source://actionview/7.0.4/lib/action_view/helpers/javascript_helper.rb#6
ActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP = T.let(T.unsafe(nil), Hash)

module ActionView::Helpers::NumberHelper
  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#127
  def number_to_currency(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#403
  def number_to_human(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#297
  def number_to_human_size(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#167
  def number_to_percentage(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#62
  def number_to_phone(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#206
  def number_with_delimiter(number, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#251
  def number_with_precision(number, options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#408
  def delegate_number_helper_method(method, number, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#427
  def escape_units(units); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#417
  def escape_unsafe_options(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#450
  def parse_float(number, raise_error); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#446
  def valid_float?(number); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#433
  def wrap_with_output_safety_handling(number, raise_on_invalid, &block); end
end

class ActionView::Helpers::NumberHelper::InvalidNumberError < ::StandardError
  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#21
  def initialize(number); end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#20
  def number; end

  # source://actionview/7.0.4/lib/action_view/helpers/number_helper.rb#20
  def number=(_arg0); end
end

module ActionView::Helpers::OutputSafetyHelper
  # source://actionview/7.0.4/lib/action_view/helpers/output_safety_helper.rb#18
  def raw(stringish); end

  # source://actionview/7.0.4/lib/action_view/helpers/output_safety_helper.rb#33
  def safe_join(array, sep = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/output_safety_helper.rb#43
  def to_sentence(array, options = T.unsafe(nil)); end
end

module ActionView::Helpers::RenderingHelper
  # source://actionview/7.0.4/lib/action_view/helpers/rendering_helper.rb#97
  def _layout_for(*args, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/rendering_helper.rb#30
  def render(options = T.unsafe(nil), locals = T.unsafe(nil), &block); end
end

module ActionView::Helpers::SanitizeHelper
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#81
  def sanitize(html, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#86
  def sanitize_css(style); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#120
  def strip_links(html); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#103
  def strip_tags(html); end
end

module ActionView::Helpers::SanitizeHelper::ClassMethods
  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#145
  def full_sanitizer; end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#125
  def full_sanitizer=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#155
  def link_sanitizer; end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#125
  def link_sanitizer=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#165
  def safe_list_sanitizer; end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#125
  def safe_list_sanitizer=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#135
  def sanitized_allowed_attributes; end

  # Replaces the allowed HTML attributes for the +sanitize+ helper.
  #
  #   class Application < Rails::Application
  #     config.action_view.sanitized_allowed_attributes = ['onclick', 'longdesc']
  #   end
  #
  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#50
  def sanitized_allowed_attributes=(attributes); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_css_keywords; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_css_keywords=(_); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_css_properties; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_css_properties=(_); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_allowed_protocols; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_allowed_protocols=(_); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#131
  def sanitized_allowed_tags; end

  # Replaces the allowed tags for the +sanitize+ helper.
  #
  #   class Application < Rails::Application
  #     config.action_view.sanitized_allowed_tags = 'table', 'tr', 'td'
  #   end
  #
  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#40
  def sanitized_allowed_tags=(tags); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_bad_tags; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_bad_tags=(_); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_protocol_separator; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_protocol_separator=(_); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_shorthand_css_properties; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_shorthand_css_properties=(_); end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#63
  def sanitized_uri_attributes; end

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#64
  def sanitized_uri_attributes=(_); end

  # source://actionview/7.0.4/lib/action_view/helpers/sanitize_helper.rb#127
  def sanitizer_vendor; end

  private

  # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#68
  def deprecate_option(name); end
end

module ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#408
  def cdata_section(content); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#388
  def class_names(*args); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#368
  def content_tag(name, content_or_options_with_block = T.unsafe(nil), options = T.unsafe(nil), escape = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#420
  def escape_once(html); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#331
  def tag(name = T.unsafe(nil), options = T.unsafe(nil), open = T.unsafe(nil), escape = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#388
  def token_list(*args); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#425
  def build_tag_values(*args); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#445
  def tag_builder; end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#425
    def build_tag_values(*args); end
  end
end

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#31
ActionView::Helpers::TagHelper::ARIA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#18
ActionView::Helpers::TagHelper::BOOLEAN_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#32
ActionView::Helpers::TagHelper::DATA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#40
ActionView::Helpers::TagHelper::PRE_CONTENT_STRINGS = T.let(T.unsafe(nil), Hash)

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#34
ActionView::Helpers::TagHelper::TAG_TYPES = T.let(T.unsafe(nil), Hash)

class ActionView::Helpers::TagHelper::TagBuilder
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#51
  def initialize(view_context); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#60
  def attributes(attributes); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#133
  def boolean_tag_option(key); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#80
  def content_tag_string(name, content, options, escape = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#64
  def p(*arguments, **options, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#137
  def tag_option(key, value, escape); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#91
  def tag_options(options, escape = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#68
  def tag_string(name, content = T.unsafe(nil), **options, &block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#167
  def handle_deprecated_escape_options(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#188
  def method_missing(called, *args, **options, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#155
  def prefix_tag_option(prefix, key, value, escape); end

  # source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#163
  def respond_to_missing?(*args); end
end

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#48
ActionView::Helpers::TagHelper::TagBuilder::HTML_VOID_ELEMENTS = T.let(T.unsafe(nil), Set)

# source://actionview/7.0.4/lib/action_view/helpers/tag_helper.rb#49
ActionView::Helpers::TagHelper::TagBuilder::SVG_SELF_CLOSING_ELEMENTS = T.let(T.unsafe(nil), Set)

module ActionView::Helpers::Tags
  extend ::ActiveSupport::Autoload
end

class ActionView::Helpers::Tags::ActionText < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  def dom_id(*_arg0, **_arg1, &_arg2); end
  def render; end
end

class ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ActiveModelInstanceTag
  include ::ActionView::Helpers::FormOptionsHelper
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#12
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#10
  def object; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#32
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#95
  def add_default_name_and_id(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#82
  def add_default_name_and_id_for_value(tag_value, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#147
  def add_options(option_tags, options, value = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#173
  def generate_ids?; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#165
  def name_and_id_index(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#142
  def placeholder_required?(html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#73
  def retrieve_autoindex(pre_match); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#62
  def retrieve_object(object); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#115
  def sanitized_method_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#119
  def sanitized_value(value); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#123
  def select_content_tag(option_tags, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#111
  def tag_id(index = T.unsafe(nil), namespace = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#107
  def tag_name(multiple = T.unsafe(nil), index = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#37
  def value; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#45
  def value_before_type_cast; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/base.rb#57
  def value_came_from_user?; end
end

class ActionView::Helpers::Tags::CheckBox < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview/7.0.4/lib/action_view/helpers/tags/check_box.rb#11
  def initialize(object_name, method_name, template_object, checked_value, unchecked_value, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/check_box.rb#17
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/check_box.rb#42
  def checked?(value); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/check_box.rb#59
  def hidden_field_for_checkbox(options); end
end

module ActionView::Helpers::Tags::Checkable
  # source://actionview/7.0.4/lib/action_view/helpers/tags/checkable.rb#7
  def input_checked?(options); end
end

class ActionView::Helpers::Tags::CollectionCheckBoxes < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_check_boxes.rb#20
  def render(&block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_check_boxes.rb#29
  def hidden_field_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_check_boxes.rb#25
  def render_component(builder); end
end

class ActionView::Helpers::Tags::CollectionCheckBoxes::CheckBoxBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_check_boxes.rb#12
  def check_box(extra_html_options = T.unsafe(nil)); end
end

module ActionView::Helpers::Tags::CollectionHelpers
  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#30
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#47
  def default_html_options_for_collection(item, value); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#107
  def hidden_field; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#112
  def hidden_field_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#40
  def instantiate_builder(builder_class, item, value, text, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#75
  def render_collection; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#86
  def render_collection_for(builder_class, &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#71
  def sanitize_attribute_name(value); end
end

class ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#10
  def initialize(template_object, object_name, method_name, object, sanitized_attribute_name, text, value, input_html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#22
  def label(label_html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#8
  def object; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#8
  def text; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_helpers.rb#8
  def value; end
end

class ActionView::Helpers::Tags::CollectionRadioButtons < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_radio_buttons.rb#19
  def render(&block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_radio_buttons.rb#24
  def render_component(builder); end
end

class ActionView::Helpers::Tags::CollectionRadioButtons::RadioButtonBuilder < ::ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_radio_buttons.rb#12
  def radio_button(extra_html_options = T.unsafe(nil)); end
end

class ActionView::Helpers::Tags::CollectionSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_select.rb#7
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/collection_select.rb#16
  def render; end
end

class ActionView::Helpers::Tags::ColorField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/color_field.rb#7
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/color_field.rb#15
  def validate_color_string(string); end
end

class ActionView::Helpers::Tags::DateField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::DateSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#9
  def initialize(object_name, method_name, template_object, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#15
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#30
  def datetime_selector(options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#43
  def default_datetime(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#26
  def select_type; end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/tags/date_select.rb#20
    def select_type; end
  end
end

class ActionView::Helpers::Tags::DatetimeField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/datetime_field.rb#7
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/datetime_field.rb#21
  def datetime_value(value); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/datetime_field.rb#17
  def format_date(value); end
end

class ActionView::Helpers::Tags::DatetimeLocalField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/datetime_local_field.rb#14
  def format_date(value); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/tags/datetime_local_field.rb#8
    def field_type; end
  end
end

class ActionView::Helpers::Tags::DatetimeSelect < ::ActionView::Helpers::Tags::DateSelect; end
class ActionView::Helpers::Tags::EmailField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::FileField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/file_field.rb#7
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/file_field.rb#20
  def hidden_field_for_multiple_file(options); end
end

class ActionView::Helpers::Tags::GroupedCollectionSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/grouped_collection_select.rb#7
  def initialize(object_name, method_name, template_object, collection, group_method, group_label_method, option_key_method, option_value_method, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/grouped_collection_select.rb#18
  def render; end
end

class ActionView::Helpers::Tags::HiddenField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/hidden_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::Label < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#34
  def initialize(object_name, method_name, template_object, content_or_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#48
  def render(&block); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#78
  def render_component(builder); end
end

class ActionView::Helpers::Tags::Label::LabelBuilder
  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#10
  def initialize(template_object, object_name, method_name, object, tag_value); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#8
  def object; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#29
  def to_s; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/label.rb#18
  def translation; end
end

class ActionView::Helpers::Tags::MonthField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/month_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::NumberField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/number_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::PasswordField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/password_field.rb#7
  def render; end
end

module ActionView::Helpers::Tags::Placeholderable
  # source://actionview/7.0.4/lib/action_view/helpers/tags/placeholderable.rb#7
  def initialize(*_arg0); end
end

class ActionView::Helpers::Tags::RadioButton < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Checkable

  # source://actionview/7.0.4/lib/action_view/helpers/tags/radio_button.rb#11
  def initialize(object_name, method_name, template_object, tag_value, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/radio_button.rb#16
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/radio_button.rb#26
  def checked?(value); end
end

class ActionView::Helpers::Tags::RangeField < ::ActionView::Helpers::Tags::NumberField; end

class ActionView::Helpers::Tags::SearchField < ::ActionView::Helpers::Tags::TextField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/search_field.rb#7
  def render; end
end

class ActionView::Helpers::Tags::Select < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/select.rb#7
  def initialize(object_name, method_name, template_object, choices, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/select.rb#16
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/select.rb#36
  def grouped_choices?; end
end

class ActionView::Helpers::Tags::TelField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::TextArea < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview/7.0.4/lib/action_view/helpers/tags/text_area.rb#11
  def render; end
end

class ActionView::Helpers::Tags::TextField < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview/7.0.4/lib/action_view/helpers/tags/text_field.rb#11
  def render; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/text_field.rb#27
  def field_type; end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/tags/text_field.rb#21
    def field_type; end
  end
end

class ActionView::Helpers::Tags::TimeField < ::ActionView::Helpers::Tags::DatetimeField
  # source://actionview/7.0.4/lib/action_view/helpers/tags/time_field.rb#7
  def initialize(object_name, method_name, template_object, options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/time_field.rb#13
  def format_date(value); end
end

class ActionView::Helpers::Tags::TimeSelect < ::ActionView::Helpers::Tags::DateSelect; end

class ActionView::Helpers::Tags::TimeZoneSelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/time_zone_select.rb#7
  def initialize(object_name, method_name, template_object, priority_zones, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/time_zone_select.rb#14
  def render; end
end

class ActionView::Helpers::Tags::Translator
  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#7
  def initialize(object, object_name, method_and_value, scope:); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#14
  def translate; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#31
  def human_attribute_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#22
  def i18n_default; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#20
  def method_and_value; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#20
  def model; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#20
  def object_name; end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/translator.rb#20
  def scope; end
end

class ActionView::Helpers::Tags::UrlField < ::ActionView::Helpers::Tags::TextField; end

class ActionView::Helpers::Tags::WeekField < ::ActionView::Helpers::Tags::DatetimeField
  private

  # source://actionview/7.0.4/lib/action_view/helpers/tags/week_field.rb#8
  def format_date(value); end
end

class ActionView::Helpers::Tags::WeekdaySelect < ::ActionView::Helpers::Tags::Base
  # source://actionview/7.0.4/lib/action_view/helpers/tags/weekday_select.rb#7
  def initialize(object_name, method_name, template_object, options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/tags/weekday_select.rb#13
  def render; end
end

module ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::SanitizeHelper

  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#58
  def concat(string); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#382
  def current_cycle(name = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#358
  def cycle(first_value, *values); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#179
  def excerpt(text, phrase, options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#136
  def highlight(text, phrases, options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#234
  def pluralize(count, singular, plural_arg = T.unsafe(nil), plural: T.unsafe(nil), locale: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#405
  def reset_cycle(name = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#62
  def safe_concat(string); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#306
  def simple_format(text, html_options = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#98
  def truncate(text, options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#264
  def word_wrap(text, line_width: T.unsafe(nil), break_sequence: T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#468
  def cut_excerpt_part(part_position, part, separator, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#450
  def get_cycle(name); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#455
  def set_cycle(name, cycle_object); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#460
  def split_paragraphs(text); end
end

class ActionView::Helpers::TextHelper::Cycle
  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#413
  def initialize(first_value, *values); end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#422
  def current_value; end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#418
  def reset; end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#426
  def to_s; end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#411
  def values; end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#433
  def next_index; end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#437
  def previous_index; end

  # source://actionview/7.0.4/lib/action_view/helpers/text_helper.rb#441
  def step_index(n); end
end

module ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#116
  def l(object, **options); end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#116
  def localize(object, **options); end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#73
  def t(key, **options); end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#73
  def translate(key, **options); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#142
  def missing_translation(key, options); end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#128
  def scope_key_by_partial(key); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#15
    def raise_on_missing_translations; end

    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#15
    def raise_on_missing_translations=(_arg0); end
  end
end

module ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#331
  def button_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#32
  def button_to_generates_button_tag; end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#32
  def button_to_generates_button_tag=(val); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#582
  def current_page?(options = T.unsafe(nil), check_parameters: T.unsafe(nil), **options_as_kwargs); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#209
  def link_to(name = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#471
  def link_to_if(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#448
  def link_to_unless(condition, name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#424
  def link_to_unless_current(name, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#521
  def mail_to(email_address, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#716
  def phone_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#665
  def sms_to(phone_number, name = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#35
  def url_for(options = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#47
  def _back_url; end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#52
  def _filtered_referrer; end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#759
  def add_method_to_attributes!(html_options, method); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#730
  def convert_options_to_data_attributes(options, html_options); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#753
  def link_to_remote_options?(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#770
  def method_for_options(options); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#788
  def method_not_get_method?(method); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#807
  def method_tag(method); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#853
  def remove_trailing_slash!(url_string); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#827
  def to_form_params(attribute, namespace = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#793
  def token_tag(token = T.unsafe(nil), form_options: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#745
  def url_target(name, options); end

  class << self
    # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#32
    def button_to_generates_button_tag; end

    # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#32
    def button_to_generates_button_tag=(val); end
  end
end

# source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#21
ActionView::Helpers::UrlHelper::BUTTON_TAG_METHOD_VERBS = T.let(T.unsafe(nil), Array)

module ActionView::Helpers::UrlHelper::ClassMethods
  # source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#27
  def _url_for_modules; end
end

# source://actionview/7.0.4/lib/action_view/helpers/url_helper.rb#780
ActionView::Helpers::UrlHelper::STRINGIFIED_COMMON_METHODS = T.let(T.unsafe(nil), Hash)

class ActionView::I18nProxy < ::I18n::Config
  # source://actionview/7.0.4/lib/action_view/rendering.rb#11
  def initialize(original_config, lookup_context); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#16
  def locale; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#20
  def locale=(value); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#9
  def lookup_context; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#9
  def original_config; end
end

module ActionView::Layouts
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActionView::ViewPaths
  include ::ActionView::Rendering

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods
  mixes_in_class_methods ::ActionView::Layouts::ClassMethods

  # source://actionview/7.0.4/lib/action_view/layouts.rb#361
  def initialize(*_arg0); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#215
  def _layout_conditions(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#350
  def _normalize_options(options); end

  def action_has_layout=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#372
  def action_has_layout?; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#377
  def _conditional_layout?; end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#415
  def _default_layout(lookup_context, formats, require_layout = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#430
  def _include_layout?(options); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#382
  def _layout(*_arg0); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#388
  def _layout_for_option(name); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#401
  def _normalize_layout(value); end

  module GeneratedClassMethods
    def _layout; end
    def _layout=(value); end
    def _layout?; end
    def _layout_conditions; end
    def _layout_conditions=(value); end
    def _layout_conditions?; end
  end

  module GeneratedInstanceMethods; end
end

module ActionView::Layouts::ClassMethods
  # source://actionview/7.0.4/lib/action_view/layouts.rb#283
  def _write_layout_method; end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#218
  def inherited(klass); end

  # source://actionview/7.0.4/lib/action_view/layouts.rb#269
  def layout(layout, conditions = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#345
  def _implied_layout_name; end
end

module ActionView::Layouts::ClassMethods::LayoutConditions
  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#233
  def _conditional_layout?; end
end

class ActionView::LogSubscriber < ::ActiveSupport::LogSubscriber
  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#12
  def initialize; end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#59
  def logger; end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#42
  def render_collection(event); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#35
  def render_layout(event); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#25
  def render_partial(event); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#17
  def render_template(event); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#53
  def start(name, id, payload); end

  private

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#83
  def cache_message(payload); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#65
  def from_rails_root(string); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#92
  def log_rendering_start(payload, name); end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#71
  def rails_root; end

  # source://actionview/7.0.4/lib/action_view/log_subscriber.rb#75
  def render_count(payload); end
end

# source://actionview/7.0.4/lib/action_view/log_subscriber.rb#64
ActionView::LogSubscriber::EMPTY = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/log_subscriber.rb#10
ActionView::LogSubscriber::VIEWS_PATTERN = T.let(T.unsafe(nil), Regexp)

class ActionView::LookupContext
  include ::ActionView::LookupContext::Accessors
  include ::ActionView::LookupContext::DetailsCache
  include ::ActionView::LookupContext::ViewPaths

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#216
  def initialize(view_paths, details = T.unsafe(nil), prefixes = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#226
  def digest_cache; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#247
  def formats=(values); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#267
  def locale; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#274
  def locale=(value); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#16
  def prefixes; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#16
  def prefixes=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#16
  def rendered_format; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#16
  def rendered_format=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#230
  def with_prepended_formats(formats); end

  private

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#237
  def initialize_details(target, details); end

  class << self
    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#21
    def register_detail(name, &block); end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#18
    def registered_details; end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#18
    def registered_details=(_arg0); end
  end
end

module ActionView::LookupContext::Accessors
  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#50
  def default_formats; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#52
  def default_handlers; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#43
  def default_locale; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#51
  def default_variants; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#27
  def formats; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#31
  def formats=(value); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#27
  def handlers; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#31
  def handlers=(value); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#27
  def locale; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#31
  def locale=(value); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#27
  def variants; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#31
  def variants=(value); end
end

# source://actionview/7.0.4/lib/action_view/lookup_context.rb#40
ActionView::LookupContext::Accessors::DEFAULT_PROCS = T.let(T.unsafe(nil), Hash)

module ActionView::LookupContext::DetailsCache
  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#95
  def cache; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#95
  def cache=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#99
  def details_key; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#104
  def disable_cache; end

  private

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#112
  def _set_detail(key, value); end
end

class ActionView::LookupContext::DetailsKey
  def eql?(_arg0); end

  class << self
    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#73
    def clear; end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#65
    def details_cache_key(details); end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#61
    def digest_cache(details); end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#82
    def digest_caches; end

    # source://actionview/7.0.4/lib/action_view/lookup_context.rb#86
    def view_context_class(klass); end
  end
end

module ActionView::LookupContext::ViewPaths
  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#144
  def any?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#144
  def any_templates?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#137
  def exists?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), **options); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#124
  def find(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#131
  def find_all(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#124
  def find_template(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#122
  def html_fallback_for_js; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#137
  def template_exists?(name, prefixes = T.unsafe(nil), partial = T.unsafe(nil), keys = T.unsafe(nil), **options); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#122
  def view_paths; end

  private

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#154
  def build_view_paths(paths); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#159
  def detail_args_for(options); end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#172
  def detail_args_for_any; end

  # source://actionview/7.0.4/lib/action_view/lookup_context.rb#193
  def normalize_name(name, prefixes); end
end

class ActionView::MissingTemplate < ::ActionView::ActionViewError
  include ::DidYouMean::Correctable

  # source://actionview/7.0.4/lib/action_view/template/error.rb#32
  def initialize(paths, path, prefixes, partial, details, *_arg5); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#92
  def corrections; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#30
  def partial; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#30
  def path; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#30
  def paths; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#30
  def prefixes; end
end

class ActionView::MissingTemplate::Results
  # source://actionview/7.0.4/lib/action_view/template/error.rb#62
  def initialize(size); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#79
  def add(path, score); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#71
  def should_record?(score); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#67
  def to_a; end
end

class ActionView::MissingTemplate::Results::Result < ::Struct
  def path; end
  def path=(_); end
  def score; end
  def score=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

module ActionView::ModelNaming
  # source://actionview/7.0.4/lib/action_view/model_naming.rb#6
  def convert_to_model(object); end

  # source://actionview/7.0.4/lib/action_view/model_naming.rb#10
  def model_name_from_record_or_class(record_or_class); end
end

class ActionView::ObjectRenderer < ::ActionView::PartialRenderer
  include ::ActionView::AbstractRenderer::ObjectRendering

  # source://actionview/7.0.4/lib/action_view/renderer/object_renderer.rb#7
  def initialize(lookup_context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/object_renderer.rb#19
  def render_object_derive_partial(object, context, block); end

  # source://actionview/7.0.4/lib/action_view/renderer/object_renderer.rb#13
  def render_object_with_partial(object, partial, context, block); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/object_renderer.rb#29
  def render_partial_template(view, locals, template, layout, block); end

  # source://actionview/7.0.4/lib/action_view/renderer/object_renderer.rb#25
  def template_keys(path); end
end

class ActionView::OutputBuffer < ::ActiveSupport::SafeBuffer
  # source://actionview/7.0.4/lib/action_view/buffers.rb#22
  def initialize(*_arg0); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#27
  def <<(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#27
  def append=(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#195
  def safe_append=(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#33
  def safe_expr_append=(val); end
end

class ActionView::OutputFlow
  # source://actionview/7.0.4/lib/action_view/flows.rb#9
  def initialize; end

  # source://actionview/7.0.4/lib/action_view/flows.rb#24
  def append(key, value); end

  # source://actionview/7.0.4/lib/action_view/flows.rb#24
  def append!(key, value); end

  # source://actionview/7.0.4/lib/action_view/flows.rb#7
  def content; end

  # source://actionview/7.0.4/lib/action_view/flows.rb#14
  def get(key); end

  # source://actionview/7.0.4/lib/action_view/flows.rb#19
  def set(key, value); end
end

class ActionView::PartialIteration
  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#13
  def initialize(size); end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#19
  def first?; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#11
  def index; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#28
  def iterate!; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#24
  def last?; end

  # source://actionview/7.0.4/lib/action_view/renderer/collection_renderer.rb#8
  def size; end
end

class ActionView::PartialRenderer < ::ActionView::AbstractRenderer
  include ::ActionView::CollectionCaching

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer.rb#223
  def initialize(lookup_context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#12
  def collection_cache; end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#12
  def collection_cache=(val); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer.rb#230
  def render(partial, context, block); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer.rb#261
  def find_template(path, locals); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer.rb#245
  def render_partial_template(view, locals, template, layout, block); end

  # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer.rb#241
  def template_keys(_); end

  class << self
    # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#12
    def collection_cache; end

    # source://actionview/7.0.4/lib/action_view/renderer/partial_renderer/collection_caching.rb#12
    def collection_cache=(val); end
  end
end

class ActionView::PathSet
  include ::Enumerable

  # source://actionview/7.0.4/lib/action_view/path_set.rb#18
  def initialize(paths = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#35
  def +(array); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#41
  def <<(*args); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#16
  def [](*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#31
  def compact; end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#41
  def concat(*args); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#16
  def each(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#60
  def exists?(path, prefixes, partial, details, details_key, locals); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#47
  def find(path, prefixes, partial, details, details_key, locals); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#52
  def find_all(path, prefixes, partial, details, details_key, locals); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#16
  def include?(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#41
  def insert(*args); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#14
  def paths; end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#16
  def pop(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#41
  def push(*args); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#16
  def size(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#27
  def to_ary; end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#41
  def unshift(*args); end

  private

  # source://actionview/7.0.4/lib/action_view/path_set.rb#22
  def initialize_copy(other); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#65
  def search_combinations(prefixes); end

  # source://actionview/7.0.4/lib/action_view/path_set.rb#74
  def typecast(paths); end
end

class ActionView::Railtie < ::Rails::Engine; end

module ActionView::RecordIdentifier
  include ::ActionView::ModelNaming
  extend ::ActionView::RecordIdentifier
  extend ::ActionView::ModelNaming

  # source://actionview/7.0.4/lib/action_view/record_identifier.rb#74
  def dom_class(record_or_class, prefix = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/record_identifier.rb#89
  def dom_id(record, prefix = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/record_identifier.rb#106
  def record_key_for_dom_id(record); end
end

# source://actionview/7.0.4/lib/action_view/record_identifier.rb#62
ActionView::RecordIdentifier::JOIN = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/record_identifier.rb#63
ActionView::RecordIdentifier::NEW = T.let(T.unsafe(nil), String)

class ActionView::Renderer
  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#16
  def initialize(lookup_context); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#56
  def cache_hits; end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#14
  def lookup_context; end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#14
  def lookup_context=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#21
  def render(context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#38
  def render_body(context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#52
  def render_partial(context, options, &block); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#64
  def render_partial_to_object(context, options, &block); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#47
  def render_template(context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#60
  def render_template_to_object(context, options); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#25
  def render_to_object(context, options); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#107
  def collection_from_object(object); end

  # source://actionview/7.0.4/lib/action_view/renderer/renderer.rb#100
  def collection_from_options(options); end
end

module ActionView::Rendering
  extend ::ActiveSupport::Concern
  include ::ActionView::ViewPaths

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods
  mixes_in_class_methods ::ActionView::Rendering::ClassMethods

  # source://actionview/7.0.4/lib/action_view/rendering.rb#31
  def initialize; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#37
  def process(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#101
  def render_to_body(options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#29
  def rendered_format; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#91
  def view_context; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#77
  def view_context_class; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#96
  def view_renderer; end

  private

  # source://actionview/7.0.4/lib/action_view/rendering.rb#134
  def _normalize_args(action = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#158
  def _normalize_options(options); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#127
  def _process_format(format); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#108
  def _render_template(options); end
end

module ActionView::Rendering::ClassMethods
  # source://actionview/7.0.4/lib/action_view/rendering.rb#48
  def _helpers; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#45
  def _routes; end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#51
  def build_view_context_class(klass, supports_path, routes, helpers); end

  # source://actionview/7.0.4/lib/action_view/rendering.rb#64
  def view_context_class; end
end

class ActionView::Resolver
  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#66
  def all_template_paths; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#52
  def caching; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#52
  def caching=(val); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#76
  def caching?(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#58
  def clear_cache; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#62
  def find_all(name, prefix = T.unsafe(nil), partial = T.unsafe(nil), details = T.unsafe(nil), key = T.unsafe(nil), locals = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#72
  def _find_all(name, prefix, partial, details, key, locals); end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#81
  def find_templates(name, prefix, partial, details, locals = T.unsafe(nil)); end

  class << self
    # source://actionview/7.0.4/lib/action_view/template/resolver.rb#52
    def caching; end

    # source://actionview/7.0.4/lib/action_view/template/resolver.rb#52
    def caching=(val); end

    # source://actionview/7.0.4/lib/action_view/template/resolver.rb#52
    def caching?; end
  end
end

# source://actionview/7.0.4/lib/action_view/template/resolver.rb#13
ActionView::Resolver::Path = ActionView::TemplatePath

class ActionView::Resolver::PathParser
  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#19
  def build_path_regex; end

  # source://actionview/7.0.4/lib/action_view/template/resolver.rb#38
  def parse(path); end
end

class ActionView::Resolver::PathParser::ParsedPath < ::Struct
  def details; end
  def details=(_); end
  def path; end
  def path=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

module ActionView::RoutingUrlFor
  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#82
  def url_for(options = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#124
  def url_options; end

  private

  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#139
  def _generate_paths_by_default; end

  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#130
  def _routes_context; end

  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#143
  def ensure_only_path_option(options); end

  # source://actionview/7.0.4/lib/action_view/routing_url_for.rb#134
  def optimize_routes_generation?; end
end

class ActionView::StreamingBuffer
  # source://actionview/7.0.4/lib/action_view/buffers.rb#42
  def initialize(block); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#46
  def <<(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#46
  def append=(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#46
  def concat(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#63
  def html_safe; end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#59
  def html_safe?; end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#54
  def safe_append=(value); end

  # source://actionview/7.0.4/lib/action_view/buffers.rb#54
  def safe_concat(value); end
end

class ActionView::StreamingFlow < ::ActionView::OutputFlow
  # source://actionview/7.0.4/lib/action_view/flows.rb#31
  def initialize(view, fiber); end

  # source://actionview/7.0.4/lib/action_view/flows.rb#65
  def append!(key, value); end

  # source://actionview/7.0.4/lib/action_view/flows.rb#43
  def get(key); end

  private

  # source://actionview/7.0.4/lib/action_view/flows.rb#71
  def inside_fiber?; end
end

class ActionView::StreamingTemplateRenderer < ::ActionView::TemplateRenderer
  # source://actionview/7.0.4/lib/action_view/renderer/streaming_template_renderer.rb#45
  def render_template(view, template, layout_name = T.unsafe(nil), locals = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/streaming_template_renderer.rb#57
  def delayed_render(buffer, template, layout, view, locals); end
end

class ActionView::StreamingTemplateRenderer::Body
  # source://actionview/7.0.4/lib/action_view/renderer/streaming_template_renderer.rb#15
  def initialize(&start); end

  # source://actionview/7.0.4/lib/action_view/renderer/streaming_template_renderer.rb#19
  def each(&block); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/streaming_template_renderer.rb#31
  def log_error(exception); end
end

class ActionView::SyntaxErrorInTemplate < ::ActionView::Template::Error
  # source://actionview/7.0.4/lib/action_view/template/error.rb#233
  def initialize(template, offending_code_string); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#244
  def annotated_source_code; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#238
  def message; end
end

class ActionView::Template
  extend ::ActiveSupport::Autoload
  extend ::ActionView::Template::Handlers

  # source://actionview/7.0.4/lib/action_view/template.rb#123
  def initialize(source, identifier, handler, locals:, format: T.unsafe(nil), variant: T.unsafe(nil), virtual_path: T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/template.rb#189
  def encode!; end

  # source://actionview/7.0.4/lib/action_view/template.rb#121
  def format; end

  # source://actionview/7.0.4/lib/action_view/template.rb#120
  def handler; end

  # source://actionview/7.0.4/lib/action_view/template.rb#120
  def identifier; end

  # source://actionview/7.0.4/lib/action_view/template.rb#171
  def inspect; end

  # source://actionview/7.0.4/lib/action_view/template.rb#121
  def locals; end

  # source://actionview/7.0.4/lib/action_view/template.rb#229
  def marshal_dump; end

  # source://actionview/7.0.4/lib/action_view/template.rb#233
  def marshal_load(array); end

  # source://actionview/7.0.4/lib/action_view/template.rb#154
  def render(view, locals, buffer = T.unsafe(nil), add_to_stack: T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/template.rb#167
  def short_identifier; end

  # source://actionview/7.0.4/lib/action_view/template.rb#175
  def source; end

  # source://actionview/7.0.4/lib/action_view/template.rb#144
  def supports_streaming?; end

  # source://actionview/7.0.4/lib/action_view/template.rb#163
  def type; end

  # source://actionview/7.0.4/lib/action_view/template.rb#121
  def variable; end

  # source://actionview/7.0.4/lib/action_view/template.rb#121
  def variant; end

  # source://actionview/7.0.4/lib/action_view/template.rb#121
  def virtual_path; end

  private

  # source://actionview/7.0.4/lib/action_view/template.rb#275
  def compile(mod); end

  # source://actionview/7.0.4/lib/action_view/template.rb#241
  def compile!(view); end

  # source://actionview/7.0.4/lib/action_view/template.rb#316
  def handle_render_error(view, e); end

  # source://actionview/7.0.4/lib/action_view/template.rb#352
  def identifier_method_name; end

  # source://actionview/7.0.4/lib/action_view/template.rb#356
  def instrument(action, &block); end

  # source://actionview/7.0.4/lib/action_view/template.rb#364
  def instrument_payload; end

  # source://actionview/7.0.4/lib/action_view/template.rb#360
  def instrument_render_template(&block); end

  # source://actionview/7.0.4/lib/action_view/template.rb#325
  def locals_code; end

  # source://actionview/7.0.4/lib/action_view/template.rb#344
  def method_name; end

  class << self
    # source://actionview/7.0.4/lib/action_view/template.rb#117
    def frozen_string_literal; end

    # source://actionview/7.0.4/lib/action_view/template.rb#117
    def frozen_string_literal=(_arg0); end
  end
end

class ActionView::Template::Error < ::ActionView::ActionViewError
  # source://actionview/7.0.4/lib/action_view/template/error.rb#159
  def initialize(template); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#207
  def annotated_source_code; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#157
  def cause; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#166
  def file_name; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#199
  def line_number; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#179
  def source_extract(indentation = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#170
  def sub_template_message; end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#194
  def sub_template_of(template_path); end

  private

  # source://actionview/7.0.4/lib/action_view/template/error.rb#220
  def formatted_code_for(source_code, line_counter, indent); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#212
  def source_location; end
end

# source://actionview/7.0.4/lib/action_view/template/error.rb#154
ActionView::Template::Error::SOURCE_CODE_RADIUS = T.let(T.unsafe(nil), Integer)

class ActionView::Template::HTML
  # source://actionview/7.0.4/lib/action_view/template/html.rb#9
  def initialize(string, type); end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#28
  def format; end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#14
  def identifier; end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#14
  def inspect; end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#24
  def render(*args); end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#20
  def to_str; end

  # source://actionview/7.0.4/lib/action_view/template/html.rb#7
  def type; end
end

module ActionView::Template::Handlers
  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#61
  def handler_for_extension(extension); end

  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#56
  def register_default_template_handler(extension, klass); end

  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#31
  def register_template_handler(*extensions, handler); end

  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#52
  def registered_template_handler(extension); end

  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#48
  def template_handler_extensions; end

  # source://actionview/7.0.4/lib/action_view/template/handlers.rb#40
  def unregister_template_handler(*extensions); end

  class << self
    # source://actionview/7.0.4/lib/action_view/template/handlers.rb#12
    def extended(base); end

    # source://actionview/7.0.4/lib/action_view/template/handlers.rb#23
    def extensions; end
  end
end

class ActionView::Template::Handlers::Builder
  # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#8
  def call(template, source); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
  def default_format; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
  def default_format=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
  def default_format?; end

  private

  # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#17
  def require_engine; end

  class << self
    # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
    def default_format; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
    def default_format=(value); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/builder.rb#6
    def default_format?; end
  end
end

class ActionView::Template::Handlers::ERB
  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#36
  def call(template, source); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
  def erb_implementation; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
  def erb_implementation=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
  def erb_implementation?; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
  def erb_trim_mode; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
  def erb_trim_mode=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
  def erb_trim_mode?; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
  def escape_ignore_list; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
  def escape_ignore_list=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
  def escape_ignore_list?; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#32
  def handles_encoding?; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
  def strip_trailing_newlines; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
  def strip_trailing_newlines=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
  def strip_trailing_newlines?; end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#28
  def supports_streaming?; end

  private

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#68
  def valid_encoding(string, encoding); end

  class << self
    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#24
    def call(template, source); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
    def erb_implementation; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
    def erb_implementation=(value); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#14
    def erb_implementation?; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
    def erb_trim_mode; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
    def erb_trim_mode=(value); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#11
    def erb_trim_mode?; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
    def escape_ignore_list; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
    def escape_ignore_list=(value); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#17
    def escape_ignore_list?; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
    def strip_trailing_newlines; end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
    def strip_trailing_newlines=(value); end

    # source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#20
    def strip_trailing_newlines?; end
  end
end

# source://actionview/7.0.4/lib/action_view/template/handlers/erb.rb#22
ActionView::Template::Handlers::ERB::ENCODING_TAG = T.let(T.unsafe(nil), Regexp)

class ActionView::Template::Handlers::ERB::Erubi < ::Erubi::Engine
  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#11
  def initialize(input, properties = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#26
  def evaluate(action_view_erb_handler_context); end

  private

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#69
  def add_code(code); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#53
  def add_expression(indicator, code); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#74
  def add_postamble(_); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#36
  def add_text(text); end

  # source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#79
  def flush_newline_if_pending(src); end
end

# source://actionview/7.0.4/lib/action_view/template/handlers/erb/erubi.rb#51
ActionView::Template::Handlers::ERB::Erubi::BLOCK_EXPR = T.let(T.unsafe(nil), Regexp)

class ActionView::Template::Handlers::Html < ::ActionView::Template::Handlers::Raw
  # source://actionview/7.0.4/lib/action_view/template/handlers/html.rb#6
  def call(template, source); end
end

class ActionView::Template::Handlers::Raw
  # source://actionview/7.0.4/lib/action_view/template/handlers/raw.rb#6
  def call(template, source); end
end

class ActionView::Template::Inline < ::ActionView::Template
  # source://actionview/7.0.4/lib/action_view/template/inline.rb#16
  def compile(mod); end
end

# source://actionview/7.0.4/lib/action_view/template/inline.rb#8
ActionView::Template::Inline::Finalizer = T.let(T.unsafe(nil), Proc)

class ActionView::Template::RawFile
  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#9
  def initialize(filename); end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#7
  def format; end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#7
  def format=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#16
  def identifier; end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#20
  def render(*args); end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#7
  def type; end

  # source://actionview/7.0.4/lib/action_view/template/raw_file.rb#7
  def type=(_arg0); end
end

class ActionView::Template::Renderable
  # source://actionview/7.0.4/lib/action_view/template/renderable.rb#7
  def initialize(renderable); end

  # source://actionview/7.0.4/lib/action_view/template/renderable.rb#19
  def format; end

  # source://actionview/7.0.4/lib/action_view/template/renderable.rb#11
  def identifier; end

  # source://actionview/7.0.4/lib/action_view/template/renderable.rb#15
  def render(context, *args); end
end

module ActionView::Template::Sources
  extend ::ActiveSupport::Autoload
end

class ActionView::Template::Sources::File
  # source://actionview/7.0.4/lib/action_view/template/sources/file.rb#7
  def initialize(filename); end

  # source://actionview/7.0.4/lib/action_view/template/sources/file.rb#11
  def to_s; end
end

class ActionView::Template::Text
  # source://actionview/7.0.4/lib/action_view/template/text.rb#9
  def initialize(string); end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#27
  def format; end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#13
  def identifier; end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#13
  def inspect; end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#23
  def render(*args); end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#19
  def to_str; end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#7
  def type; end

  # source://actionview/7.0.4/lib/action_view/template/text.rb#7
  def type=(_arg0); end
end

module ActionView::Template::Types
  class << self
    # source://actionview/7.0.4/lib/action_view/template/types.rb#47
    def [](type); end

    # source://actionview/7.0.4/lib/action_view/template/types.rb#43
    def delegate_to(klass); end

    # source://actionview/7.0.4/lib/action_view/template/types.rb#51
    def symbols; end

    # source://actionview/7.0.4/lib/action_view/template/types.rb#41
    def type_klass; end

    # source://actionview/7.0.4/lib/action_view/template/types.rb#41
    def type_klass=(_arg0); end
  end
end

class ActionView::Template::Types::Type
  # source://actionview/7.0.4/lib/action_view/template/types.rb#21
  def initialize(symbol); end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#35
  def ==(type); end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#30
  def ref; end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#19
  def symbol; end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#25
  def to_s; end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#25
  def to_str; end

  # source://actionview/7.0.4/lib/action_view/template/types.rb#30
  def to_sym; end

  class << self
    # source://actionview/7.0.4/lib/action_view/template/types.rb#11
    def [](type); end
  end
end

# source://actionview/7.0.4/lib/action_view/template/types.rb#9
ActionView::Template::Types::Type::SET = T.let(T.unsafe(nil), T.untyped)

class ActionView::TemplateDetails
  # source://actionview/7.0.4/lib/action_view/template_details.rb#35
  def initialize(locale, handler, format, variant); end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#33
  def format; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#62
  def format_or_default; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#33
  def handler; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#58
  def handler_class; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#33
  def locale; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#42
  def matches?(requested); end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#49
  def sort_key_for(requested); end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#33
  def variant; end
end

class ActionView::TemplateDetails::Requested
  # source://actionview/7.0.4/lib/action_view/template_details.rb#11
  def initialize(locale:, handlers:, formats:, variants:); end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#6
  def formats; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#7
  def formats_idx; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#6
  def handlers; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#7
  def handlers_idx; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#6
  def locale; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#7
  def locale_idx; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#6
  def variants; end

  # source://actionview/7.0.4/lib/action_view/template_details.rb#7
  def variants_idx; end

  private

  # source://actionview/7.0.4/lib/action_view/template_details.rb#28
  def build_idx_hash(arr); end
end

# source://actionview/7.0.4/lib/action_view/template_details.rb#9
ActionView::TemplateDetails::Requested::ANY_HASH = T.let(T.unsafe(nil), Hash)

# source://actionview/7.0.4/lib/action_view/template/error.rb#230
ActionView::TemplateError = ActionView::Template::Error

class ActionView::TemplatePath
  # source://actionview/7.0.4/lib/action_view/template_path.rb#45
  def initialize(name, prefix, partial, virtual); end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#59
  def ==(other); end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#59
  def eql?(other); end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#55
  def hash; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def name; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def partial; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def partial?; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def prefix; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def to_s; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def to_str; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def virtual; end

  # source://actionview/7.0.4/lib/action_view/template_path.rb#10
  def virtual_path; end

  class << self
    # source://actionview/7.0.4/lib/action_view/template_path.rb#41
    def build(name, prefix, partial); end

    # source://actionview/7.0.4/lib/action_view/template_path.rb#26
    def parse(virtual); end

    # source://actionview/7.0.4/lib/action_view/template_path.rb#15
    def virtual(name, prefix, partial); end
  end
end

class ActionView::TemplateRenderer < ::ActionView::AbstractRenderer
  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#5
  def render(context, options); end

  private

  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#16
  def determine_template(options); end

  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#87
  def find_layout(layout, keys, formats); end

  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#58
  def render_template(view, template, layout_name, locals); end

  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#70
  def render_with_layout(view, template, path, locals); end

  # source://actionview/7.0.4/lib/action_view/renderer/template_renderer.rb#91
  def resolve_layout(layout, keys, formats); end
end

class ActionView::TestCase < ::ActiveSupport::TestCase
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::AbstractController::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionDispatch::Assertions
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionView::RoutingUrlFor
  include ::ActionView::TestCase::Behavior
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionView::TestCase::Behavior::ClassMethods

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods; end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods=(_arg0); end

  # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
  def _helper_methods?; end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation; end

  # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation=(val); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods=(value); end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods?; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#15
    def _helpers; end

    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation; end

    # source://actionview/7.0.4/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation=(val); end
  end
end

module ActionView::TestCase::Behavior
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::RoutingUrlFor
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::Rails::Dom::Testing::Assertions
  include ::AbstractController::Helpers
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers
  include ::ActiveSupport::Testing::ConstantLookup

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::AbstractController::Helpers::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods
  mixes_in_class_methods ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  mixes_in_class_methods ::ActionView::TestCase::Behavior::ClassMethods

  # source://actionview/7.0.4/lib/action_view/test_case.rb#136
  def _routes; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#122
  def config; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def controller; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def controller=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#59
  def lookup_context(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def output_buffer; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def output_buffer=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#126
  def render(options = T.unsafe(nil), local_assigns = T.unsafe(nil), &block); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def rendered; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def rendered=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#132
  def rendered_views; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def request; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#60
  def request=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#108
  def setup_with_controller; end

  private

  # source://actionview/7.0.4/lib/action_view/test_case.rb#251
  def _user_defined_ivars; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#207
  def _view; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#183
  def document_root_element; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#265
  def method_missing(selector, *args); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#281
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#207
  def view; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#259
  def view_assigns; end

  module GeneratedClassMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end

  module GeneratedInstanceMethods
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
  end
end

module ActionView::TestCase::Behavior::ClassMethods
  # source://actionview/7.0.4/lib/action_view/test_case.rb#72
  def determine_default_helper_class(name); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#92
  def helper_class; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#90
  def helper_class=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#78
  def helper_method(*methods); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#96
  def new(*_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#63
  def tests(helper_class); end

  private

  # source://actionview/7.0.4/lib/action_view/test_case.rb#102
  def include_helper_modules!; end
end

# source://actionview/7.0.4/lib/action_view/test_case.rb#220
ActionView::TestCase::Behavior::INTERNAL_IVARS = T.let(T.unsafe(nil), Array)

module ActionView::TestCase::Behavior::Locals
  # source://actionview/7.0.4/lib/action_view/test_case.rb#190
  def render(options = T.unsafe(nil), local_assigns = T.unsafe(nil)); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#188
  def rendered_views; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#188
  def rendered_views=(_arg0); end
end

class ActionView::TestCase::Behavior::RenderedViewsCollection
  # source://actionview/7.0.4/lib/action_view/test_case.rb#142
  def initialize; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#146
  def add(view, locals); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#151
  def locals_for(view); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#155
  def rendered_views; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#159
  def view_rendered?(view, expected_locals); end
end

module ActionView::TestCase::HelperMethods
  # source://actionview/7.0.4/lib/action_view/test_case.rb#175
  def _test_case; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#171
  def protect_against_forgery?; end
end

class ActionView::TestCase::TestController < ::ActionController::Base
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess

  # source://actionview/7.0.4/lib/action_view/test_case.rb#31
  def initialize; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#23
  def controller_path=(path); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def params; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def params=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def request; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def request=(_arg0); end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def response; end

  # source://actionview/7.0.4/lib/action_view/test_case.rb#16
  def response=(_arg0); end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://actionview/7.0.4/lib/action_view/test_case.rb#27
    def controller_name; end

    # source://actionview/7.0.4/lib/action_view/test_case.rb#20
    def controller_path; end

    # source://actionview/7.0.4/lib/action_view/test_case.rb#20
    def controller_path=(_arg0); end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

class ActionView::UnboundTemplate
  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#10
  def initialize(source, identifier, details:, virtual_path:); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#20
  def bind_locals(locals); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#7
  def details; end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#8
  def format(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#8
  def handler(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#8
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#8
  def variant(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#7
  def virtual_path; end

  private

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#39
  def build_template(locals); end

  # source://actionview/7.0.4/lib/action_view/unbound_template.rb#53
  def normalize_locals(locals); end
end

module ActionView::VERSION; end

# source://actionview/7.0.4/lib/action_view/gem_version.rb#10
ActionView::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.0.4/lib/action_view/gem_version.rb#11
ActionView::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.0.4/lib/action_view/gem_version.rb#13
ActionView::VERSION::PRE = T.let(T.unsafe(nil), T.untyped)

# source://actionview/7.0.4/lib/action_view/gem_version.rb#15
ActionView::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://actionview/7.0.4/lib/action_view/gem_version.rb#12
ActionView::VERSION::TINY = T.let(T.unsafe(nil), Integer)

module ActionView::ViewPaths
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActionView::ViewPaths::ClassMethods

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#90
  def _prefixes; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def any_templates?(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#112
  def append_view_path(path); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#102
  def details_for_lookup; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def formats=(arg); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def locale=(arg); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#97
  def lookup_context; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#122
  def prepend_view_path(path); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def template_exists?(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#11
  def view_paths(*_arg0, **_arg1, &_arg2); end

  class << self
    # source://actionview/7.0.4/lib/action_view/view_paths.rb#84
    def all_view_paths; end

    # source://actionview/7.0.4/lib/action_view/view_paths.rb#76
    def get_view_paths(klass); end

    # source://actionview/7.0.4/lib/action_view/view_paths.rb#80
    def set_view_paths(klass, paths); end
  end
end

module ActionView::ViewPaths::ClassMethods
  # source://actionview/7.0.4/lib/action_view/view_paths.rb#23
  def _prefixes; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#15
  def _view_paths; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#19
  def _view_paths=(paths); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#37
  def append_view_path(path); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#47
  def prepend_view_path(path); end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#52
  def view_paths; end

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#61
  def view_paths=(paths); end

  private

  # source://actionview/7.0.4/lib/action_view/view_paths.rb#68
  def local_prefixes; end
end

class ActionView::WrongEncodingError < ::ActionView::EncodingError
  # source://actionview/7.0.4/lib/action_view/template/error.rb#14
  def initialize(string, encoding); end

  # source://actionview/7.0.4/lib/action_view/template/error.rb#18
  def message; end
end

module ActiveSupport::Autoload
  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#37
  def autoload(const_name, path = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#57
  def autoload_at(path); end

  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#50
  def autoload_under(path); end

  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#75
  def autoloads; end

  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#64
  def eager_autoload; end

  # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#71
  def eager_load!; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/dependencies/autoload.rb#28
    def extended(base); end
  end
end

module ActiveSupport::Benchmarkable
  # source://activesupport/7.0.4/lib/active_support/benchmarkable.rb#37
  def benchmark(message = T.unsafe(nil), options = T.unsafe(nil), &block); end
end

module ActiveSupport::Callbacks
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#95
  def run_callbacks(kind); end

  private

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#147
  def halted_callback_hook(filter, name); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
  end
end

# source://activesupport/7.0.4/lib/active_support/callbacks.rb#71
ActiveSupport::Callbacks::CALLBACK_FILTER_TYPES = T.let(T.unsafe(nil), Array)

module ActiveSupport::Callbacks::CallTemplate
  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#533
    def build(filter, callback); end
  end
end

class ActiveSupport::Callbacks::CallTemplate::InstanceExec0
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#435
  def initialize(block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#439
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#449
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#443
  def make_lambda; end
end

class ActiveSupport::Callbacks::CallTemplate::InstanceExec1
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#457
  def initialize(block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#461
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#471
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#465
  def make_lambda; end
end

class ActiveSupport::Callbacks::CallTemplate::InstanceExec2
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#479
  def initialize(block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#483
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#495
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#488
  def make_lambda; end
end

class ActiveSupport::Callbacks::CallTemplate::MethodCall
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#377
  def initialize(method); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#394
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#404
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#398
  def make_lambda; end
end

class ActiveSupport::Callbacks::CallTemplate::ObjectCall
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#412
  def initialize(target, method); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#417
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#427
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#421
  def make_lambda; end
end

class ActiveSupport::Callbacks::CallTemplate::ProcCall
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#504
  def initialize(target); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#508
  def expand(target, value, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#518
  def inverted_lambda; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#512
  def make_lambda; end
end

class ActiveSupport::Callbacks::Callback
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#295
  def initialize(name, filter, kind, options, chain_config); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#330
  def apply(callback_sequence); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#293
  def chain_config; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#344
  def current_scopes; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#320
  def duplicates?(other); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#293
  def filter; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#292
  def kind; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#292
  def kind=(_arg0); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#316
  def matches?(_kind, _filter); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#304
  def merge_conditional_options(chain, if_option:, unless_option:); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#292
  def name; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#292
  def name=(_arg0); end

  private

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#352
  def check_conditionals(conditionals); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#367
  def conditions_lambdas; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#281
    def build(chain, filter, kind, options); end
  end
end

class ActiveSupport::Callbacks::CallbackChain
  include ::Enumerable

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#608
  def initialize(name, config); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#654
  def append(*callbacks); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#633
  def clear; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#645
  def compile; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#606
  def config; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#628
  def delete(o); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#619
  def each(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#621
  def empty?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#620
  def index(o); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#623
  def insert(index, o); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#606
  def name; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#658
  def prepend(*callbacks); end

  protected

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#663
  def chain; end

  private

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#666
  def append_one(callback); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#683
  def default_terminator; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#639
  def initialize_copy(other); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#672
  def prepend_one(callback); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#678
  def remove_duplicates(callback); end
end

class ActiveSupport::Callbacks::CallbackSequence
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#557
  def initialize(nested = T.unsafe(nil), call_template = T.unsafe(nil), user_conditions = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#571
  def after(&after); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#576
  def around(call_template, user_conditions); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#566
  def before(&before); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#590
  def expand_call_template(arg, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#586
  def final?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#598
  def invoke_after(arg); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#594
  def invoke_before(arg); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#584
  def nested; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#580
  def skip?(arg); end
end

module ActiveSupport::Callbacks::ClassMethods
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#705
  def __update_callbacks(name); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#917
  def define_callbacks(*names); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#696
  def normalize_callback_params(filters, block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#827
  def reset_callbacks(name); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#756
  def set_callback(name, *filter_list, &block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#802
  def skip_callback(name, *filter_list, &block); end

  protected

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#948
  def get_callbacks(name); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#952
  def set_callbacks(name, callbacks); end
end

module ActiveSupport::Callbacks::Conditionals; end

class ActiveSupport::Callbacks::Conditionals::Value
  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#152
  def initialize(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#155
  def call(target, value); end
end

module ActiveSupport::Callbacks::Filters; end

class ActiveSupport::Callbacks::Filters::After
  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#213
    def build(callback_sequence, user_callback, user_conditions, chain_config); end

    private

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#255
    def conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#244
    def halting(callback_sequence, user_callback); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#229
    def halting_and_conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#269
    def simple(callback_sequence, user_callback); end
  end
end

class ActiveSupport::Callbacks::Filters::Before
  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#163
    def build(callback_sequence, user_callback, user_conditions, chain_config, filter, name); end

    private

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#192
    def halting(callback_sequence, user_callback, halted_lambda, filter, name); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#173
    def halting_and_conditional(callback_sequence, user_callback, user_conditions, halted_lambda, filter, name); end
  end
end

class ActiveSupport::Callbacks::Filters::Environment < ::Struct
  def halted; end
  def halted=(_); end
  def target; end
  def target=(_); end
  def value; end
  def value=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

module ActiveSupport::Concern
  # source://activesupport/7.0.4/lib/active_support/concern.rb#127
  def append_features(base); end

  # source://activesupport/7.0.4/lib/active_support/concern.rb#207
  def class_methods(&class_methods_module_definition); end

  # source://activesupport/7.0.4/lib/active_support/concern.rb#156
  def included(base = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/concern.rb#140
  def prepend_features(base); end

  # source://activesupport/7.0.4/lib/active_support/concern.rb#173
  def prepended(base = T.unsafe(nil), &block); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/concern.rb#123
    def extended(base); end
  end
end

class ActiveSupport::Concern::MultipleIncludedBlocks < ::StandardError
  # source://activesupport/7.0.4/lib/active_support/concern.rb#112
  def initialize; end
end

class ActiveSupport::Concern::MultiplePrependBlocks < ::StandardError
  # source://activesupport/7.0.4/lib/active_support/concern.rb#118
  def initialize; end
end

module ActiveSupport::Configurable
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActiveSupport::Configurable::ClassMethods

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#145
  def config; end
end

module ActiveSupport::Configurable::ClassMethods
  # source://activesupport/7.0.4/lib/active_support/configurable.rb#28
  def config; end

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#37
  def configure; end

  private

  # source://activesupport/7.0.4/lib/active_support/configurable.rb#109
  def config_accessor(*names, instance_reader: T.unsafe(nil), instance_writer: T.unsafe(nil), instance_accessor: T.unsafe(nil), default: T.unsafe(nil)); end
end

class ActiveSupport::Configurable::Configuration < ::ActiveSupport::InheritableOptions
  # source://activesupport/7.0.4/lib/active_support/configurable.rb#13
  def compile_methods!; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/configurable.rb#18
    def compile_methods!(keys); end
  end
end

module ActiveSupport::DescendantsTracker
  # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#88
  def descendants; end

  # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#92
  def direct_descendants; end

  # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#82
  def subclasses; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#66
    def clear(classes); end

    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#62
    def descendants(klass); end

    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#11
    def direct_descendants(klass); end

    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#50
    def disable_clear!; end

    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#77
    def native?; end

    # source://activesupport/7.0.4/lib/active_support/descendants_tracker.rb#58
    def subclasses(klass); end
  end
end

class ActiveSupport::InheritableOptions < ::ActiveSupport::OrderedOptions
  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#80
  def initialize(parent = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#91
  def inheritable_copy; end
end

class ActiveSupport::LogSubscriber < ::ActiveSupport::Subscriber
  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#80
  def colorize_logging; end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#80
  def colorize_logging=(val); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def debug(progname = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def error(progname = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def fatal(progname = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#114
  def finish(name, id, payload); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def info(progname = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#106
  def logger; end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#120
  def publish_event(event); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#110
  def start(name, id, payload); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def unknown(progname = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#129
  def warn(progname = T.unsafe(nil), &block); end

  private

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#139
  def color(text, color, bold = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#146
  def log_exception(name, e); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#80
    def colorize_logging; end

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#80
    def colorize_logging=(val); end

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#96
    def flush_all!; end

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#91
    def log_subscribers; end

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#83
    def logger; end

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#89
    def logger=(_arg0); end

    private

    # source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#101
    def fetch_public_methods(subscriber, inherit_all); end
  end
end

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#71
ActiveSupport::LogSubscriber::BLACK = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#75
ActiveSupport::LogSubscriber::BLUE = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#68
ActiveSupport::LogSubscriber::BOLD = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#67
ActiveSupport::LogSubscriber::CLEAR = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#77
ActiveSupport::LogSubscriber::CYAN = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#73
ActiveSupport::LogSubscriber::GREEN = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#76
ActiveSupport::LogSubscriber::MAGENTA = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#72
ActiveSupport::LogSubscriber::RED = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#78
ActiveSupport::LogSubscriber::WHITE = T.let(T.unsafe(nil), String)

# source://activesupport/7.0.4/lib/active_support/log_subscriber.rb#74
ActiveSupport::LogSubscriber::YELLOW = T.let(T.unsafe(nil), String)

class ActiveSupport::OrderedOptions < ::Hash
  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#39
  def [](key); end

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#35
  def []=(key, value); end

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#62
  def extractable_options?; end

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#66
  def inspect; end

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#43
  def method_missing(name, *args); end

  protected

  def _get(_arg0); end

  private

  # source://activesupport/7.0.4/lib/active_support/ordered_options.rb#58
  def respond_to_missing?(name, include_private); end
end

module ActiveSupport::Rescuable
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Rescuable::ClassMethods

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#170
  def handler_for_rescue(exception); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#164
  def rescue_with_handler(exception); end

  module GeneratedClassMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end

  module GeneratedInstanceMethods
    def rescue_handlers; end
    def rescue_handlers=(value); end
    def rescue_handlers?; end
  end
end

module ActiveSupport::Rescuable::ClassMethods
  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#103
  def handler_for_rescue(exception, object: T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#51
  def rescue_from(*klasses, with: T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#88
  def rescue_with_handler(exception, object: T.unsafe(nil), visited_exceptions: T.unsafe(nil)); end

  private

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#137
  def constantize_rescue_handler_class(class_or_name); end

  # source://activesupport/7.0.4/lib/active_support/rescuable.rb#122
  def find_rescue_handler(exception); end
end

class ActiveSupport::SafeBuffer < ::String
  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#200
  def initialize(str = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#253
  def %(args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#246
  def *(*_arg0); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#242
  def +(other); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#214
  def <<(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#181
  def [](*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#234
  def []=(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def capitalize(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def capitalize!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def chomp(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def chomp!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def chop(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def chop!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#210
  def clone_empty; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#214
  def concat(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def delete(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def delete!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def delete_prefix(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def delete_prefix!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def delete_suffix(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def delete_suffix!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def downcase(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def downcase!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#276
  def encode_with(coder); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#297
  def gsub(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#308
  def gsub!(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#264
  def html_safe?; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#222
  def insert(index, value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def lstrip(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def lstrip!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def next(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def next!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#226
  def prepend(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#230
  def replace(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def reverse(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def reverse!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def rstrip(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def rstrip!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#195
  def safe_concat(value); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def scrub(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def scrub!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def slice(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def slice!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def squeeze(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def squeeze!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def strip(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def strip!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#297
  def sub(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#308
  def sub!(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def succ(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def succ!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def swapcase(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def swapcase!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#272
  def to_param; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#268
  def to_s; end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def tr(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def tr!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def tr_s(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def tr_s!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def unicode_normalize(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def unicode_normalize!(*args); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#283
  def upcase(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#287
  def upcase!(*args); end

  private

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#323
  def explicit_html_escape_interpolated_argument(arg); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#327
  def implicit_html_escape_interpolated_argument(arg); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#205
  def initialize_copy(other); end

  def original_concat(*_arg0); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#350
  def set_block_back_references(block, match_data); end
end

class ActiveSupport::SafeBuffer::SafeConcatError < ::StandardError
  # source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#176
  def initialize; end
end

# source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#163
ActiveSupport::SafeBuffer::UNSAFE_STRING_METHODS = T.let(T.unsafe(nil), Array)

# source://activesupport/7.0.4/lib/active_support/core_ext/string/output_safety.rb#169
ActiveSupport::SafeBuffer::UNSAFE_STRING_METHODS_WITH_BACKREF = T.let(T.unsafe(nil), Array)

class ActiveSupport::Subscriber
  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#128
  def initialize; end

  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#143
  def finish(name, id, payload); end

  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#126
  def patterns; end

  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#152
  def publish_event(event); end

  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#134
  def start(name, id, payload); end

  private

  # source://activesupport/7.0.4/lib/active_support/subscriber.rb#158
  def event_stack; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#33
    def attach_to(namespace, subscriber = T.unsafe(nil), notifier = T.unsafe(nil), inherit_all: T.unsafe(nil)); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#48
    def detach_from(namespace, notifier = T.unsafe(nil)); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#67
    def method_added(event); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#76
    def subscribers; end

    private

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#83
    def add_event_subscriber(event); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#121
    def fetch_public_methods(subscriber, inherit_all); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#105
    def find_attached_subscriber; end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#109
    def invalid_event?(event); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#81
    def namespace; end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#81
    def notifier; end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#117
    def pattern_subscribed?(pattern); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#113
    def prepare_pattern(event); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#94
    def remove_event_subscriber(event); end

    # source://activesupport/7.0.4/lib/active_support/subscriber.rb#81
    def subscriber; end
  end
end

class ActiveSupport::TestCase < ::Minitest::Test
  include ::ActiveSupport::Testing::SetupAndTeardown
  include ::ActiveSupport::Testing::TaggedLogging
  include ::ActiveSupport::Callbacks
  include ::ActiveSupport::Testing::Assertions
  include ::ActiveSupport::Testing::Deprecation
  include ::ActiveSupport::Testing::TimeHelpers
  include ::ActiveSupport::Testing::FileFixtures
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveSupport::Testing::SetupAndTeardown::ClassMethods
  extend ::ActiveSupport::Testing::Declarative

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_setup_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_teardown_callbacks(&block); end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _setup_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _teardown_callbacks; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#709
  def assert_no_match(matcher, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#638
  def assert_not_empty(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#649
  def assert_not_equal(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#661
  def assert_not_in_delta(exp, act, delta = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#673
  def assert_not_in_epsilon(a, b, epsilon = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#680
  def assert_not_includes(collection, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#691
  def assert_not_instance_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#701
  def assert_not_kind_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#719
  def assert_not_nil(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#730
  def assert_not_operator(o1, op, o2 = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#753
  def assert_not_predicate(o1, op, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#761
  def assert_not_respond_to(obj, meth, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#770
  def assert_not_same(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#396
  def assert_raise(*exp); end

  # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#20
  def file_fixture_path; end

  # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#20
  def file_fixture_path?; end

  # source://activesupport/7.0.4/lib/active_support/test_case.rb#151
  def inspect; end

  # source://minitest/5.16.3/lib/minitest.rb#304
  def method_name; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks?; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _setup_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _setup_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _teardown_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _teardown_callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#20
    def file_fixture_path; end

    # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#20
    def file_fixture_path=(value); end

    # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#20
    def file_fixture_path?; end

    # source://activesupport/7.0.4/lib/active_support/test_case.rb#79
    def parallelize(workers: T.unsafe(nil), with: T.unsafe(nil), threshold: T.unsafe(nil)); end

    # source://activesupport/7.0.4/lib/active_support/test_case.rb#101
    def parallelize_setup(&block); end

    # source://activesupport/7.0.4/lib/active_support/test_case.rb#118
    def parallelize_teardown(&block); end

    # source://activesupport/7.0.4/lib/active_support/test_case.rb#42
    def test_order; end

    # source://activesupport/7.0.4/lib/active_support/test_case.rb#32
    def test_order=(new_order); end
  end
end

# source://activesupport/7.0.4/lib/active_support/test_case.rb#20
ActiveSupport::TestCase::Assertion = Minitest::Assertion

module ActiveSupport::Testing::Assertions
  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#175
  def assert_changes(expression, message = T.unsafe(nil), from: T.unsafe(nil), to: T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#86
  def assert_difference(expression, *args, &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#222
  def assert_no_changes(expression, message = T.unsafe(nil), from: T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#137
  def assert_no_difference(expression, message = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#21
  def assert_not(object, message = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#33
  def assert_nothing_raised; end

  private

  # source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#249
  def _assert_nothing_raised_or_warn(assertion, &block); end
end

# source://activesupport/7.0.4/lib/active_support/testing/assertions.rb#8
ActiveSupport::Testing::Assertions::UNTRACKED = T.let(T.unsafe(nil), Object)

module ActiveSupport::Testing::ConstantLookup
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::ActiveSupport::Testing::ConstantLookup::ClassMethods
end

module ActiveSupport::Testing::ConstantLookup::ClassMethods
  # source://activesupport/7.0.4/lib/active_support/testing/constant_lookup.rb#36
  def determine_constant_from_test_name(test_name); end
end

module ActiveSupport::Testing::Declarative
  # source://activesupport/7.0.4/lib/active_support/testing/declarative.rb#13
  def test(name, &block); end
end

module ActiveSupport::Testing::Deprecation
  # source://activesupport/7.0.4/lib/active_support/testing/deprecation.rb#31
  def assert_deprecated(match = T.unsafe(nil), deprecator = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/deprecation.rb#56
  def assert_not_deprecated(deprecator = T.unsafe(nil), &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/deprecation.rb#75
  def collect_deprecations(deprecator = T.unsafe(nil)); end
end

module ActiveSupport::Testing::FileFixtures
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods

  # source://activesupport/7.0.4/lib/active_support/testing/file_fixtures.rb#26
  def file_fixture(fixture_name); end

  module GeneratedClassMethods
    def file_fixture_path; end
    def file_fixture_path=(value); end
    def file_fixture_path?; end
  end

  module GeneratedInstanceMethods
    def file_fixture_path; end
    def file_fixture_path?; end
  end
end

module ActiveSupport::Testing::SetupAndTeardown
  # source://activesupport/7.0.4/lib/active_support/testing/setup_and_teardown.rb#44
  def after_teardown; end

  # source://activesupport/7.0.4/lib/active_support/testing/setup_and_teardown.rb#39
  def before_setup; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/testing/setup_and_teardown.rb#21
    def prepended(klass); end
  end
end

module ActiveSupport::Testing::SetupAndTeardown::ClassMethods
  # source://activesupport/7.0.4/lib/active_support/testing/setup_and_teardown.rb#29
  def setup(*args, &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/setup_and_teardown.rb#34
  def teardown(*args, &block); end
end

module ActiveSupport::Testing::TaggedLogging
  # source://activesupport/7.0.4/lib/active_support/testing/tagged_logging.rb#10
  def before_setup; end

  # source://activesupport/7.0.4/lib/active_support/testing/tagged_logging.rb#8
  def tagged_logger=(_arg0); end

  private

  # source://activesupport/7.0.4/lib/active_support/testing/tagged_logging.rb#22
  def tagged_logger; end
end

module ActiveSupport::Testing::TimeHelpers
  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#70
  def after_teardown; end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#234
  def freeze_time(&block); end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#93
  def travel(duration, &block); end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#208
  def travel_back; end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#128
  def travel_to(date_or_time); end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#208
  def unfreeze_time; end

  private

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#243
  def in_block; end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#243
  def in_block=(_arg0); end

  # source://activesupport/7.0.4/lib/active_support/testing/time_helpers.rb#239
  def simple_stubs; end
end

class Erubi::Engine
  # source://erubi/1.11.0/lib/erubi.rb#86
  def initialize(input, properties = T.unsafe(nil)); end

  # source://erubi/1.11.0/lib/erubi.rb#57
  def bufvar; end

  # source://erubi/1.11.0/lib/erubi.rb#54
  def filename; end

  # source://erubi/1.11.0/lib/erubi.rb#51
  def src; end

  private

  # source://erubi/1.11.0/lib/erubi.rb#218
  def add_code(code); end

  # source://erubi/1.11.0/lib/erubi.rb#227
  def add_expression(indicator, code); end

  # source://erubi/1.11.0/lib/erubi.rb#236
  def add_expression_result(code); end

  # source://erubi/1.11.0/lib/erubi.rb#241
  def add_expression_result_escaped(code); end

  # source://erubi/1.11.0/lib/erubi.rb#247
  def add_postamble(postamble); end

  # source://erubi/1.11.0/lib/erubi.rb#205
  def add_text(text); end

  # source://erubi/1.11.0/lib/erubi.rb#253
  def handle(indicator, code, tailch, rspace, lspace); end

  # source://erubi/1.11.0/lib/erubi.rb#281
  def terminate_expression; end

  # source://erubi/1.11.0/lib/erubi.rb#263
  def with_buffer; end
end

# source://erubi/1.11.0/lib/erubi.rb#48
Erubi::Engine::DEFAULT_REGEXP = T.let(T.unsafe(nil), Regexp)

class I18n::Config
  # source://i18n/1.12.0/lib/i18n/config.rb#43
  def available_locales; end

  # source://i18n/1.12.0/lib/i18n/config.rb#57
  def available_locales=(locales); end

  # source://i18n/1.12.0/lib/i18n/config.rb#64
  def available_locales_initialized?; end

  # source://i18n/1.12.0/lib/i18n/config.rb#50
  def available_locales_set; end

  # source://i18n/1.12.0/lib/i18n/config.rb#20
  def backend; end

  # source://i18n/1.12.0/lib/i18n/config.rb#25
  def backend=(backend); end

  # source://i18n/1.12.0/lib/i18n/config.rb#70
  def clear_available_locales_set; end

  # source://i18n/1.12.0/lib/i18n/config.rb#30
  def default_locale; end

  # source://i18n/1.12.0/lib/i18n/config.rb#35
  def default_locale=(locale); end

  # source://i18n/1.12.0/lib/i18n/config.rb#75
  def default_separator; end

  # source://i18n/1.12.0/lib/i18n/config.rb#80
  def default_separator=(separator); end

  # source://i18n/1.12.0/lib/i18n/config.rb#141
  def enforce_available_locales; end

  # source://i18n/1.12.0/lib/i18n/config.rb#145
  def enforce_available_locales=(enforce_available_locales); end

  # source://i18n/1.12.0/lib/i18n/config.rb#86
  def exception_handler; end

  # source://i18n/1.12.0/lib/i18n/config.rb#91
  def exception_handler=(exception_handler); end

  # source://i18n/1.12.0/lib/i18n/config.rb#151
  def interpolation_patterns; end

  # source://i18n/1.12.0/lib/i18n/config.rb#161
  def interpolation_patterns=(interpolation_patterns); end

  # source://i18n/1.12.0/lib/i18n/config.rb#126
  def load_path; end

  # source://i18n/1.12.0/lib/i18n/config.rb#132
  def load_path=(load_path); end

  # source://i18n/1.12.0/lib/i18n/config.rb#9
  def locale; end

  # source://i18n/1.12.0/lib/i18n/config.rb#14
  def locale=(locale); end

  # source://i18n/1.12.0/lib/i18n/config.rb#97
  def missing_interpolation_argument_handler; end

  # source://i18n/1.12.0/lib/i18n/config.rb#114
  def missing_interpolation_argument_handler=(exception_handler); end
end

class Loofah::Scrubber
  # source://loofah/2.19.0/lib/loofah/scrubber.rb#65
  def initialize(options = T.unsafe(nil), &block); end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#94
  def append_attribute(node, attribute, value); end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#49
  def block; end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#44
  def direction; end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#86
  def scrub(node); end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#78
  def traverse(node); end

  private

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#103
  def html5lib_sanitize(node); end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#125
  def traverse_conditionally_bottom_up(node); end

  # source://loofah/2.19.0/lib/loofah/scrubber.rb#116
  def traverse_conditionally_top_down(node); end
end

# source://loofah/2.19.0/lib/loofah/scrubber.rb#37
Loofah::Scrubber::CONTINUE = T.let(T.unsafe(nil), Object)

# source://loofah/2.19.0/lib/loofah/scrubber.rb#40
Loofah::Scrubber::STOP = T.let(T.unsafe(nil), Object)

module Minitest::Assertions
  # source://minitest/5.16.3/lib/minitest/assertions.rb#188
  def _synchronize; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#178
  def assert(test, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#195
  def assert_empty(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#216
  def assert_equal(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#240
  def assert_in_delta(exp, act, delta = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#252
  def assert_in_epsilon(exp, act, epsilon = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#259
  def assert_includes(collection, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#270
  def assert_instance_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#281
  def assert_kind_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#291
  def assert_match(matcher, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#303
  def assert_nil(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#313
  def assert_operator(o1, op, o2 = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#331
  def assert_output(stdout = T.unsafe(nil), stderr = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#355
  def assert_path_exists(path, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#369
  def assert_predicate(o1, op, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#396
  def assert_raises(*exp); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#427
  def assert_respond_to(obj, meth, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#437
  def assert_same(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#450
  def assert_send(send_ary, m = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#466
  def assert_silent; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#475
  def assert_throws(sym, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#516
  def capture_io; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#549
  def capture_subprocess_io; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#59
  def diff(exp, act); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#581
  def exception_details(e, msg); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#597
  def fail_after(y, m, d, msg); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#604
  def flunk(msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#612
  def message(msg = T.unsafe(nil), ending = T.unsafe(nil), &default); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#129
  def mu_pp(obj); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#152
  def mu_pp_for_diff(obj); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#623
  def pass(_msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#630
  def refute(test, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#638
  def refute_empty(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#649
  def refute_equal(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#661
  def refute_in_delta(exp, act, delta = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#673
  def refute_in_epsilon(a, b, epsilon = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#680
  def refute_includes(collection, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#691
  def refute_instance_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#701
  def refute_kind_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#709
  def refute_match(matcher, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#719
  def refute_nil(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#730
  def refute_operator(o1, op, o2 = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#739
  def refute_path_exists(path, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#753
  def refute_predicate(o1, op, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#761
  def refute_respond_to(obj, meth, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#770
  def refute_same(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#783
  def skip(msg = T.unsafe(nil), bt = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#795
  def skip_until(y, m, d, msg); end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#804
  def skipped?; end

  # source://minitest/5.16.3/lib/minitest/assertions.rb#104
  def things_to_diff(exp, act); end

  class << self
    # source://minitest/5.16.3/lib/minitest/assertions.rb#29
    def diff; end

    # source://minitest/5.16.3/lib/minitest/assertions.rb#47
    def diff=(o); end
  end
end

# source://minitest/5.16.3/lib/minitest/assertions.rb#201
Minitest::Assertions::E = T.let(T.unsafe(nil), String)

# source://minitest/5.16.3/lib/minitest/assertions.rb#19
Minitest::Assertions::UNDEFINED = T.let(T.unsafe(nil), Object)

module Minitest::Guard
  # source://minitest/5.16.3/lib/minitest.rb#984
  def jruby?(platform = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest.rb#991
  def maglev?(platform = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest.rb#1001
  def mri?(platform = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest.rb#1008
  def osx?(platform = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest.rb#1015
  def rubinius?(platform = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest.rb#1025
  def windows?(platform = T.unsafe(nil)); end
end

module Minitest::Reportable
  # source://minitest/5.16.3/lib/minitest.rb#495
  def class_name; end

  # source://minitest/5.16.3/lib/minitest.rb#516
  def error?; end

  # source://minitest/5.16.3/lib/minitest.rb#490
  def location; end

  # source://minitest/5.16.3/lib/minitest.rb#482
  def passed?; end

  # source://minitest/5.16.3/lib/minitest.rb#502
  def result_code; end

  # source://minitest/5.16.3/lib/minitest.rb#509
  def skipped?; end
end

class Minitest::Runnable
  # source://minitest/5.16.3/lib/minitest.rb#431
  def initialize(name); end

  # source://minitest/5.16.3/lib/minitest.rb#281
  def assertions; end

  # source://minitest/5.16.3/lib/minitest.rb#281
  def assertions=(_arg0); end

  # source://minitest/5.16.3/lib/minitest.rb#427
  def failure; end

  # source://minitest/5.16.3/lib/minitest.rb#286
  def failures; end

  # source://minitest/5.16.3/lib/minitest.rb#286
  def failures=(_arg0); end

  # source://minitest/5.16.3/lib/minitest.rb#413
  def marshal_dump; end

  # source://minitest/5.16.3/lib/minitest.rb#423
  def marshal_load(ary); end

  # source://minitest/5.16.3/lib/minitest.rb#304
  def name; end

  # source://minitest/5.16.3/lib/minitest.rb#311
  def name=(o); end

  # source://minitest/5.16.3/lib/minitest.rb#450
  def passed?; end

  # source://minitest/5.16.3/lib/minitest.rb#459
  def result_code; end

  # source://minitest/5.16.3/lib/minitest.rb#440
  def run; end

  # source://minitest/5.16.3/lib/minitest.rb#466
  def skipped?; end

  # source://minitest/5.16.3/lib/minitest.rb#291
  def time; end

  # source://minitest/5.16.3/lib/minitest.rb#291
  def time=(_arg0); end

  # source://minitest/5.16.3/lib/minitest.rb#293
  def time_it; end

  class << self
    # source://minitest/5.16.3/lib/minitest.rb#1077
    def inherited(klass); end

    # source://minitest/5.16.3/lib/minitest.rb#318
    def methods_matching(re); end

    # source://minitest/5.16.3/lib/minitest.rb#383
    def on_signal(name, action); end

    # source://minitest/5.16.3/lib/minitest.rb#322
    def reset; end

    # source://minitest/5.16.3/lib/minitest.rb#333
    def run(reporter, options = T.unsafe(nil)); end

    # source://minitest/5.16.3/lib/minitest.rb#363
    def run_one_method(klass, method_name, reporter); end

    # source://minitest/5.16.3/lib/minitest.rb#400
    def runnable_methods; end

    # source://minitest/5.16.3/lib/minitest.rb#407
    def runnables; end

    # source://minitest/5.16.3/lib/minitest.rb#368
    def with_info_handler(reporter, &block); end
  end
end

# source://minitest/5.16.3/lib/minitest.rb#381
Minitest::Runnable::SIGNALS = T.let(T.unsafe(nil), Hash)

class Minitest::Test < ::Minitest::Runnable
  include ::Minitest::Assertions
  include ::Minitest::Reportable
  include ::Minitest::Test::LifecycleHooks
  include ::Minitest::Guard
  extend ::Minitest::Guard

  # source://minitest/5.16.3/lib/minitest/test.rb#194
  def capture_exceptions; end

  # source://minitest/5.16.3/lib/minitest/test.rb#15
  def class_name; end

  # source://minitest/5.16.3/lib/minitest/test.rb#211
  def neuter_exception(e); end

  # source://minitest/5.16.3/lib/minitest/test.rb#222
  def new_exception(klass, msg, bt, kill = T.unsafe(nil)); end

  # source://minitest/5.16.3/lib/minitest/test.rb#92
  def run; end

  # source://minitest/5.16.3/lib/minitest/test.rb#204
  def sanitize_exception(e); end

  # source://minitest/5.16.3/lib/minitest/test.rb#236
  def with_info_handler(&block); end

  class << self
    # source://minitest/5.16.3/lib/minitest/test.rb#31
    def i_suck_and_my_tests_are_order_dependent!; end

    # source://minitest/5.16.3/lib/minitest/test.rb#22
    def io_lock; end

    # source://minitest/5.16.3/lib/minitest/test.rb#22
    def io_lock=(_arg0); end

    # source://minitest/5.16.3/lib/minitest/test.rb#44
    def make_my_diffs_pretty!; end

    # source://minitest/5.16.3/lib/minitest/test.rb#55
    def parallelize_me!; end

    # source://minitest/5.16.3/lib/minitest/test.rb#65
    def runnable_methods; end

    # source://minitest/5.16.3/lib/minitest/test.rb#83
    def test_order; end
  end
end

module Minitest::Test::LifecycleHooks
  # source://minitest/5.16.3/lib/minitest/test.rb#167
  def after_setup; end

  # source://minitest/5.16.3/lib/minitest/test.rb#191
  def after_teardown; end

  # source://minitest/5.16.3/lib/minitest/test.rb#152
  def before_setup; end

  # source://minitest/5.16.3/lib/minitest/test.rb#176
  def before_teardown; end

  # source://minitest/5.16.3/lib/minitest/test.rb#158
  def setup; end

  # source://minitest/5.16.3/lib/minitest/test.rb#182
  def teardown; end
end

# source://minitest/5.16.3/lib/minitest/test.rb#19
Minitest::Test::PASSTHROUGH_EXCEPTIONS = T.let(T.unsafe(nil), Array)

# source://minitest/5.16.3/lib/minitest/test.rb#87
Minitest::Test::TEARDOWN_METHODS = T.let(T.unsafe(nil), Array)

class Rack::Session::Abstract::SessionHash
  include ::Enumerable

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#62
  def initialize(store, req); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#82
  def [](key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#108
  def []=(key, value); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#114
  def clear; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#140
  def delete(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#119
  def destroy; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#87
  def dig(key, *keys); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#77
  def each(&block); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#163
  def empty?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#153
  def exists?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#92
  def fetch(key, default = T.unsafe(nil), &block); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def has_key?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#68
  def id; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#46
  def id=(_arg0); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def include?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#145
  def inspect; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#101
  def key?(key); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#168
  def keys; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#159
  def loaded?; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#129
  def merge!(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#73
  def options; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#135
  def replace(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#108
  def store(key, value); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#124
  def to_hash; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#129
  def update(hash); end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#173
  def values; end

  private

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#188
  def load!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#180
  def load_for_read!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#184
  def load_for_write!; end

  # source://rack/2.2.4/lib/rack/session/abstract/id.rb#194
  def stringify_keys(other); end

  class << self
    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#50
    def find(req); end

    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#54
    def set(req, session); end

    # source://rack/2.2.4/lib/rack/session/abstract/id.rb#58
    def set_options(req, options); end
  end
end

# source://rack/2.2.4/lib/rack/session/abstract/id.rb#48
Rack::Session::Abstract::SessionHash::Unspecified = T.let(T.unsafe(nil), Object)

module Rails
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Benchmarkable

  class << self
    # source://railties/7.0.4/lib/rails.rb#38
    def app_class; end

    # source://railties/7.0.4/lib/rails.rb#38
    def app_class=(_arg0); end

    # source://railties/7.0.4/lib/rails.rb#39
    def application; end

    # source://railties/7.0.4/lib/rails.rb#37
    def application=(_arg0); end

    # source://railties/7.0.4/lib/rails.rb#123
    def autoloaders; end

    # source://railties/7.0.4/lib/rails.rb#50
    def backtrace_cleaner; end

    # source://railties/7.0.4/lib/rails.rb#38
    def cache; end

    # source://railties/7.0.4/lib/rails.rb#38
    def cache=(_arg0); end

    # source://railties/7.0.4/lib/rails.rb#46
    def configuration; end

    # source://railties/7.0.4/lib/rails.rb#72
    def env; end

    # source://railties/7.0.4/lib/rails.rb#79
    def env=(environment); end

    # source://railties/7.0.4/lib/rails.rb#90
    def error; end

    # source://railties/7.0.4/lib/rails/gem_version.rb#5
    def gem_version; end

    # source://railties/7.0.4/lib/rails.rb#103
    def groups(*groups); end

    # source://railties/7.0.4/lib/rails.rb#43
    def initialize!(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.0.4/lib/rails.rb#43
    def initialized?(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.0.4/lib/rails.rb#38
    def logger; end

    # source://railties/7.0.4/lib/rails.rb#38
    def logger=(_arg0); end

    # source://railties/7.0.4/lib/rails.rb#119
    def public_path; end

    # source://railties/7.0.4/lib/rails.rb#63
    def root; end

    # source://railties/7.0.4/lib/rails/version.rb#7
    def version; end
  end
end

class Rails::Application < ::Rails::Engine
  # source://railties/7.0.4/lib/rails/application.rb#106
  def initialize(initial_variable_values = T.unsafe(nil), &block); end

  # source://railties/7.0.4/lib/rails/application.rb#97
  def assets; end

  # source://railties/7.0.4/lib/rails/application.rb#97
  def assets=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#99
  def autoloaders; end

  # source://railties/7.0.4/lib/rails/engine.rb#511
  def build_middleware_stack; end

  # source://railties/7.0.4/lib/rails/application.rb#383
  def config; end

  # source://railties/7.0.4/lib/rails/application.rb#387
  def config=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#221
  def config_for(name, env: T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/application.rb#303
  def console(&blk); end

  # source://railties/7.0.4/lib/rails/application.rb#432
  def credentials; end

  # source://railties/7.0.4/lib/rails/application.rb#403
  def credentials=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#101
  def default_url_options(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/application.rb#101
  def default_url_options=(arg); end

  # source://railties/7.0.4/lib/rails/application.rb#497
  def eager_load!; end

  # source://railties/7.0.4/lib/rails/application.rb#463
  def encrypted(path, key_path: T.unsafe(nil), env_key: T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/application.rb#250
  def env_config; end

  # source://railties/7.0.4/lib/rails/application.rb#99
  def executor; end

  # source://railties/7.0.4/lib/rails/application.rb#309
  def generators(&blk); end

  # source://railties/7.0.4/lib/rails/application.rb#476
  def helpers_paths; end

  # source://importmap-rails/1.1.5/lib/importmap/engine.rb#4
  def importmap; end

  # source://importmap-rails/1.1.5/lib/importmap/engine.rb#4
  def importmap=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#370
  def initialize!(group = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/application.rb#129
  def initialized?; end

  # source://railties/7.0.4/lib/rails/application.rb#291
  def initializer(name, opts = T.unsafe(nil), &block); end

  # source://railties/7.0.4/lib/rails/application.rb#377
  def initializers; end

  # source://railties/7.0.4/lib/rails/application.rb#320
  def isolate_namespace(mod); end

  # source://railties/7.0.4/lib/rails/application.rb#153
  def key_generator; end

  # source://railties/7.0.4/lib/rails/application.rb#179
  def message_verifier(verifier_name); end

  # source://railties/7.0.4/lib/rails/application.rb#492
  def migration_railties; end

  # source://railties/7.0.4/lib/rails/application.rb#284
  def rake_tasks(&block); end

  # source://railties/7.0.4/lib/rails/application.rb#148
  def reload_routes!; end

  # source://railties/7.0.4/lib/rails/application.rb#99
  def reloader; end

  # source://railties/7.0.4/lib/rails/application.rb#99
  def reloaders; end

  # source://railties/7.0.4/lib/rails/application.rb#346
  def require_environment!; end

  # source://railties/7.0.4/lib/rails/application.rb#351
  def routes_reloader; end

  # source://railties/7.0.4/lib/rails/application.rb#133
  def run_load_hooks!; end

  # source://railties/7.0.4/lib/rails/application.rb#297
  def runner(&blk); end

  # source://railties/7.0.4/lib/rails/application.rb#97
  def sandbox; end

  # source://railties/7.0.4/lib/rails/application.rb#97
  def sandbox=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#97
  def sandbox?; end

  # source://railties/7.0.4/lib/rails/application.rb#415
  def secret_key_base; end

  # source://railties/7.0.4/lib/rails/application.rb#389
  def secrets; end

  # source://railties/7.0.4/lib/rails/application.rb#403
  def secrets=(_arg0); end

  # source://railties/7.0.4/lib/rails/application.rb#315
  def server(&blk); end

  # source://railties/7.0.4/lib/rails/application.rb#472
  def to_app; end

  # source://railties/7.0.4/lib/rails/application.rb#358
  def watchable_args; end

  protected

  # source://railties/7.0.4/lib/rails/application.rb#570
  def default_middleware_stack; end

  # source://railties/7.0.4/lib/rails/application.rb#536
  def ordered_railties; end

  # source://railties/7.0.4/lib/rails/application.rb#558
  def railties_initializers(current); end

  # source://railties/7.0.4/lib/rails/application.rb#525
  def run_console_blocks(app); end

  # source://railties/7.0.4/lib/rails/application.rb#515
  def run_generators_blocks(app); end

  # source://railties/7.0.4/lib/rails/application.rb#520
  def run_runner_blocks(app); end

  # source://railties/7.0.4/lib/rails/application.rb#530
  def run_server_blocks(app); end

  # source://railties/7.0.4/lib/rails/application.rb#504
  def run_tasks_blocks(app); end

  # source://railties/7.0.4/lib/rails/application.rb#575
  def validate_secret_key_base(secret_key_base); end

  private

  # source://railties/7.0.4/lib/rails/application.rb#609
  def build_middleware; end

  # source://railties/7.0.4/lib/rails/application.rb#602
  def build_request(env); end

  # source://railties/7.0.4/lib/rails/application.rb#613
  def coerce_same_site_protection(protection); end

  # source://railties/7.0.4/lib/rails/application.rb#586
  def generate_development_secret; end

  class << self
    # source://railties/7.0.4/lib/rails/application.rb#339
    def add_lib_to_load_path!(root); end

    # source://railties/7.0.4/lib/rails/application.rb#81
    def create(initial_variable_values = T.unsafe(nil), &block); end

    # source://railties/7.0.4/lib/rails/application.rb#85
    def find_root(from); end

    # source://railties/7.0.4/lib/rails/application.rb#70
    def inherited(base); end

    # source://railties/7.0.4/lib/rails/application.rb#77
    def instance; end
  end
end

module Rails::Application::Bootstrap
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

class Rails::Application::Configuration < ::Rails::Engine::Configuration
  # source://railties/7.0.4/lib/rails/application/configuration.rb#28
  def initialize(*_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def add_autoload_paths_to_load_path; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def add_autoload_paths_to_load_path=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def allow_concurrency; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def allow_concurrency=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#415
  def annotations; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#26
  def api_only; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#276
  def api_only=(value); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def asset_host; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def asset_host=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def autoflush_log; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def autoflush_log=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def beginning_of_week; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def beginning_of_week=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def cache_classes; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def cache_classes=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def cache_store; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def cache_store=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#361
  def colorize_logging; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#365
  def colorize_logging=(val); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def consider_all_requests_local; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def consider_all_requests_local=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def console; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def console=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#420
  def content_security_policy(&block); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_nonce_directives; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_nonce_directives=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_nonce_generator; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_nonce_generator=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_report_only; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def content_security_policy_report_only=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def credentials; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def credentials=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#330
  def database_configuration; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#283
  def debug_exception_response_format; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#287
  def debug_exception_response_format=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#437
  def default_log_file; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def disable_sandbox; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def disable_sandbox=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def eager_load; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def eager_load=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def enable_dependency_loading; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def enable_dependency_loading=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#26
  def encoding; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#268
  def encoding=(value); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def exceptions_app; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def exceptions_app=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def file_watcher; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def file_watcher=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def filter_parameters; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def filter_parameters=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def filter_redirect; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def filter_redirect=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def force_ssl; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def force_ssl=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def helpers_paths; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def helpers_paths=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def host_authorization; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def host_authorization=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def hosts; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def hosts=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#312
  def load_database_yaml; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#88
  def load_defaults(target_version); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#26
  def loaded_config_version; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_formatter; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_formatter=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_level; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_level=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_tags; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def log_tags=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def logger; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def logger=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#289
  def paths; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#429
  def permissions_policy(&block); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def public_file_server; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def public_file_server=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def railties_order; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def railties_order=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def rake_eager_load; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def rake_eager_load=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def read_encrypted_secrets; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def read_encrypted_secrets=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def relative_url_root; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def relative_url_root=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def reload_classes_only_on_change; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def reload_classes_only_on_change=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def require_master_key; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def require_master_key=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def secret_key_base; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def secret_key_base=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def server_timing; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def server_timing=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def session_options; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def session_options=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#384
  def session_store(new_session_store = T.unsafe(nil), **options); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#411
  def session_store?; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def ssl_options; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def ssl_options=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def time_zone; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def time_zone=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def x; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#13
  def x=(_arg0); end

  private

  # source://railties/7.0.4/lib/rails/application/configuration.rb#486
  def credentials_available_for_current_env?; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#470
  def default_credentials_content_path; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#478
  def default_credentials_key_path; end
end

class Rails::Application::Configuration::Custom
  # source://railties/7.0.4/lib/rails/application/configuration.rb#450
  def initialize; end

  # source://railties/7.0.4/lib/rails/application/configuration.rb#454
  def method_missing(method, *args); end

  private

  # source://railties/7.0.4/lib/rails/application/configuration.rb#464
  def respond_to_missing?(symbol, *_arg1); end
end

class Rails::Application::DefaultMiddlewareStack
  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#8
  def initialize(app, config, paths); end

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#6
  def app; end

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#14
  def build_stack; end

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#6
  def config; end

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#6
  def paths; end

  private

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#103
  def load_rack_cache; end

  # source://railties/7.0.4/lib/rails/application/default_middleware_stack.rb#125
  def show_exceptions_app; end
end

module Rails::Application::Finisher
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

module Rails::Application::Finisher::InterlockHook
  class << self
    # source://railties/7.0.4/lib/rails/application/finisher.rb#109
    def complete(_state); end

    # source://railties/7.0.4/lib/rails/application/finisher.rb#105
    def run; end
  end
end

class Rails::Application::Finisher::MonitorHook
  # source://railties/7.0.4/lib/rails/application/finisher.rb#91
  def initialize(monitor = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/application/finisher.rb#99
  def complete(_state); end

  # source://railties/7.0.4/lib/rails/application/finisher.rb#95
  def run; end
end

# source://railties/7.0.4/lib/rails/application.rb#103
Rails::Application::INITIAL_VARIABLES = T.let(T.unsafe(nil), Array)

class Rails::Application::RoutesReloader
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#15
  def initialize; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#11
  def eager_load; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#11
  def eager_load=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#13
  def execute(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#13
  def execute_if_updated(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#10
  def external_routes; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#10
  def paths; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#22
  def reload!; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#10
  def route_sets; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#12
  def run_after_load_paths=(_arg0); end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#13
  def updated?(*_arg0, **_arg1, &_arg2); end

  private

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#42
  def clear!; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#58
  def finalize!; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#49
  def load_paths; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#62
  def revert; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#54
  def run_after_load_paths; end

  # source://railties/7.0.4/lib/rails/application/routes_reloader.rb#32
  def updater; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks?; end
  end
end

class Rails::ApplicationController < ::ActionController::Base
  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties/7.0.4/lib/rails/application_controller.rb#25
  def disable_content_security_policy_nonce!; end

  # source://railties/7.0.4/lib/rails/application_controller.rb#21
  def local_request?; end

  # source://railties/7.0.4/lib/rails/application_controller.rb#15
  def require_local!; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

class Rails::Autoloaders
  include ::Enumerable

  # source://railties/7.0.4/lib/rails/autoloaders.rb#11
  def initialize; end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#31
  def each; end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#40
  def log!; end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#36
  def logger=(logger); end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#9
  def main; end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#9
  def once; end

  # source://railties/7.0.4/lib/rails/autoloaders.rb#44
  def zeitwerk_enabled?; end
end

module Rails::Autoloaders::Inflector
  class << self
    # source://railties/7.0.4/lib/rails/autoloaders/inflector.rb#12
    def camelize(basename, _abspath); end

    # source://railties/7.0.4/lib/rails/autoloaders/inflector.rb#16
    def inflect(overrides); end
  end
end

module Rails::Configuration; end

class Rails::Configuration::Generators
  # source://railties/7.0.4/lib/rails/configuration.rb#108
  def initialize; end

  # source://railties/7.0.4/lib/rails/configuration.rb#130
  def after_generate(&block); end

  # source://railties/7.0.4/lib/rails/configuration.rb#106
  def after_generate_callbacks; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def aliases; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def aliases=(_arg0); end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def api_only; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def api_only=(_arg0); end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def colorize_logging; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def colorize_logging=(_arg0); end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def fallbacks; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def fallbacks=(_arg0); end

  # source://railties/7.0.4/lib/rails/configuration.rb#106
  def hidden_namespaces; end

  # source://railties/7.0.4/lib/rails/configuration.rb#126
  def hide_namespace(namespace); end

  # source://railties/7.0.4/lib/rails/configuration.rb#134
  def method_missing(method, *args); end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def options; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def options=(_arg0); end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def templates; end

  # source://railties/7.0.4/lib/rails/configuration.rb#105
  def templates=(_arg0); end

  private

  # source://railties/7.0.4/lib/rails/configuration.rb#119
  def initialize_copy(source); end
end

class Rails::Configuration::MiddlewareStackProxy
  # source://railties/7.0.4/lib/rails/configuration.rb#47
  def initialize(operations = T.unsafe(nil), delete_operations = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/configuration.rb#96
  def +(other); end

  # source://railties/7.0.4/lib/rails/configuration.rb#70
  def delete(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#52
  def insert(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#58
  def insert_after(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#52
  def insert_before(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#88
  def merge_into(other); end

  # source://railties/7.0.4/lib/rails/configuration.rb#74
  def move(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#80
  def move_after(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#74
  def move_before(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#62
  def swap(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#84
  def unshift(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/configuration.rb#66
  def use(*_arg0, **_arg1, &_arg2); end

  protected

  # source://railties/7.0.4/lib/rails/configuration.rb#101
  def delete_operations; end

  # source://railties/7.0.4/lib/rails/configuration.rb#101
  def operations; end
end

module Rails::Dom; end
module Rails::Dom::Testing; end

module Rails::Dom::Testing::Assertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  extend ::ActiveSupport::Concern
end

module Rails::Dom::Testing::Assertions::DomAssertions
  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#10
  def assert_dom_equal(expected, actual, message = T.unsafe(nil)); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#20
  def assert_dom_not_equal(expected, actual, message = T.unsafe(nil)); end

  protected

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#28
  def compare_doms(expected, actual); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#63
  def equal_attribute?(attr, other_attr); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#50
  def equal_attribute_nodes?(nodes, other_nodes); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#38
  def equal_children?(child, other_child); end

  private

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/dom_assertions.rb#69
  def fragment(text); end
end

module Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#161
  def assert_select(*args, &block); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#247
  def assert_select_email(&block); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#211
  def assert_select_encoded(element = T.unsafe(nil), &block); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#59
  def css_select(*args); end

  private

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#270
  def assert_size_match!(size, equals, css_selector, message = T.unsafe(nil)); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#264
  def document_root_element; end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#282
  def nest_selection(selection); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions.rb#291
  def nodeset(node); end
end

module Rails::Dom::Testing::Assertions::SelectorAssertions::CountDescribable
  extend ::ActiveSupport::Concern

  private

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions/count_describable.rb#12
  def count_description(min, max, count); end

  # source://rails-dom-testing/2.0.3/lib/rails/dom/testing/assertions/selector_assertions/count_describable.rb#24
  def pluralize_element(quantity); end
end

class Rails::Engine < ::Rails::Railtie
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods

  # source://railties/7.0.4/lib/rails/engine.rb#432
  def initialize; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
  def __callbacks?; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#940
  def _load_seed_callbacks; end

  # source://activesupport/7.0.4/lib/active_support/callbacks.rb#928
  def _run_load_seed_callbacks(&block); end

  # source://railties/7.0.4/lib/rails/engine.rb#511
  def app; end

  # source://railties/7.0.4/lib/rails/engine.rb#528
  def call(env); end

  # source://railties/7.0.4/lib/rails/engine.rb#547
  def config; end

  # source://railties/7.0.4/lib/rails/engine.rb#484
  def eager_load!; end

  # source://railties/7.0.4/lib/rails/engine.rb#523
  def endpoint; end

  # source://railties/7.0.4/lib/rails/engine.rb#430
  def engine_name(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/engine.rb#534
  def env_config; end

  # source://railties/7.0.4/lib/rails/engine.rb#494
  def helpers; end

  # source://railties/7.0.4/lib/rails/engine.rb#506
  def helpers_paths; end

  # source://railties/7.0.4/lib/rails/engine.rb#430
  def isolated?(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/engine.rb#446
  def load_console(app = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine.rb#470
  def load_generators(app = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine.rb#455
  def load_runner(app = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine.rb#555
  def load_seed; end

  # source://railties/7.0.4/lib/rails/engine.rb#479
  def load_server(app = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine.rb#462
  def load_tasks(app = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine.rb#429
  def middleware(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/engine.rb#429
  def paths(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/engine.rb#489
  def railties; end

  # source://railties/7.0.4/lib/rails/engine.rb#429
  def root(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/engine.rb#540
  def routes(&block); end

  # source://railties/7.0.4/lib/rails/engine.rb#654
  def routes?; end

  protected

  # source://railties/7.0.4/lib/rails/engine.rb#659
  def run_tasks_blocks(*_arg0); end

  private

  # source://railties/7.0.4/lib/rails/engine.rb#691
  def _all_autoload_once_paths; end

  # source://railties/7.0.4/lib/rails/engine.rb#695
  def _all_autoload_paths; end

  # source://railties/7.0.4/lib/rails/engine.rb#704
  def _all_load_paths(add_autoload_paths_to_load_path); end

  # source://railties/7.0.4/lib/rails/engine.rb#723
  def build_middleware; end

  # source://railties/7.0.4/lib/rails/engine.rb#715
  def build_request(env); end

  # source://railties/7.0.4/lib/rails/engine.rb#687
  def default_middleware_stack; end

  # source://railties/7.0.4/lib/rails/engine.rb#671
  def has_migrations?; end

  # source://railties/7.0.4/lib/rails/engine.rb#665
  def load_config_initializer(initializer); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks=(value); end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks?; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#932
    def _load_seed_callbacks; end

    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#936
    def _load_seed_callbacks=(value); end

    # source://railties/7.0.4/lib/rails/engine.rb#353
    def called_from; end

    # source://railties/7.0.4/lib/rails/engine.rb#353
    def called_from=(_arg0); end

    # source://railties/7.0.4/lib/rails/engine.rb#358
    def eager_load!(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.0.4/lib/rails/engine.rb#378
    def endpoint(endpoint = T.unsafe(nil)); end

    # source://railties/7.0.4/lib/rails/railtie.rb#176
    def engine_name(name = T.unsafe(nil)); end

    # source://railties/7.0.4/lib/rails/engine.rb#416
    def find(path); end

    # source://railties/7.0.4/lib/rails/engine.rb#374
    def find_root(from); end

    # source://railties/7.0.4/lib/rails/engine.rb#675
    def find_root_with_flag(flag, root_path, default = T.unsafe(nil)); end

    # source://railties/7.0.4/lib/rails/engine.rb#360
    def inherited(base); end

    # source://railties/7.0.4/lib/rails/engine.rb#384
    def isolate_namespace(mod); end

    # source://railties/7.0.4/lib/rails/engine.rb#353
    def isolated; end

    # source://railties/7.0.4/lib/rails/engine.rb#353
    def isolated=(_arg0); end

    # source://railties/7.0.4/lib/rails/engine.rb#353
    def isolated?; end
  end
end

class Rails::Engine::Configuration < ::Rails::Railtie::Configuration
  # source://railties/7.0.4/lib/rails/engine/configuration.rb#12
  def initialize(root = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#83
  def autoload_once_paths; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#10
  def autoload_once_paths=(_arg0); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#87
  def autoload_paths; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#10
  def autoload_paths=(_arg0); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#79
  def eager_load_paths; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#10
  def eager_load_paths=(_arg0); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#32
  def generators; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#9
  def javascript_path; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#9
  def javascript_path=(_arg0); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#9
  def middleware; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#9
  def middleware=(_arg0); end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#38
  def paths; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#8
  def root; end

  # source://railties/7.0.4/lib/rails/engine/configuration.rb#75
  def root=(value); end
end

class Rails::Engine::Railties
  include ::Enumerable

  # source://railties/7.0.4/lib/rails/engine/railties.rb#9
  def initialize; end

  # source://railties/7.0.4/lib/rails/engine/railties.rb#18
  def -(others); end

  # source://railties/7.0.4/lib/rails/engine/railties.rb#7
  def _all; end

  # source://railties/7.0.4/lib/rails/engine/railties.rb#14
  def each(*args, &block); end
end

module Rails::Html; end

# === Rails::Html::FullSanitizer
# Removes all tags but strips out scripts, forms and comments.
#
# full_sanitizer = Rails::Html::FullSanitizer.new
# full_sanitizer.sanitize("<b>Bold</b> no more!  <a href='more.html'>See more here</a>...")
# # => Bold no more!  See more here...
class Rails::Html::FullSanitizer < ::Rails::Html::Sanitizer
  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#29
  def sanitize(html, options = T.unsafe(nil)); end
end

# === Rails::Html::LinkSanitizer
# Removes +a+ tags and +href+ attributes leaving only the link text.
#
#  link_sanitizer = Rails::Html::LinkSanitizer.new
#  link_sanitizer.sanitize('<a href="example.com">Only the link text will be kept.</a>')
#
#  => 'Only the link text will be kept.'
class Rails::Html::LinkSanitizer < ::Rails::Html::Sanitizer
  # @return [LinkSanitizer] a new instance of LinkSanitizer
  #
  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#50
  def initialize; end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#56
  def sanitize(html, options = T.unsafe(nil)); end
end

# === Rails::Html::PermitScrubber
#
# +Rails::Html::PermitScrubber+ allows you to permit only your own tags and/or attributes.
#
# +Rails::Html::PermitScrubber+ can be subclassed to determine:
# - When a node should be skipped via +skip_node?+.
# - When a node is allowed via +allowed_node?+.
# - When an attribute should be scrubbed via +scrub_attribute?+.
#
# Subclasses don't need to worry if tags or attributes are set or not.
# If tags or attributes are not set, Loofah's behavior will be used.
# If you override +allowed_node?+ and no tags are set, it will not be called.
# Instead Loofahs behavior will be used.
# Likewise for +scrub_attribute?+ and attributes respectively.
#
# Text and CDATA nodes are skipped by default.
# Unallowed elements will be stripped, i.e. element is removed but its subtree kept.
# Supplied tags and attributes should be Enumerables.
#
# +tags=+
# If set, elements excluded will be stripped.
# If not, elements are stripped based on Loofahs +HTML5::Scrub.allowed_element?+.
#
# +attributes=+
# If set, attributes excluded will be removed.
# If not, attributes are removed based on Loofahs +HTML5::Scrub.scrub_attributes+.
#
#  class CommentScrubber < Html::PermitScrubber
#    def initialize
#      super
#      self.tags = %w(form script comment blockquote)
#    end
#
#    def skip_node?(node)
#      node.text?
#    end
#
#    def scrub_attribute?(name)
#      name == "style"
#    end
#  end
#
# See the documentation for +Nokogiri::XML::Node+ to understand what's possible
# with nodes: https://nokogiri.org/rdoc/Nokogiri/XML/Node.html
class Rails::Html::PermitScrubber < ::Loofah::Scrubber
  # @return [PermitScrubber] a new instance of PermitScrubber
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#50
  def initialize; end

  # Returns the value of attribute attributes.
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#48
  def attributes; end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#59
  def attributes=(attributes); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#63
  def scrub(node); end

  # Returns the value of attribute tags.
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#48
  def tags; end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#55
  def tags=(tags); end

  protected

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#80
  def allowed_node?(node); end

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#92
  def keep_node?(node); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#134
  def scrub_attribute(node, attr_node); end

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#88
  def scrub_attribute?(name); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#105
  def scrub_attributes(node); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#118
  def scrub_css_attribute(node); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#100
  def scrub_node(node); end

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#84
  def skip_node?(node); end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#127
  def validate!(var, name); end
end

# === Rails::Html::SafeListSanitizer
# Sanitizes html and css from an extensive safe list (see link further down).
#
# === Whitespace
# We can't make any guarantees about whitespace being kept or stripped.
# Loofah uses Nokogiri, which wraps either a C or Java parser for the
# respective Ruby implementation.
# Those two parsers determine how whitespace is ultimately handled.
#
# When the stripped markup will be rendered the users browser won't take
# whitespace into account anyway. It might be better to suggest your users
# wrap their whitespace sensitive content in pre tags or that you do
# so automatically.
#
# === Options
# Sanitizes both html and css via the safe lists found here:
# https://github.com/flavorjones/loofah/blob/master/lib/loofah/html5/safelist.rb
#
# SafeListSanitizer also accepts options to configure
# the safe list used when sanitizing html.
# There's a class level option:
# Rails::Html::SafeListSanitizer.allowed_tags = %w(table tr td)
# Rails::Html::SafeListSanitizer.allowed_attributes = %w(id class style)
#
# Tags and attributes can also be passed to +sanitize+.
# Passed options take precedence over the class level options.
#
# === Examples
# safe_list_sanitizer = Rails::Html::SafeListSanitizer.new
#
# Sanitize css doesn't take options
# safe_list_sanitizer.sanitize_css('background-color: #000;')
#
# Default: sanitize via a extensive safe list of allowed elements
# safe_list_sanitizer.sanitize(@article.body)
#
# Safe list via the supplied tags and attributes
# safe_list_sanitizer.sanitize(@article.body, tags: %w(table tr td),
# attributes: %w(id class style))
#
# Safe list via a custom scrubber
# safe_list_sanitizer.sanitize(@article.body, scrubber: ArticleScrubber.new)
class Rails::Html::SafeListSanitizer < ::Rails::Html::Sanitizer
  # @return [SafeListSanitizer] a new instance of SafeListSanitizer
  #
  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#113
  def initialize; end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#117
  def sanitize(html, options = T.unsafe(nil)); end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#138
  def sanitize_css(style_string); end

  private

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#165
  def allowed_attributes(options); end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#157
  def allowed_tags(options); end

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#144
  def loofah_using_html5?; end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#149
  def remove_safelist_tag_combinations(tags); end

  class << self
    # Returns the value of attribute allowed_attributes.
    #
    # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#106
    def allowed_attributes; end

    # Sets the attribute allowed_attributes
    #
    # @param value the value to set the attribute allowed_attributes to.
    #
    # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#106
    def allowed_attributes=(_arg0); end

    # Returns the value of attribute allowed_tags.
    #
    # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#105
    def allowed_tags; end

    # Sets the attribute allowed_tags
    #
    # @param value the value to set the attribute allowed_tags to.
    #
    # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#105
    def allowed_tags=(_arg0); end
  end
end

class Rails::Html::Sanitizer
  # @raise [NotImplementedError]
  #
  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#6
  def sanitize(html, options = T.unsafe(nil)); end

  private

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#17
  def properly_encode(fragment, options); end

  # source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#12
  def remove_xpaths(node, xpaths); end

  class << self
    # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#10
    def full_sanitizer; end

    # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#14
    def link_sanitizer; end

    # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#18
    def safe_list_sanitizer; end

    # source://rails-html-sanitizer//lib/rails-html-sanitizer.rb#22
    def white_list_sanitizer; end
  end
end

# source://rails-html-sanitizer//lib/rails/html/sanitizer/version.rb#4
Rails::Html::Sanitizer::VERSION = T.let(T.unsafe(nil), String)

# === Rails::Html::TargetScrubber
#
# Where +Rails::Html::PermitScrubber+ picks out tags and attributes to permit in
# sanitization, +Rails::Html::TargetScrubber+ targets them for removal.
#
# +tags=+
# If set, elements included will be stripped.
#
# +attributes=+
# If set, attributes included will be removed.
class Rails::Html::TargetScrubber < ::Rails::Html::PermitScrubber
  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#172
  def allowed_node?(node); end

  # @return [Boolean]
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#176
  def scrub_attribute?(name); end
end

# === Rails::Html::TextOnlyScrubber
#
# +Rails::Html::TextOnlyScrubber+ allows you to permit text nodes.
#
# Unallowed elements will be stripped, i.e. element is removed but its subtree kept.
class Rails::Html::TextOnlyScrubber < ::Loofah::Scrubber
  # @return [TextOnlyScrubber] a new instance of TextOnlyScrubber
  #
  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#187
  def initialize; end

  # source://rails-html-sanitizer//lib/rails/html/scrubbers.rb#191
  def scrub(node); end
end

# source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#170
Rails::Html::WhiteListSanitizer = Rails::Html::SafeListSanitizer

# source://rails-html-sanitizer//lib/rails/html/sanitizer.rb#3
Rails::Html::XPATHS_TO_REMOVE = T.let(T.unsafe(nil), Array)

module Rails::Info
  # source://railties/7.0.4/lib/rails/info.rb#10
  def properties; end

  # source://railties/7.0.4/lib/rails/info.rb#10
  def properties=(val); end

  class << self
    # source://railties/7.0.4/lib/rails/info.rb#31
    def inspect; end

    # source://railties/7.0.4/lib/rails/info.rb#10
    def properties; end

    # source://railties/7.0.4/lib/rails/info.rb#10
    def properties=(val); end

    # source://railties/7.0.4/lib/rails/info.rb#25
    def property(name, value = T.unsafe(nil)); end

    # source://railties/7.0.4/lib/rails/info.rb#43
    def to_html; end

    # source://railties/7.0.4/lib/rails/info.rb#31
    def to_s; end
  end
end

class Rails::InfoController < ::Rails::ApplicationController
  # source://railties/7.0.4/lib/rails/info_controller.rb#12
  def index; end

  # source://railties/7.0.4/lib/rails/info_controller.rb#16
  def properties; end

  # source://railties/7.0.4/lib/rails/info_controller.rb#21
  def routes; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties/7.0.4/lib/rails/info_controller.rb#8
  def _layout_from_proc; end

  # source://railties/7.0.4/lib/rails/info_controller.rb#36
  def match_route; end

  # source://railties/7.0.4/lib/rails/info_controller.rb#40
  def with_leading_slash(path); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Rails::Initializable
  mixes_in_class_methods ::Rails::Initializable::ClassMethods

  # source://railties/7.0.4/lib/rails/initializable.rb#66
  def initializers; end

  # source://railties/7.0.4/lib/rails/initializable.rb#58
  def run_initializers(group = T.unsafe(nil), *args); end

  class << self
    # source://railties/7.0.4/lib/rails/initializable.rb#7
    def included(base); end
  end
end

module Rails::Initializable::ClassMethods
  # source://railties/7.0.4/lib/rails/initializable.rb#88
  def initializer(name, opts = T.unsafe(nil), &blk); end

  # source://railties/7.0.4/lib/rails/initializable.rb#71
  def initializers; end

  # source://railties/7.0.4/lib/rails/initializable.rb#75
  def initializers_chain; end

  # source://railties/7.0.4/lib/rails/initializable.rb#84
  def initializers_for(binding); end
end

class Rails::Initializable::Collection < ::Array
  include ::TSort

  # source://railties/7.0.4/lib/rails/initializable.rb#53
  def +(other); end

  # source://railties/7.0.4/lib/rails/initializable.rb#49
  def tsort_each_child(initializer, &block); end

  def tsort_each_node; end
end

class Rails::Initializable::Initializer
  # source://railties/7.0.4/lib/rails/initializable.rb#14
  def initialize(name, context, options, &block); end

  # source://railties/7.0.4/lib/rails/initializable.rb#23
  def after; end

  # source://railties/7.0.4/lib/rails/initializable.rb#19
  def before; end

  # source://railties/7.0.4/lib/rails/initializable.rb#27
  def belongs_to?(group); end

  # source://railties/7.0.4/lib/rails/initializable.rb#35
  def bind(context); end

  # source://railties/7.0.4/lib/rails/initializable.rb#12
  def block; end

  # source://railties/7.0.4/lib/rails/initializable.rb#40
  def context_class; end

  # source://railties/7.0.4/lib/rails/initializable.rb#12
  def name; end

  # source://railties/7.0.4/lib/rails/initializable.rb#31
  def run(*args); end
end

class Rails::MailersController < ::Rails::ApplicationController
  # source://railties/7.0.4/lib/rails/mailers_controller.rb#16
  def index; end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#21
  def preview; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#80
  def find_part(format); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#68
  def find_preferred_part(*formats); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#56
  def find_preview; end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#92
  def locale_query(locale); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#88
  def part_query(mime_type); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#96
  def set_locale(&block); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#52
  def show_previews?; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Rails::MailersController::HelperMethods
  include ::ActionController::Base::HelperMethods

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#12
  def locale_query(*args, **_arg1, &block); end

  # source://railties/7.0.4/lib/rails/mailers_controller.rb#12
  def part_query(*args, **_arg1, &block); end
end

module Rails::Paths; end

class Rails::Paths::Path
  include ::Enumerable

  # source://railties/7.0.4/lib/rails/paths.rb#116
  def initialize(root, current, paths, options = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/paths.rb#168
  def <<(path); end

  # source://railties/7.0.4/lib/rails/paths.rb#129
  def absolute_current; end

  # source://railties/7.0.4/lib/rails/paths.rb#150
  def autoload!; end

  # source://railties/7.0.4/lib/rails/paths.rb#158
  def autoload?; end

  # source://railties/7.0.4/lib/rails/paths.rb#150
  def autoload_once!; end

  # source://railties/7.0.4/lib/rails/paths.rb#158
  def autoload_once?; end

  # source://railties/7.0.4/lib/rails/paths.rb#133
  def children; end

  # source://railties/7.0.4/lib/rails/paths.rb#173
  def concat(paths); end

  # source://railties/7.0.4/lib/rails/paths.rb#164
  def each(&block); end

  # source://railties/7.0.4/lib/rails/paths.rb#150
  def eager_load!; end

  # source://railties/7.0.4/lib/rails/paths.rb#158
  def eager_load?; end

  # source://railties/7.0.4/lib/rails/paths.rb#217
  def existent; end

  # source://railties/7.0.4/lib/rails/paths.rb#228
  def existent_directories; end

  # source://railties/7.0.4/lib/rails/paths.rb#198
  def expanded; end

  # source://railties/7.0.4/lib/rails/paths.rb#193
  def extensions; end

  # source://railties/7.0.4/lib/rails/paths.rb#140
  def first; end

  # source://railties/7.0.4/lib/rails/paths.rb#114
  def glob; end

  # source://railties/7.0.4/lib/rails/paths.rb#114
  def glob=(_arg0); end

  # source://railties/7.0.4/lib/rails/paths.rb#144
  def last; end

  # source://railties/7.0.4/lib/rails/paths.rb#150
  def load_path!; end

  # source://railties/7.0.4/lib/rails/paths.rb#158
  def load_path?; end

  # source://railties/7.0.4/lib/rails/paths.rb#185
  def paths; end

  # source://railties/7.0.4/lib/rails/paths.rb#168
  def push(path); end

  # source://railties/7.0.4/lib/rails/paths.rb#154
  def skip_autoload!; end

  # source://railties/7.0.4/lib/rails/paths.rb#154
  def skip_autoload_once!; end

  # source://railties/7.0.4/lib/rails/paths.rb#154
  def skip_eager_load!; end

  # source://railties/7.0.4/lib/rails/paths.rb#154
  def skip_load_path!; end

  # source://railties/7.0.4/lib/rails/paths.rb#198
  def to_a; end

  # source://railties/7.0.4/lib/rails/paths.rb#181
  def to_ary; end

  # source://railties/7.0.4/lib/rails/paths.rb#177
  def unshift(*paths); end

  private

  # source://railties/7.0.4/lib/rails/paths.rb#235
  def files_in(path); end
end

class Rails::Paths::Root
  # source://railties/7.0.4/lib/rails/paths.rb#51
  def initialize(path); end

  # source://railties/7.0.4/lib/rails/paths.rb#66
  def [](path); end

  # source://railties/7.0.4/lib/rails/paths.rb#56
  def []=(path, value); end

  # source://railties/7.0.4/lib/rails/paths.rb#61
  def add(path, options = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/paths.rb#82
  def all_paths; end

  # source://railties/7.0.4/lib/rails/paths.rb#86
  def autoload_once; end

  # source://railties/7.0.4/lib/rails/paths.rb#94
  def autoload_paths; end

  # source://railties/7.0.4/lib/rails/paths.rb#90
  def eager_load; end

  # source://railties/7.0.4/lib/rails/paths.rb#74
  def keys; end

  # source://railties/7.0.4/lib/rails/paths.rb#98
  def load_paths; end

  # source://railties/7.0.4/lib/rails/paths.rb#49
  def path; end

  # source://railties/7.0.4/lib/rails/paths.rb#49
  def path=(_arg0); end

  # source://railties/7.0.4/lib/rails/paths.rb#70
  def values; end

  # source://railties/7.0.4/lib/rails/paths.rb#78
  def values_at(*list); end

  private

  # source://railties/7.0.4/lib/rails/paths.rb#103
  def filter_by(&block); end
end

module Rails::Rack; end

class Rails::Rack::Logger < ::ActiveSupport::LogSubscriber
  # source://railties/7.0.4/lib/rails/rack/logger.rb#16
  def initialize(app, taggers = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/rack/logger.rb#21
  def call(env); end

  private

  # source://railties/7.0.4/lib/rails/rack/logger.rb#32
  def call_app(request, env); end

  # source://railties/7.0.4/lib/rails/rack/logger.rb#59
  def compute_tags(request); end

  # source://railties/7.0.4/lib/rails/rack/logger.rb#72
  def logger; end

  # source://railties/7.0.4/lib/rails/rack/logger.rb#51
  def started_request_message(request); end
end

class Rails::Railtie
  include ::Rails::Initializable
  extend ::ActiveSupport::DescendantsTracker
  extend ::Rails::Initializable::ClassMethods

  # source://railties/7.0.4/lib/rails/railtie.rb#246
  def initialize; end

  # source://railties/7.0.4/lib/rails/railtie.rb#263
  def config; end

  # source://railties/7.0.4/lib/rails/railtie.rb#256
  def configure(&block); end

  # source://railties/7.0.4/lib/rails/railtie.rb#252
  def inspect; end

  # source://railties/7.0.4/lib/rails/railtie.rb#244
  def railtie_name(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.0.4/lib/rails/railtie.rb#267
  def railtie_namespace; end

  protected

  # source://railties/7.0.4/lib/rails/railtie.rb#272
  def run_console_blocks(app); end

  # source://railties/7.0.4/lib/rails/railtie.rb#276
  def run_generators_blocks(app); end

  # source://railties/7.0.4/lib/rails/railtie.rb#280
  def run_runner_blocks(app); end

  # source://railties/7.0.4/lib/rails/railtie.rb#289
  def run_server_blocks(app); end

  # source://railties/7.0.4/lib/rails/railtie.rb#284
  def run_tasks_blocks(app); end

  private

  # source://railties/7.0.4/lib/rails/railtie.rb#295
  def each_registered_block(type, &block); end

  class << self
    # source://railties/7.0.4/lib/rails/railtie.rb#194
    def <=>(other); end

    # source://railties/7.0.4/lib/rails/railtie.rb#172
    def abstract_railtie?; end

    # source://railties/7.0.4/lib/rails/railtie.rb#146
    def config(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.0.4/lib/rails/railtie.rb#190
    def configure(&block); end

    # source://railties/7.0.4/lib/rails/railtie.rb#156
    def console(&blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#164
    def generators(&blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#198
    def inherited(subclass); end

    # source://railties/7.0.4/lib/rails/railtie.rb#183
    def instance; end

    # source://railties/7.0.4/lib/rails/railtie.rb#176
    def railtie_name(name = T.unsafe(nil)); end

    # source://railties/7.0.4/lib/rails/railtie.rb#152
    def rake_tasks(&blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#160
    def runner(&blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#168
    def server(&blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#148
    def subclasses; end

    protected

    # source://railties/7.0.4/lib/rails/railtie.rb#206
    def increment_load_index; end

    # source://railties/7.0.4/lib/rails/railtie.rb#204
    def load_index; end

    private

    # source://railties/7.0.4/lib/rails/railtie.rb#212
    def generate_railtie_name(string); end

    # source://railties/7.0.4/lib/rails/railtie.rb#224
    def method_missing(name, *args, **_arg2, &block); end

    # source://railties/7.0.4/lib/rails/railtie.rb#236
    def register_block_for(type, &blk); end

    # source://railties/7.0.4/lib/rails/railtie.rb#216
    def respond_to_missing?(name, _); end
  end
end

# source://railties/7.0.4/lib/rails/railtie.rb#142
Rails::Railtie::ABSTRACT_RAILTIES = T.let(T.unsafe(nil), Array)

class Rails::Railtie::Configuration
  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#8
  def initialize; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#70
  def after_initialize(&block); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#47
  def app_generators; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#39
  def app_middleware; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#54
  def before_configuration(&block); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#60
  def before_eager_load(&block); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#65
  def before_initialize(&block); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#18
  def eager_load_namespaces; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#85
  def respond_to?(name, include_private = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#81
  def to_prepare(&blk); end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#75
  def to_prepare_blocks; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#30
  def watchable_dirs; end

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#23
  def watchable_files; end

  private

  # source://railties/7.0.4/lib/rails/railtie/configuration.rb#90
  def method_missing(name, *args, &blk); end

  class << self
    # source://railties/7.0.4/lib/rails/railtie/configuration.rb#13
    def eager_load_namespaces; end
  end
end

class Rails::Secrets
  class << self
    # source://railties/7.0.4/lib/rails/secrets.rb#45
    def decrypt(data); end

    # source://railties/7.0.4/lib/rails/secrets.rb#41
    def encrypt(data); end

    # source://railties/7.0.4/lib/rails/secrets.rb#37
    def key; end

    # source://railties/7.0.4/lib/rails/secrets.rb#24
    def parse(paths, env:); end

    # source://railties/7.0.4/lib/rails/secrets.rb#49
    def read; end

    # source://railties/7.0.4/lib/rails/secrets.rb#58
    def read_for_editing(&block); end

    # source://railties/7.0.4/lib/rails/secrets.rb#22
    def root=(_arg0); end

    # source://railties/7.0.4/lib/rails/secrets.rb#53
    def write(contents); end

    private

    # source://railties/7.0.4/lib/rails/secrets.rb#103
    def encryptor; end

    # source://railties/7.0.4/lib/rails/secrets.rb#63
    def handle_missing_key; end

    # source://railties/7.0.4/lib/rails/secrets.rb#73
    def key_path; end

    # source://railties/7.0.4/lib/rails/secrets.rb#77
    def path; end

    # source://railties/7.0.4/lib/rails/secrets.rb#81
    def preprocess(path); end

    # source://railties/7.0.4/lib/rails/secrets.rb#67
    def read_key_file; end

    # source://railties/7.0.4/lib/rails/secrets.rb#89
    def writing(contents); end
  end
end

class Rails::Secrets::MissingKeyError < ::RuntimeError
  # source://railties/7.0.4/lib/rails/secrets.rb#10
  def initialize; end
end

class Rails::SourceAnnotationExtractor
  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#85
  def initialize(tag); end

  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#137
  def display(results, options = T.unsafe(nil)); end

  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#125
  def extract_annotations_from(file, pattern); end

  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#91
  def find(dirs); end

  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#99
  def find_in(dir); end

  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#83
  def tag; end

  class << self
    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#76
    def enumerate(tag = T.unsafe(nil), options = T.unsafe(nil)); end
  end
end

class Rails::SourceAnnotationExtractor::Annotation < ::Struct
  # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#55
  def to_s(options = T.unsafe(nil)); end

  class << self
    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#15
    def directories; end

    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#35
    def extensions; end

    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#21
    def register_directories(*dirs); end

    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#41
    def register_extensions(*exts, &block); end

    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#31
    def register_tags(*additional_tags); end

    # source://railties/7.0.4/lib/rails/source_annotation_extractor.rb#25
    def tags; end
  end
end

module Rails::VERSION; end

# source://railties/7.0.4/lib/rails/gem_version.rb#10
Rails::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://railties/7.0.4/lib/rails/gem_version.rb#11
Rails::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://railties/7.0.4/lib/rails/gem_version.rb#13
Rails::VERSION::PRE = T.let(T.unsafe(nil), T.untyped)

# source://railties/7.0.4/lib/rails/gem_version.rb#15
Rails::VERSION::STRING = T.let(T.unsafe(nil), String)

# source://railties/7.0.4/lib/rails/gem_version.rb#12
Rails::VERSION::TINY = T.let(T.unsafe(nil), Integer)

class Rails::WelcomeController < ::Rails::ApplicationController
  # source://railties/7.0.4/lib/rails/welcome_controller.rb#9
  def index; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end
