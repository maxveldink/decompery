# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `lookbook` gem.
# Please instead update this file by running `bin/tapioca gem lookbook`.

# source://lookbook//lib/lookbook/version.rb#1
module Lookbook
  class << self
    # source://lookbook//lib/lookbook.rb#103
    def after_change(&block); end

    # source://lookbook//lib/lookbook.rb#95
    def after_initialize(&block); end

    # source://lookbook//lib/lookbook.rb#80
    def amend_panel(*args); end

    # source://lookbook//lib/lookbook.rb#99
    def before_exit(&block); end

    # source://lookbook//lib/lookbook.rb#64
    def broadcast(event_name, data = T.unsafe(nil)); end

    # source://lookbook//lib/lookbook.rb#17
    def config; end

    # @yield [config]
    #
    # source://lookbook//lib/lookbook.rb#21
    def configure; end

    # source://lookbook//lib/lookbook.rb#25
    def data; end

    # source://lookbook//lib/lookbook.rb#29
    def data=(new_data); end

    # source://lookbook//lib/lookbook.rb#43
    def debug_data; end

    # source://lookbook//lib/lookbook.rb#76
    def define_panel(name, *args); end

    # source://lookbook//lib/lookbook.rb#72
    def define_param_input(*args); end

    # source://lookbook//lib/lookbook.rb#88
    def define_tag(name, args = T.unsafe(nil), &block); end

    # source://lookbook//lib/lookbook.rb#33
    def logger; end

    # source://lookbook//lib/lookbook.rb#60
    def pages; end

    # source://lookbook//lib/lookbook.rb#56
    def previews; end

    # source://railties/7.0.4/lib/rails/engine.rb#405
    def railtie_helpers_paths; end

    # source://railties/7.0.4/lib/rails/engine.rb#394
    def railtie_namespace; end

    # source://railties/7.0.4/lib/rails/engine.rb#409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://lookbook//lib/lookbook.rb#84
    def remove_panel(name); end

    # source://railties/7.0.4/lib/rails/engine.rb#397
    def table_name_prefix; end

    # source://lookbook//lib/lookbook.rb#68
    def theme; end

    # source://railties/7.0.4/lib/rails/engine.rb#401
    def use_relative_model_naming?; end

    # source://lookbook//lib/lookbook.rb#13
    def version; end
  end
end

class Lookbook::ApplicationController < ::ActionController::Base
  def index; end

  protected

  def assign_collections; end
  def feature_enabled?(feature); end
  def generate_theme_overrides; end
  def render_in_layout(path, layout: T.unsafe(nil), **locals); end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    def controller_path; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::ApplicationController::HelperMethods
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::OutputHelper
  include ::Lookbook::ComponentHelper
end

module Lookbook::ApplicationHelper
  def asset_path(file, version: T.unsafe(nil)); end
  def config; end
  def feature_enabled?(name); end
  def generate_id(*args); end
  def landing_path; end
  def theme; end
end

# source://lookbook//lib/lookbook/support/utils/attribute_utils.rb#2
module Lookbook::AttributeUtils
  class << self
    # source://lookbook//lib/lookbook/support/utils/attribute_utils.rb#4
    def dom_id(*args); end
  end
end

class Lookbook::BaseComponent < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Lookbook::ComponentHelper

  def initialize(alpine_data: T.unsafe(nil), **html_attrs); end

  def component_name; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options=(_arg0); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options?; end

  def render_component_tag(tag = T.unsafe(nil), **attrs, &block); end

  # source://view_component/2.74.1/lib/view_component/base.rb#485
  def render_template_for(variant = T.unsafe(nil)); end

  protected

  def alpine_component; end
  def alpine_data; end
  def alpine_encode(data); end
  def prepare_alpine_data(x_data = T.unsafe(nil)); end

  class << self
    # source://actionpack/7.0.4/lib/action_dispatch/routing/route_set.rb#564
    def _routes; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options=(value); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options?; end

    # source://view_component/2.74.1/lib/view_component/slotable_v2.rb#18
    def registered_slots; end
  end
end

# source://lookbook//lib/lookbook/code_formatter.rb#6
module Lookbook::CodeFormatter
  class << self
    # source://lookbook//lib/lookbook/code_formatter.rb#17
    def beautify(source, **opts); end

    # source://lookbook//lib/lookbook/code_formatter.rb#8
    def highlight(source, **opts); end
  end
end

# source://lookbook//lib/lookbook/collection.rb#2
class Lookbook::Collection < ::Lookbook::Entity
  include ::Enumerable

  # @return [Collection] a new instance of Collection
  #
  # source://lookbook//lib/lookbook/collection.rb#7
  def initialize(path = T.unsafe(nil), items = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/collection.rb#54
  def add(item); end

  # source://lookbook//lib/lookbook/collection.rb#118
  def as_tree(filter_hidden: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/collection.rb#40
  def clear; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/collection.rb#141
  def collapsible?; end

  # source://lookbook//lib/lookbook/collection.rb#5
  def each(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/collection.rb#73
  def find(lookup = T.unsafe(nil), &block); end

  # source://lookbook//lib/lookbook/collection.rb#81
  def find_by_id(id); end

  # source://lookbook//lib/lookbook/collection.rb#86
  def find_by_path(path); end

  # source://lookbook//lib/lookbook/collection.rb#104
  def find_first; end

  # source://lookbook//lib/lookbook/collection.rb#108
  def find_next(item); end

  # source://lookbook//lib/lookbook/collection.rb#90
  def find_parent(child); end

  # source://lookbook//lib/lookbook/collection.rb#113
  def find_previous(item); end

  # source://lookbook//lib/lookbook/collection.rb#64
  def get(name); end

  # source://lookbook//lib/lookbook/collection.rb#69
  def get_or_create(name); end

  # source://lookbook//lib/lookbook/collection.rb#20
  def id; end

  # source://lookbook//lib/lookbook/collection.rb#36
  def items; end

  # source://lookbook//lib/lookbook/collection.rb#28
  def label; end

  # source://lookbook//lib/lookbook/collection.rb#24
  def name; end

  # source://lookbook//lib/lookbook/collection.rb#48
  def non_empty_items; end

  # source://lookbook//lib/lookbook/collection.rb#95
  def ordered_entities; end

  # source://lookbook//lib/lookbook/collection.rb#32
  def position; end

  # source://lookbook//lib/lookbook/collection.rb#5
  def size(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/collection.rb#145
  def type; end

  # source://lookbook//lib/lookbook/collection.rb#44
  def visible_items; end

  protected

  # source://lookbook//lib/lookbook/collection.rb#151
  def basename; end

  class << self
    # source://lookbook//lib/lookbook/collection.rb#156
    def describe_as; end
  end
end

# source://lookbook//lib/lookbook/component.rb#2
class Lookbook::Component < ::Lookbook::Entity
  # @return [Component] a new instance of Component
  #
  # source://lookbook//lib/lookbook/component.rb#5
  def initialize(name); end

  # source://lookbook//lib/lookbook/component.rb#22
  def dir_path; end

  # source://lookbook//lib/lookbook/component.rb#18
  def full_path; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/component.rb#30
  def inline?; end

  # Returns the value of attribute name.
  #
  # source://lookbook//lib/lookbook/component.rb#3
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  #
  # source://lookbook//lib/lookbook/component.rb#3
  def name=(_arg0); end

  # source://lookbook//lib/lookbook/component.rb#10
  def path; end

  # source://lookbook//lib/lookbook/component.rb#14
  def rel_path; end

  # source://lookbook//lib/lookbook/component.rb#26
  def template_path; end
end

module Lookbook::ComponentHelper
  def build_tag_values(*args); end
  def class_names(*args); end
  def code(language = T.unsafe(nil), **attrs, &block); end
  def icon(name, **attrs); end
  def lookbook_render(ref, **attrs, &block); end
  def lookbook_tag(tag = T.unsafe(nil), **attrs, &block); end

  private

  def component_class(ref); end
  def render_method_name; end
end

Lookbook::ComponentHelper::COMPONENT_CLASSES = T.let(T.unsafe(nil), Hash)

# source://lookbook//lib/lookbook/support/errors/config_error.rb#2
class Lookbook::ConfigError < ::Lookbook::LookbookError
  # @return [ConfigError] a new instance of ConfigError
  #
  # source://lookbook//lib/lookbook/support/errors/config_error.rb#3
  def initialize(msg = T.unsafe(nil), scope: T.unsafe(nil), **kwargs); end
end

# source://lookbook//lib/lookbook/services/config_loader.rb#2
class Lookbook::ConfigLoader < ::Lookbook::Service
  # @return [ConfigLoader] a new instance of ConfigLoader
  #
  # source://lookbook//lib/lookbook/services/config_loader.rb#5
  def initialize(path, env: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/services/config_loader.rb#10
  def call; end

  # Returns the value of attribute env.
  #
  # source://lookbook//lib/lookbook/services/config_loader.rb#3
  def env; end

  # Returns the value of attribute file.
  #
  # source://lookbook//lib/lookbook/services/config_loader.rb#3
  def file; end
end

# source://lookbook//lib/lookbook/stores/config_store.rb#2
class Lookbook::ConfigStore
  # @return [ConfigStore] a new instance of ConfigStore
  #
  # source://lookbook//lib/lookbook/stores/config_store.rb#8
  def initialize(config = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#36
  def listen_extensions=(extensions = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#42
  def markdown_options=(options = T.unsafe(nil)); end

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/delegation.rb#302
  def method_missing(method, *args, **_arg2, &block); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#16
  def page_paths=(paths = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#26
  def preview_display_params; end

  # source://lookbook//lib/lookbook/stores/config_store.rb#31
  def preview_display_params=(options); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#21
  def preview_paths=(paths = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#68
  def preview_srcdoc=(enable); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#12
  def project_name=(name); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#64
  def runtime_parsing=(value); end

  # Returns the value of attribute store.
  #
  # source://lookbook//lib/lookbook/stores/config_store.rb#6
  def store; end

  # source://lookbook//lib/lookbook/stores/config_store.rb#47
  def ui_theme=(name); end

  # source://lookbook//lib/lookbook/stores/config_store.rb#56
  def ui_theme_overrides(&block); end

  private

  # source://activesupport/7.0.4/lib/active_support/core_ext/module/delegation.rb#294
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end

  class << self
    # source://lookbook//lib/lookbook/stores/config_store.rb#76
    def default_config(env: T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/stores/config_store.rb#72
    def init_from_config(env: T.unsafe(nil)); end
  end
end

# source://lookbook//lib/lookbook/stores/config_store.rb#3
Lookbook::ConfigStore::CONFIG_FILE = T.let(T.unsafe(nil), String)

class Lookbook::Connection < ::ActionCable::Connection::Base
  def connect; end

  # source://actioncable/7.0.4/lib/action_cable/connection/identification.rb#21
  def uid; end

  # source://actioncable/7.0.4/lib/action_cable/connection/identification.rb#21
  def uid=(_arg0); end

  class << self
    # source://actioncable/7.0.4/lib/action_cable/connection/identification.rb#11
    def identifiers; end
  end
end

module Lookbook::DisplayOptions; end

# source://lookbook//lib/lookbook/engine.rb#6
class Lookbook::Engine < ::Rails::Engine
  class << self
    # source://lookbook//lib/lookbook/engine.rb#143
    def app_name; end

    # source://lookbook//lib/lookbook/engine.rb#199
    def hooks; end

    # source://lookbook//lib/lookbook/engine.rb#71
    def init_listeners; end

    # source://lookbook//lib/lookbook/engine.rb#191
    def inputs; end

    # source://lookbook//lib/lookbook/engine.rb#157
    def listeners; end

    # source://lookbook//lib/lookbook/engine.rb#139
    def log_level; end

    # source://lookbook//lib/lookbook/engine.rb#130
    def mounted_path; end

    # source://lookbook//lib/lookbook/engine.rb#187
    def panels; end

    # source://lookbook//lib/lookbook/engine.rb#134
    def parser; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/engine.rb#175
    def prevent_listening?; end

    # Returns the value of attribute preview_controller.
    #
    # source://lookbook//lib/lookbook/engine.rb#203
    def preview_controller; end

    # source://lookbook//lib/lookbook/engine.rb#152
    def register_listener(listener); end

    # source://lookbook//lib/lookbook/engine.rb#171
    def reload_ui; end

    # source://lookbook//lib/lookbook/engine.rb#165
    def run_hooks(event_name, *args); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/engine.rb#179
    def running_in_rake_task?; end

    # source://lookbook//lib/lookbook/engine.rb#161
    def stop_listeners; end

    # source://lookbook//lib/lookbook/engine.rb#195
    def tags; end

    # source://lookbook//lib/lookbook/engine.rb#101
    def websocket; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/engine.rb#126
    def websocket?; end

    # source://lookbook//lib/lookbook/engine.rb#122
    def websocket_mount_path; end
  end
end

# source://lookbook//lib/lookbook/entity.rb#2
class Lookbook::Entity
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::Lookbook::Utils

  # @return [Entity] a new instance of Entity
  #
  # source://lookbook//lib/lookbook/entity.rb#5
  def initialize(reference_path); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/entity.rb#37
  def hidden?; end

  # source://lookbook//lib/lookbook/entity.rb#29
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/entity.rb#9
  def id; end

  # source://lookbook//lib/lookbook/entity.rb#13
  def label; end

  # source://lookbook//lib/lookbook/entity.rb#25
  def lookup_path; end

  # source://lookbook//lib/lookbook/entity.rb#41
  def matchers; end

  # source://lookbook//lib/lookbook/entity.rb#21
  def path; end

  # source://lookbook//lib/lookbook/entity.rb#33
  def position; end

  # source://lookbook//lib/lookbook/entity.rb#17
  def type; end

  # source://lookbook//lib/lookbook/entity.rb#25
  def url_path; end
end

# source://lookbook//lib/lookbook/error.rb#2
class Lookbook::Error < ::StandardError
  # @return [Error] a new instance of Error
  #
  # source://lookbook//lib/lookbook/error.rb#7
  def initialize(original = T.unsafe(nil), title: T.unsafe(nil), message: T.unsafe(nil), file_path: T.unsafe(nil), file_name: T.unsafe(nil), line_number: T.unsafe(nil), source_code: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/error.rb#3
  def backtrace(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/error.rb#56
  def file_lang; end

  # source://lookbook//lib/lookbook/error.rb#69
  def file_name; end

  # source://lookbook//lib/lookbook/error.rb#77
  def file_path; end

  # source://lookbook//lib/lookbook/error.rb#3
  def full_message(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/error.rb#86
  def line_number; end

  # source://lookbook//lib/lookbook/error.rb#65
  def message; end

  # source://lookbook//lib/lookbook/error.rb#95
  def parsed_backtrace; end

  # source://lookbook//lib/lookbook/error.rb#18
  def source_code; end

  # source://lookbook//lib/lookbook/error.rb#45
  def source_code_lines; end

  # source://lookbook//lib/lookbook/error.rb#61
  def title; end

  # source://lookbook//lib/lookbook/error.rb#3
  def to_s(*_arg0, **_arg1, &_arg2); end

  protected

  # source://lookbook//lib/lookbook/error.rb#112
  def source_code_end_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#116
  def source_code_highlighted_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#108
  def source_code_start_line(lines); end

  # source://lookbook//lib/lookbook/error.rb#104
  def target; end
end

# source://lookbook//lib/lookbook/error.rb#5
Lookbook::Error::LINES_AROUND = T.let(T.unsafe(nil), Integer)

# source://lookbook//lib/lookbook/features.rb#2
module Lookbook::Features
  class << self
    # source://lookbook//lib/lookbook/features.rb#14
    def enabled; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/features.rb#9
    def enabled?(name); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/features.rb#5
    def experimental_feature?(name); end
  end
end

# source://lookbook//lib/lookbook/features.rb#3
Lookbook::Features::EXPERIMENTAL_FEATURES = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/code_formatter.rb#26
class Lookbook::Formatter < ::Rouge::Formatters::HTML
  # @return [Formatter] a new instance of Formatter
  #
  # source://lookbook//lib/lookbook/code_formatter.rb#27
  def initialize(**opts); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/code_formatter.rb#60
  def highlighted?(i); end

  # source://lookbook//lib/lookbook/code_formatter.rb#64
  def line_number(i); end

  # @yield ["<div class='wrapper'>"]
  #
  # source://lookbook//lib/lookbook/code_formatter.rb#34
  def stream(tokens, &block); end
end

# source://lookbook//lib/lookbook/stores/hook_store.rb#2
class Lookbook::HookStore
  # @return [HookStore] a new instance of HookStore
  #
  # source://lookbook//lib/lookbook/stores/hook_store.rb#8
  def initialize(config = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/hook_store.rb#12
  def add_hook(event_name, callback); end

  # source://lookbook//lib/lookbook/stores/hook_store.rb#16
  def for_event(event_name); end

  # Returns the value of attribute store.
  #
  # source://lookbook//lib/lookbook/stores/hook_store.rb#5
  def store; end

  # source://lookbook//lib/lookbook/stores/hook_store.rb#6
  def to_h(*_arg0, **_arg1, &_arg2); end

  class << self
    # source://lookbook//lib/lookbook/stores/hook_store.rb#24
    def default_config; end

    # source://lookbook//lib/lookbook/stores/hook_store.rb#20
    def init_from_config; end
  end
end

# source://lookbook//lib/lookbook/stores/hook_store.rb#3
Lookbook::HookStore::CONFIG_FILE = T.let(T.unsafe(nil), String)

# source://lookbook//lib/lookbook/stores/input_store.rb#2
class Lookbook::InputStore
  # @return [InputStore] a new instance of InputStore
  #
  # source://lookbook//lib/lookbook/stores/input_store.rb#12
  def initialize(config = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/input_store.rb#20
  def add_input(input, *args); end

  # source://lookbook//lib/lookbook/stores/input_store.rb#24
  def get_input(input); end

  # Returns the value of attribute store.
  #
  # source://lookbook//lib/lookbook/stores/input_store.rb#9
  def store; end

  # source://lookbook//lib/lookbook/stores/input_store.rb#10
  def to_h(*_arg0, **_arg1, &_arg2); end

  protected

  # source://lookbook//lib/lookbook/stores/input_store.rb#38
  def build_config(name, *args); end

  class << self
    # source://lookbook//lib/lookbook/stores/input_store.rb#32
    def default_config; end

    # source://lookbook//lib/lookbook/stores/input_store.rb#28
    def init_from_config; end
  end
end

# source://lookbook//lib/lookbook/stores/input_store.rb#3
Lookbook::InputStore::CONFIG_FILE = T.let(T.unsafe(nil), String)

# source://lookbook//lib/lookbook/stores/input_store.rb#5
Lookbook::InputStore::DEFAULTS = T.let(T.unsafe(nil), Hash)

# source://lookbook//lib/lookbook/services/tags/key_value_tag_parser.rb#2
class Lookbook::KeyValueTagParser < ::Lookbook::Service
  # @return [KeyValueTagParser] a new instance of KeyValueTagParser
  #
  # source://lookbook//lib/lookbook/services/tags/key_value_tag_parser.rb#7
  def initialize(text); end

  # @raise [ParserError]
  #
  # source://lookbook//lib/lookbook/services/tags/key_value_tag_parser.rb#11
  def call; end

  # Returns the value of attribute text.
  #
  # source://lookbook//lib/lookbook/services/tags/key_value_tag_parser.rb#5
  def text; end
end

# source://lookbook//lib/lookbook/services/tags/key_value_tag_parser.rb#3
Lookbook::KeyValueTagParser::KEY_VALUE_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/lang.rb#2
module Lookbook::Lang
  class << self
    # source://lookbook//lib/lookbook/lang.rb#37
    def find(name); end

    # source://lookbook//lib/lookbook/lang.rb#41
    def guess(path); end
  end
end

# source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#2
class Lookbook::LookbookError < ::StandardError
  # @return [LookbookError] a new instance of LookbookError
  #
  # source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#5
  def initialize(msg = T.unsafe(nil), scope: T.unsafe(nil), original: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#12
  def full_message; end

  # Returns the value of attribute message.
  #
  # source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#3
  def message; end

  # Returns the value of attribute original.
  #
  # source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#3
  def original; end

  # Returns the value of attribute scope.
  #
  # source://lookbook//lib/lookbook/support/errors/lookbook_error.rb#3
  def scope; end
end

# source://lookbook//lib/lookbook/markdown.rb#4
class Lookbook::Markdown
  class << self
    # source://lookbook//lib/lookbook/markdown.rb#5
    def render(text); end
  end
end

# source://lookbook//lib/lookbook/markdown.rb#11
class Lookbook::Markdown::Renderer < ::Redcarpet::Render::HTML
  # source://lookbook//lib/lookbook/markdown.rb#12
  def block_code(code, language = T.unsafe(nil)); end
end

module Lookbook::OutputHelper
  def beautify(source, **opts); end
  def highlight(source, **opts); end
  def markdown(text = T.unsafe(nil), &block); end
  def pretty_json(obj); end
end

# source://lookbook//lib/lookbook/page.rb#2
class Lookbook::Page < ::Lookbook::Entity
  # @return [Page] a new instance of Page
  #
  # source://lookbook//lib/lookbook/page.rb#19
  def initialize(path, base_path); end

  # source://lookbook//lib/lookbook/page.rb#63
  def content; end

  # Returns the value of attribute errors.
  #
  # source://lookbook//lib/lookbook/page.rb#16
  def errors; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#55
  def footer?; end

  # source://lookbook//lib/lookbook/page.rb#35
  def full_path; end

  # source://lookbook//lib/lookbook/page.rb#59
  def get(key); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#51
  def header?; end

  # source://lookbook//lib/lookbook/page.rb#87
  def hidden; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#43
  def hidden?; end

  # source://lookbook//lib/lookbook/page.rb#79
  def id; end

  # source://lookbook//lib/lookbook/page.rb#91
  def label; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#47
  def markdown?; end

  # source://lookbook//lib/lookbook/page.rb#67
  def matchers; end

  # source://lookbook//lib/lookbook/page.rb#95
  def method_missing(method_name, *args, &block); end

  # source://lookbook//lib/lookbook/page.rb#39
  def name; end

  # source://lookbook//lib/lookbook/page.rb#71
  def parent_collections_names; end

  # source://lookbook//lib/lookbook/page.rb#83
  def position; end

  # Returns the value of attribute rel_path.
  #
  # source://lookbook//lib/lookbook/page.rb#16
  def rel_path; end

  # Returns the value of attribute sections.
  #
  # source://lookbook//lib/lookbook/page.rb#17
  def sections; end

  # Sets the attribute sections
  #
  # @param value the value to set the attribute sections to.
  #
  # source://lookbook//lib/lookbook/page.rb#17
  def sections=(_arg0); end

  # source://lookbook//lib/lookbook/page.rb#75
  def type; end

  # source://lookbook//lib/lookbook/page.rb#31
  def url_path; end

  protected

  # source://lookbook//lib/lookbook/page.rb#109
  def file_contents; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#143
  def markdown_file?; end

  # source://lookbook//lib/lookbook/page.rb#113
  def options; end

  # source://lookbook//lib/lookbook/page.rb#139
  def path_name; end

  private

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/page.rb#103
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end

  class << self
    # source://lookbook//lib/lookbook/page.rb#160
    def all; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/page.rb#156
    def any?; end

    # source://lookbook//lib/lookbook/page.rb#190
    def create(path, base_path); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/page.rb#152
    def exists?(path); end

    # source://lookbook//lib/lookbook/page.rb#148
    def find(path); end

    # source://lookbook//lib/lookbook/page.rb#182
    def page_paths; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/page.rb#186
    def section_path?(path); end
  end
end

# source://lookbook//lib/lookbook/page.rb#3
Lookbook::Page::FRONTMATTER_FIELDS = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/page_collection.rb#2
class Lookbook::PageCollection < ::Lookbook::Collection
  # source://lookbook//lib/lookbook/page_collection.rb#3
  def id; end

  # source://lookbook//lib/lookbook/page_collection.rb#7
  def label; end

  # source://lookbook//lib/lookbook/page_collection.rb#11
  def type; end

  class << self
    # source://lookbook//lib/lookbook/page_collection.rb#15
    def describe_as; end
  end
end

class Lookbook::PageController < ::ActionController::Base
  def render_page(page, locals = T.unsafe(nil)); end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::PageController::HelperMethods
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ComponentHelper
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::Lookbook::Utils
  include ::Lookbook::PageHelper
  include ::Lookbook::OutputHelper
end

module Lookbook::PageHelper
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::Lookbook::Utils

  def embed(*args, params: T.unsafe(nil), type: T.unsafe(nil), max_height: T.unsafe(nil), **opts); end
  def page_path(id); end
end

# source://lookbook//lib/lookbook/page_section.rb#2
class Lookbook::PageSection < ::Lookbook::Page
  # source://lookbook//lib/lookbook/page_section.rb#9
  def id; end

  # source://lookbook//lib/lookbook/page_section.rb#25
  def lookup_path; end

  # source://lookbook//lib/lookbook/page_section.rb#3
  def name; end

  # source://lookbook//lib/lookbook/page_section.rb#17
  def path; end

  # source://lookbook//lib/lookbook/page_section.rb#21
  def type; end

  # source://lookbook//lib/lookbook/page_section.rb#13
  def url_path; end
end

class Lookbook::PagesController < ::Lookbook::ApplicationController
  def index; end
  def show; end

  protected

  def page_controller; end
  def show_404; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionpack/7.0.4/lib/abstract_controller/helpers.rb#11
    def _helper_methods; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    def controller_path; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::PagesController::HelperMethods
  include ::ActionController::Base::HelperMethods
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::Lookbook::Utils
  include ::Lookbook::PageHelper
end

# source://lookbook//lib/lookbook/stores/panel_store.rb#2
class Lookbook::PanelStore
  # @return [PanelStore] a new instance of PanelStore
  #
  # source://lookbook//lib/lookbook/stores/panel_store.rb#17
  def initialize(config = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#22
  def add_panel(name, group_name, *args); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#63
  def count_panels(group_name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#59
  def get_panel(name, group_name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#67
  def in_group(name); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#51
  def load_config(config); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#71
  def panels(group_name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#44
  def remove_panel(name); end

  # Returns the value of attribute store.
  #
  # source://lookbook//lib/lookbook/stores/panel_store.rb#14
  def store; end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#15
  def to_h(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#31
  def update_panel(name, opts = T.unsafe(nil)); end

  protected

  # source://lookbook//lib/lookbook/stores/panel_store.rb#120
  def build_config(name, group_name, *args); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#107
  def insert_at_position(group_name, position, opts); end

  # source://lookbook//lib/lookbook/stores/panel_store.rb#113
  def insert_index(position, items_count); end

  # @raise [ConfigError]
  #
  # source://lookbook//lib/lookbook/stores/panel_store.rb#137
  def not_found!(name); end

  class << self
    # source://lookbook//lib/lookbook/stores/panel_store.rb#94
    def default_config; end

    # source://lookbook//lib/lookbook/stores/panel_store.rb#90
    def init_from_config; end

    # source://lookbook//lib/lookbook/stores/panel_store.rb#77
    def resolve_config(opts, data); end
  end
end

# source://lookbook//lib/lookbook/stores/panel_store.rb#3
Lookbook::PanelStore::CONFIG_FILE = T.let(T.unsafe(nil), String)

# source://lookbook//lib/lookbook/stores/panel_store.rb#5
Lookbook::PanelStore::DEFAULTS = T.let(T.unsafe(nil), Hash)

# source://lookbook//lib/lookbook/params.rb#4
module Lookbook::Params
  class << self
    # source://lookbook//lib/lookbook/params.rb#11
    def build_param(param, default: T.unsafe(nil), eval_scope: T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/params.rb#84
    def cast(value, type = T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/params.rb#67
    def parse_method_param_str(param_str); end

    # Parses param tag strings with the format: `[<value_type>] <input> <description?> <opts?>`
    #
    # source://lookbook//lib/lookbook/params.rb#45
    def parse_param_tag_text(text); end

    private

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/params.rb#152
    def boolean?(value); end

    # source://lookbook//lib/lookbook/params.rb#122
    def guess_input(value_type, default); end

    # source://lookbook//lib/lookbook/params.rb#130
    def guess_value_type(input, default); end

    # source://lookbook//lib/lookbook/params.rb#146
    def safe_parse_yaml(value, fallback); end
  end
end

# source://lookbook//lib/lookbook/params.rb#6
Lookbook::Params::DESCRIPTION_MATCH_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/params.rb#8
Lookbook::Params::PARAM_OPTION_KEYS = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/params.rb#5
Lookbook::Params::VALUE_TYPE_MATCH_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/parser.rb#4
class Lookbook::Parser
  # @return [Parser] a new instance of Parser
  #
  # source://lookbook//lib/lookbook/parser.rb#6
  def initialize(paths); end

  # source://lookbook//lib/lookbook/parser.rb#30
  def after_parse(&block); end

  # source://lookbook//lib/lookbook/parser.rb#21
  def parse(&block); end

  # Returns the value of attribute registry_path.
  #
  # source://lookbook//lib/lookbook/parser.rb#5
  def registry_path; end

  class << self
    # source://lookbook//lib/lookbook/parser.rb#35
    def define_tags(tags = T.unsafe(nil)); end
  end
end

# source://lookbook//lib/lookbook/support/errors/parser_error.rb#2
class Lookbook::ParserError < ::Lookbook::LookbookError
  # @return [ParserError] a new instance of ParserError
  #
  # source://lookbook//lib/lookbook/support/errors/parser_error.rb#3
  def initialize(msg = T.unsafe(nil), scope: T.unsafe(nil), **kwargs); end
end

# source://lookbook//lib/lookbook/support/utils/path_utils.rb#2
module Lookbook::PathUtils
  class << self
    # source://lookbook//lib/lookbook/support/utils/path_utils.rb#8
    def normalize_all(paths, allow_root: T.unsafe(nil)); end

    # source://lookbook//lib/lookbook/support/utils/path_utils.rb#4
    def to_absolute(path); end
  end
end

# source://lookbook//lib/lookbook/preview.rb#2
class Lookbook::Preview < ::Lookbook::Collection
  # @return [Preview] a new instance of Preview
  #
  # source://lookbook//lib/lookbook/preview.rb#8
  def initialize(preview, code_object); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/preview.rb#99
  def collapsible?; end

  # source://lookbook//lib/lookbook/preview.rb#103
  def component; end

  # source://lookbook//lib/lookbook/preview.rb#107
  def components; end

  # source://lookbook//lib/lookbook/preview.rb#64
  def default_example; end

  # source://lookbook//lib/lookbook/preview.rb#95
  def display_options; end

  # source://lookbook//lib/lookbook/preview.rb#34
  def example(example_name); end

  # source://lookbook//lib/lookbook/preview.rb#38
  def examples; end

  # source://lookbook//lib/lookbook/preview.rb#72
  def full_path; end

  # source://lookbook//lib/lookbook/preview.rb#6
  def group(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def hidden?(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#87
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview.rb#14
  def id; end

  # source://lookbook//lib/lookbook/preview.rb#60
  def items; end

  # source://lookbook//lib/lookbook/preview.rb#26
  def label; end

  # source://lookbook//lib/lookbook/preview.rb#91
  def layout; end

  # source://lookbook//lib/lookbook/entity.rb#21
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview.rb#5
  def name(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def notes(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#83
  def parent_collections_names; end

  # source://lookbook//lib/lookbook/preview.rb#6
  def position(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#22
  def preview_class; end

  # source://lookbook//lib/lookbook/preview.rb#18
  def preview_class_name; end

  # source://lookbook//lib/lookbook/preview.rb#114
  def preview_paths; end

  # source://lookbook//lib/lookbook/preview.rb#68
  def rel_path; end

  # source://lookbook//lib/lookbook/preview.rb#5
  def render_args(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def tag(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#6
  def tags(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview.rb#30
  def type; end

  # source://lookbook//lib/lookbook/preview.rb#79
  def url_path; end

  protected

  # source://lookbook//lib/lookbook/preview.rb#123
  def guess_component; end

  class << self
    # source://lookbook//lib/lookbook/preview.rb#142
    def all; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/preview.rb#138
    def any?; end

    # source://lookbook//lib/lookbook/preview.rb#162
    def errors; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/preview.rb#134
    def exists?(path); end

    # source://lookbook//lib/lookbook/preview.rb#130
    def find(path); end

    # source://lookbook//lib/lookbook/preview.rb#166
    def load!(preview_objects); end
  end
end

# source://lookbook//lib/lookbook/preview_collection.rb#2
class Lookbook::PreviewCollection < ::Lookbook::Collection
  # source://lookbook//lib/lookbook/preview_collection.rb#11
  def find_example(path); end

  # source://lookbook//lib/lookbook/preview_collection.rb#3
  def id; end

  # source://lookbook//lib/lookbook/preview_collection.rb#7
  def label; end

  # source://lookbook//lib/lookbook/preview_collection.rb#15
  def type; end

  class << self
    # source://lookbook//lib/lookbook/preview_collection.rb#19
    def describe_as; end
  end
end

# source://lookbook//lib/lookbook/preview_controller.rb#2
module Lookbook::PreviewController
  # source://lookbook//lib/lookbook/preview_controller.rb#3
  def render_example_to_string(preview, example_name); end

  # source://lookbook//lib/lookbook/preview_controller.rb#20
  def render_in_layout_to_string(template, locals, opts = T.unsafe(nil)); end
end

# source://lookbook//lib/lookbook/preview_example.rb#2
class Lookbook::PreviewExample < ::Lookbook::Entity
  # @return [PreviewExample] a new instance of PreviewExample
  #
  # source://lookbook//lib/lookbook/preview_example.rb#6
  def initialize(name, preview, code_object); end

  # source://lookbook//lib/lookbook/preview_example.rb#25
  def display_options; end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def group(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def hidden?(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#54
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview_example.rb#13
  def id; end

  # source://lookbook//lib/lookbook/preview_example.rb#21
  def label; end

  # source://lookbook//lib/lookbook/preview_example.rb#33
  def lang; end

  # source://lookbook//lib/lookbook/entity.rb#21
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview_example.rb#50
  def matchers; end

  # source://lookbook//lib/lookbook/preview_example.rb#29
  def method_source; end

  # Returns the value of attribute name.
  #
  # source://lookbook//lib/lookbook/preview_example.rb#3
  def name; end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def notes(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def params(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def position(*_arg0, **_arg1, &_arg2); end

  # Returns the value of attribute preview.
  #
  # source://lookbook//lib/lookbook/preview_example.rb#3
  def preview; end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def source(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def tag(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#4
  def tags(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/preview_example.rb#42
  def template_lang(template_path); end

  # source://lookbook//lib/lookbook/preview_example.rb#37
  def template_source(template_path); end

  # source://lookbook//lib/lookbook/preview_example.rb#46
  def type; end

  # source://lookbook//lib/lookbook/preview_example.rb#17
  def url_path; end

  protected

  # source://lookbook//lib/lookbook/preview_example.rb#64
  def full_template_path(template_path); end

  # source://lookbook//lib/lookbook/preview_example.rb#73
  def preview_paths; end

  # source://lookbook//lib/lookbook/preview_example.rb#60
  def strip_ext(path); end

  class << self
    # source://lookbook//lib/lookbook/preview_example.rb#78
    def all; end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/preview_example.rb#86
    def exists?(path); end

    # source://lookbook//lib/lookbook/preview_example.rb#82
    def find(path); end
  end
end

# source://lookbook//lib/lookbook/preview_group.rb#2
class Lookbook::PreviewGroup < ::Lookbook::Entity
  # @return [PreviewGroup] a new instance of PreviewGroup
  #
  # source://lookbook//lib/lookbook/preview_group.rb#5
  def initialize(name, preview, examples); end

  # source://lookbook//lib/lookbook/preview_group.rb#28
  def display_options; end

  # Returns the value of attribute examples.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#3
  def examples; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/preview_group.rb#36
  def hidden?; end

  # source://lookbook//lib/lookbook/preview_group.rb#48
  def hierarchy_depth; end

  # source://lookbook//lib/lookbook/preview_group.rb#16
  def label; end

  # source://lookbook//lib/lookbook/entity.rb#21
  def lookup_path; end

  # source://lookbook//lib/lookbook/preview_group.rb#44
  def matchers; end

  # Returns the value of attribute name.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#3
  def name; end

  # source://lookbook//lib/lookbook/preview_group.rb#24
  def params; end

  # source://lookbook//lib/lookbook/preview_group.rb#40
  def position; end

  # Returns the value of attribute preview.
  #
  # source://lookbook//lib/lookbook/preview_group.rb#3
  def preview; end

  # source://lookbook//lib/lookbook/preview_group.rb#56
  def tag(name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/preview_group.rb#52
  def tags(name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/preview_group.rb#20
  def type; end

  # source://lookbook//lib/lookbook/preview_group.rb#12
  def url_path; end
end

module Lookbook::PreviewHelper
  def lookbook_data(key, fallback = T.unsafe(nil)); end
  def lookbook_display(key, fallback = T.unsafe(nil)); end
end

class Lookbook::PreviewsController < ::Lookbook::ApplicationController
  def preview; end
  def show; end
  def show_legacy; end

  private

  # source://actionview/7.0.4/lib/action_view/layouts.rb#328
  def _layout(lookup_context, formats); end

  def drawer_panels; end
  def inspector_data; end
  def lookup_entities; end
  def main_panels; end
  def path_segments; end
  def prettify_error(exception); end
  def preview_controller; end
  def preview_params; end
  def set_display_options; end
  def set_params; end
  def set_title; end
  def show_404(layout: T.unsafe(nil)); end
  def target_examples; end

  class << self
    # source://activesupport/7.0.4/lib/active_support/callbacks.rb#68
    def __callbacks; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#209
    def _layout; end

    # source://actionview/7.0.4/lib/action_view/layouts.rb#210
    def _layout_conditions; end

    def controller_path; end

    # source://actionpack/7.0.4/lib/action_controller/metal.rb#210
    def middleware_stack; end
  end
end

module Lookbook::PreviewsController::HelperMethods
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::OutputHelper
  include ::Lookbook::ComponentHelper
  include ::Lookbook::ApplicationController::HelperMethods
  include ::Lookbook::PreviewHelper
end

class Lookbook::ReloadChannel < ::ActionCable::Channel::Base
  def subscribed; end
end

# source://lookbook//lib/lookbook/services/search_param_builder.rb#2
class Lookbook::SearchParamBuilder < ::Lookbook::Service
  # @return [SearchParamBuilder] a new instance of SearchParamBuilder
  #
  # source://lookbook//lib/lookbook/services/search_param_builder.rb#5
  def initialize(data); end

  # source://lookbook//lib/lookbook/services/search_param_builder.rb#9
  def call; end

  # Returns the value of attribute data.
  #
  # source://lookbook//lib/lookbook/services/search_param_builder.rb#3
  def data; end
end

# source://lookbook//lib/lookbook/services/search_param_parser.rb#2
class Lookbook::SearchParamParser < ::Lookbook::Service
  # @return [SearchParamParser] a new instance of SearchParamParser
  #
  # source://lookbook//lib/lookbook/services/search_param_parser.rb#5
  def initialize(param_value); end

  # source://lookbook//lib/lookbook/services/search_param_parser.rb#9
  def call; end

  # Returns the value of attribute param_value.
  #
  # source://lookbook//lib/lookbook/services/search_param_parser.rb#3
  def param_value; end
end

# source://lookbook//lib/lookbook/support/service.rb#2
class Lookbook::Service
  class << self
    # source://lookbook//lib/lookbook/support/service.rb#3
    def call(*args, **kwargs); end
  end
end

# source://lookbook//lib/lookbook/source_inspector.rb#2
class Lookbook::SourceInspector
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::Lookbook::Utils

  # @return [SourceInspector] a new instance of SourceInspector
  #
  # source://lookbook//lib/lookbook/source_inspector.rb#8
  def initialize(code_object, eval_scope: T.unsafe(nil)); end

  # Returns the value of attribute code_object.
  #
  # source://lookbook//lib/lookbook/source_inspector.rb#5
  def code_object; end

  # source://lookbook//lib/lookbook/source_inspector.rb#45
  def components; end

  # source://lookbook//lib/lookbook/source_inspector.rb#55
  def display_options; end

  # source://lookbook//lib/lookbook/source_inspector.rb#37
  def group; end

  # source://lookbook//lib/lookbook/source_inspector.rb#6
  def groups(*_arg0, **_arg1, &_arg2); end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/source_inspector.rb#13
  def hidden?; end

  # source://lookbook//lib/lookbook/source_inspector.rb#21
  def id; end

  # source://lookbook//lib/lookbook/source_inspector.rb#27
  def label; end

  # source://lookbook//lib/lookbook/source_inspector.rb#80
  def methods; end

  # source://lookbook//lib/lookbook/source_inspector.rb#31
  def notes; end

  # source://lookbook//lib/lookbook/source_inspector.rb#67
  def parameter_defaults; end

  # source://lookbook//lib/lookbook/source_inspector.rb#71
  def params; end

  # source://lookbook//lib/lookbook/source_inspector.rb#41
  def position; end

  # source://lookbook//lib/lookbook/source_inspector.rb#6
  def source(*_arg0, **_arg1, &_arg2); end

  # source://lookbook//lib/lookbook/source_inspector.rb#91
  def tag(name = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/source_inspector.rb#84
  def tags(name = T.unsafe(nil)); end
end

# source://lookbook//lib/lookbook/support/store.rb#2
class Lookbook::Store < ::ActiveSupport::OrderedOptions
  # @return [Store] a new instance of Store
  #
  # source://lookbook//lib/lookbook/support/store.rb#3
  def initialize(initial_data = T.unsafe(nil), opts = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/support/store.rb#9
  def []=(key, value); end

  # source://lookbook//lib/lookbook/support/store.rb#13
  def fetch(name, *args); end

  # source://lookbook//lib/lookbook/support/store.rb#17
  def method_missing(name, *args); end

  # def fetch(key, *args)
  #   super.fetch(key.to_sym, *args)
  # end
  #
  # source://lookbook//lib/lookbook/support/store.rb#61
  def to_h; end

  # source://lookbook//lib/lookbook/support/store.rb#67
  def to_hash; end

  protected

  # source://lookbook//lib/lookbook/support/store.rb#73
  def normalize_value(value); end

  private

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/support/store.rb#24
  def respond_to_missing?(name, include_private); end
end

# source://lookbook//lib/lookbook/tag.rb#4
class Lookbook::Tag
  # @return [Tag] a new instance of Tag
  #
  # source://lookbook//lib/lookbook/tag.rb#8
  def initialize(tag_object, arg_names = T.unsafe(nil), parser: T.unsafe(nil), eval_scope: T.unsafe(nil), file: T.unsafe(nil), **options); end

  # Returns the value of attribute arg_names.
  #
  # source://lookbook//lib/lookbook/tag.rb#5
  def arg_names; end

  # Returns the value of attribute args.
  #
  # source://lookbook//lib/lookbook/tag.rb#6
  def args; end

  # Sets the attribute args
  #
  # @param value the value to set the attribute args to.
  #
  # source://lookbook//lib/lookbook/tag.rb#6
  def args=(_arg0); end

  # Returns the value of attribute data.
  #
  # source://lookbook//lib/lookbook/tag.rb#5
  def data; end

  # source://lookbook//lib/lookbook/tag.rb#29
  def get_opt(key, fallback = T.unsafe(nil)); end

  # Returns the value of attribute opts.
  #
  # source://lookbook//lib/lookbook/tag.rb#6
  def opts; end

  # Sets the attribute opts
  #
  # @param value the value to set the attribute opts to.
  #
  # source://lookbook//lib/lookbook/tag.rb#6
  def opts=(_arg0); end

  # source://lookbook//lib/lookbook/tag.rb#33
  def opts_str; end

  # source://lookbook//lib/lookbook/tag.rb#25
  def tag_body; end

  # source://lookbook//lib/lookbook/tag.rb#21
  def tag_name; end

  protected

  # source://lookbook//lib/lookbook/tag.rb#66
  def arg_options; end

  # source://lookbook//lib/lookbook/tag.rb#90
  def args_count; end

  # source://lookbook//lib/lookbook/tag.rb#102
  def build_args(values); end

  # source://lookbook//lib/lookbook/tag.rb#110
  def method_missing(name, *method_args); end

  # source://lookbook//lib/lookbook/tag.rb#39
  def parse_args; end

  # source://lookbook//lib/lookbook/tag.rb#46
  def parse_opts; end

  # source://lookbook//lib/lookbook/tag.rb#94
  def parse_yaml(str, fallback = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/tag.rb#60
  def run_parser; end

  # source://lookbook//lib/lookbook/tag.rb#98
  def text_tokens; end

  # source://lookbook//lib/lookbook/tag.rb#80
  def validate_arg_names; end

  private

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/tag.rb#118
  def respond_to_missing?(name, *_arg1); end
end

class Lookbook::TagComponent < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Lookbook::ComponentHelper

  def initialize(tag: T.unsafe(nil), name: T.unsafe(nil), cloak: T.unsafe(nil), **html_attrs); end

  def call; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options; end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options=(_arg0); end

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
  def default_url_options?; end

  # source://view_component/2.74.1/lib/view_component/base.rb#485
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://actionpack/7.0.4/lib/action_dispatch/routing/route_set.rb#564
    def _routes; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options=(value); end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#95
    def default_url_options?; end

    def escape_attribute_key; end

    # source://view_component/2.74.1/lib/view_component/slotable_v2.rb#18
    def registered_slots; end
  end
end

# source://lookbook//lib/lookbook/tag_options.rb#2
class Lookbook::TagOptions
  # @return [TagOptions] a new instance of TagOptions
  #
  # source://lookbook//lib/lookbook/tag_options.rb#11
  def initialize(options_str, eval_scope: T.unsafe(nil), base_dir: T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/tag_options.rb#59
  def evaluate; end

  # source://lookbook//lib/lookbook/tag_options.rb#17
  def options; end

  # source://lookbook//lib/lookbook/tag_options.rb#21
  def resolve; end

  # source://lookbook//lib/lookbook/tag_options.rb#50
  def resolve_file_path; end

  private

  # source://lookbook//lib/lookbook/tag_options.rb#107
  def eval_match_data; end

  # @return [Boolean]
  #
  # source://lookbook//lib/lookbook/tag_options.rb#103
  def evaluatable?; end

  # source://lookbook//lib/lookbook/tag_options.rb#99
  def statement; end

  class << self
    # source://lookbook//lib/lookbook/tag_options.rb#71
    def extract_options(str); end

    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/tag_options.rb#88
    def resolveable?(str); end
  end
end

# source://lookbook//lib/lookbook/tag_options.rb#4
Lookbook::TagOptions::EVAL_OPTION_MATCH = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/tag_options.rb#7
Lookbook::TagOptions::FILE_PATH_MATCH = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/tag_options.rb#9
Lookbook::TagOptions::MATCHERS = T.let(T.unsafe(nil), Array)

# source://lookbook//lib/lookbook/tag_options.rb#3
Lookbook::TagOptions::SYMBOL_MATCH = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/tag_options.rb#6
Lookbook::TagOptions::YAML_ARRAY_MATCH = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/tag_options.rb#5
Lookbook::TagOptions::YAML_HASH_MATCH = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/stores/tag_store.rb#2
class Lookbook::TagStore
  # @return [TagStore] a new instance of TagStore
  #
  # source://lookbook//lib/lookbook/stores/tag_store.rb#8
  def initialize(config = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/tag_store.rb#13
  def add_tag(name, opts = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/stores/tag_store.rb#22
  def get_tag(name); end

  # Returns the value of attribute store.
  #
  # source://lookbook//lib/lookbook/stores/tag_store.rb#5
  def store; end

  # source://lookbook//lib/lookbook/stores/tag_store.rb#6
  def to_h(*_arg0, **_arg1, &_arg2); end

  protected

  # source://lookbook//lib/lookbook/stores/tag_store.rb#36
  def build_config(name, opts = T.unsafe(nil)); end

  class << self
    # source://lookbook//lib/lookbook/stores/tag_store.rb#30
    def default_config; end

    # source://lookbook//lib/lookbook/stores/tag_store.rb#26
    def init_from_config; end
  end
end

# source://lookbook//lib/lookbook/stores/tag_store.rb#3
Lookbook::TagStore::CONFIG_FILE = T.let(T.unsafe(nil), String)

# source://lookbook//lib/lookbook/tags.rb#2
module Lookbook::Tags
  class << self
    # source://lookbook//lib/lookbook/tags.rb#3
    def process_tags(tag_objects, file: T.unsafe(nil), eval_scope: T.unsafe(nil)); end
  end
end

# source://lookbook//lib/lookbook/template_parser.rb#4
class Lookbook::TemplateParser
  # @return [TemplateParser] a new instance of TemplateParser
  #
  # source://lookbook//lib/lookbook/template_parser.rb#8
  def initialize(content); end

  # source://lookbook//lib/lookbook/template_parser.rb#15
  def content; end

  # source://lookbook//lib/lookbook/template_parser.rb#25
  def frontmatter; end

  # source://lookbook//lib/lookbook/template_parser.rb#20
  def styles; end

  private

  # source://lookbook//lib/lookbook/template_parser.rb#60
  def extract_frontmatter(text); end

  # source://lookbook//lib/lookbook/template_parser.rb#44
  def extract_styles(text); end

  # source://lookbook//lib/lookbook/template_parser.rb#32
  def parse; end

  # source://lookbook//lib/lookbook/template_parser.rb#68
  def strip_frontmatter(text); end

  # source://lookbook//lib/lookbook/template_parser.rb#56
  def strip_styles(text); end
end

# source://lookbook//lib/lookbook/template_parser.rb#6
Lookbook::TemplateParser::FRONTMATTER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/template_parser.rb#5
Lookbook::TemplateParser::STYLE_TAGS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/theme.rb#2
class Lookbook::Theme
  # @return [Theme] a new instance of Theme
  #
  # source://lookbook//lib/lookbook/theme.rb#18
  def initialize(base_theme, overrides = T.unsafe(nil)); end

  # source://lookbook//lib/lookbook/theme.rb#32
  def favicon_dark_mode; end

  # source://lookbook//lib/lookbook/theme.rb#24
  def favicon_light_mode; end

  # source://lookbook//lib/lookbook/theme.rb#40
  def to_css; end

  class << self
    # @return [Boolean]
    #
    # source://lookbook//lib/lookbook/theme.rb#54
    def valid_theme?(name); end
  end
end

# source://lookbook//lib/lookbook/theme.rb#3
Lookbook::Theme::BASE_THEMES = T.let(T.unsafe(nil), Hash)

# source://lookbook//lib/lookbook/utils.rb#2
module Lookbook::Utils
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor

  # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options=(val); end

  protected

  # source://lookbook//lib/lookbook/utils.rb#46
  def class_name(klass); end

  # source://lookbook//lib/lookbook/utils.rb#80
  def default_url_options; end

  # source://lookbook//lib/lookbook/utils.rb#33
  def generate_id(*args); end

  # source://lookbook//lib/lookbook/utils.rb#62
  def get_frontmatter(str); end

  # source://lookbook//lib/lookbook/utils.rb#54
  def get_position_prefix(str); end

  # source://lookbook//lib/lookbook/utils.rb#50
  def normalize_matchers(*matchers); end

  # source://lookbook//lib/lookbook/utils.rb#38
  def preview_class_basename(klass); end

  # source://lookbook//lib/lookbook/utils.rb#42
  def preview_class_path(klass); end

  # source://lookbook//lib/lookbook/utils.rb#58
  def remove_position_prefix(str); end

  # source://lookbook//lib/lookbook/utils.rb#66
  def strip_frontmatter(str); end

  # source://lookbook//lib/lookbook/utils.rb#70
  def to_lookup_path(path); end

  # source://lookbook//lib/lookbook/utils.rb#74
  def to_preview_path(*args); end

  private

  # source://lookbook//lib/lookbook/utils.rb#86
  def parse_frontmatter(content); end

  # source://lookbook//lib/lookbook/utils.rb#95
  def parse_position_prefix(str); end

  class << self
    # source://actionpack/7.0.4/lib/action_dispatch/routing/route_set.rb#564
    def _routes; end

    # source://actionpack/7.0.4/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options=(val); end

    # source://lookbook//lib/lookbook/utils.rb#9
    def strip_action_view_annotations!(text); end

    # source://lookbook//lib/lookbook/utils.rb#21
    def with_optional_action_view_annotations; end

    # source://lookbook//lib/lookbook/utils.rb#13
    def without_action_view_annotations; end
  end
end

# source://lookbook//lib/lookbook/utils.rb#7
Lookbook::Utils::ACTION_VIEW_ANNOTATIONS_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/utils.rb#6
Lookbook::Utils::FRONTMATTER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/utils.rb#5
Lookbook::Utils::POSITION_PREFIX_REGEX = T.let(T.unsafe(nil), Regexp)

# source://lookbook//lib/lookbook/version.rb#2
Lookbook::VERSION = T.let(T.unsafe(nil), String)

class Redcarpet::Render::Base
  def initialize; end
end

class Redcarpet::Render::HTML < ::Redcarpet::Render::Base
  def initialize(*_arg0); end
end
