# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `shoulda` gem.
# Please instead update this file by running `bin/tapioca gem shoulda`.

# source://shoulda//lib/shoulda/version.rb#1
module Shoulda
  class << self
    # Call autoload_macros when you want to load test macros automatically in a non-Rails
    # project (it's done automatically for Rails projects).
    # You don't need to specify ROOT/test/shoulda_macros explicitly. Your custom macros
    # are loaded automatically when you call autoload_macros.
    #
    # The first argument is the path to you application's root directory.
    # All following arguments are directories relative to your root, which contain
    # shoulda_macros subdirectories. These directories support the same kinds of globs as the
    # Dir class.
    #
    # Basic usage (from a test_helper):
    # Shoulda.autoload_macros(File.dirname(__FILE__) + '/..')
    # will load everything in
    # - your_app/test/shoulda_macros
    #
    # To load vendored macros as well:
    # Shoulda.autoload_macros(APP_ROOT, 'vendor/*')
    # will load everything in
    # - APP_ROOT/vendor/*/shoulda_macros
    # - APP_ROOT/test/shoulda_macros
    #
    # To load macros in an app with a vendor directory laid out like Rails':
    # Shoulda.autoload_macros(APP_ROOT, 'vendor/{plugins,gems}/*')
    # or
    # Shoulda.autoload_macros(APP_ROOT, 'vendor/plugins/*', 'vendor/gems/*')
    # will load everything in
    # - APP_ROOT/vendor/plugins/*/shoulda_macros
    # - APP_ROOT/vendor/gems/*/shoulda_macros
    # - APP_ROOT/test/shoulda_macros
    #
    # If you prefer to stick testing dependencies away from your production dependencies:
    # Shoulda.autoload_macros(APP_ROOT, 'vendor/*', 'test/vendor/*')
    # will load everything in
    # - APP_ROOT/vendor/*/shoulda_macros
    # - APP_ROOT/test/vendor/*/shoulda_macros
    # - APP_ROOT/test/shoulda_macros
    #
    # source://shoulda-context/2.0.0/lib/shoulda/context/autoload_macros.rb#38
    def autoload_macros(root, *dirs); end
  end
end

# source://shoulda//lib/shoulda/version.rb#2
Shoulda::VERSION = T.let(T.unsafe(nil), String)
